{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my site","text":"<p>This is my new site.</p> \u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846 <p>\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a</p> <pre><code>\u7b2c\u4e8c\u884c\n\n\u7b2c\u4e09\u884c\n\n\u7b2c\u56db\u884c\n\n\u7b2c\u4e94\u884c\n...\n</code></pre> <p>\u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a</p> <p>\u8fd9\u662f success \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u6210\u529f\uff01</p> <p>\u8fd9\u662f failure \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u5931\u8d25\uff01</p> <p>\u8fd9\u662f bug \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u53d1\u73b0\u4e00\u4e2a bug\uff0c\u8bf7\u5c3d\u5feb\u4fee\u590d\uff01</p>"},{"location":"compiler/llvm/","title":"LLVM\u67b6\u6784","text":"<p><code>clang test.cpp -o test</code>\u7684\u6267\u884c\u6b65\u9aa4\uff1a</p>"},{"location":"compiler/llvm/#_1","title":"\u524d\u7aef\u8bed\u6cd5\u5206\u6790","text":"<pre><code>clang -Xclang -ast-dump -fsyntax-only test.cpp\n</code></pre> <p>\u8f93\u51fatest.cpp\u7ecf\u8fc7\u7f16\u8bd1\u5668\u524d\u7aef\u7684\u9884\u5904\u7406\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u4e4b\u540e\u751f\u6210\u7684\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\uff0c\u6700\u540e\u51e0\u884c\u663e\u793a\u4e86\u7ecf\u8fc7\u5206\u6790\u540e\u7684AST</p> <pre><code>`-FunctionDecl 0x55d7ecff3d90 &lt;test.cpp:1:1, line:4:1&gt; line:1:5 main 'int ()'\n  `-CompoundStmt 0x55d7ecff3ed0 &lt;line:2:1, line:4:1&gt;\n    `-ReturnStmt 0x55d7ecff3ec0 &lt;line:3:5, col:12&gt;\n      `-IntegerLiteral 0x55d7ecff3ea0 &lt;col:12&gt; 'int' 0\n</code></pre>"},{"location":"compiler/llvm/#_2","title":"\u524d\u7aef\u751f\u6210\u4e2d\u95f4\u4ee3\u7801","text":"<p>\u7b2c\u4e8c\u6b65\u9aa4\u65f6\u5c06\u5185\u5b58\u4e2d\u7684AST\u751f\u6210LLVM IR\u4e2d\u95f4\u4ee3\u7801\u3002</p> <pre><code>clang++ -S -emit-llvm test.cpp\n</code></pre> <p>\u751f\u6210\u4e00\u4e2atest.ll\u6587\u4ef6</p> <pre><code>; ModuleID = 'test.cpp'\nsource_filename = \"test.cpp\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n; Function Attrs: mustprogress noinline norecurse nounwind optnone uwtable\ndefine dso_local noundef i32 @main() #0 {\n  %1 = alloca i32, align 4\n  store i32 0, i32* %1, align 4\n  ret i32 0\n}\n\nattributes #0 = { mustprogress noinline norecurse nounwind optnone uwtable \"frame-pointer\"=\"all\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3, !4}\n!llvm.ident = !{!5}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{i32 7, !\"frame-pointer\", i32 2}\n!5 = !{!\"clang version 13.0.0 (https://github.com/apple/llvm-project.git f0fb631dd1a3a2988b23ba5057cd9106713cd0b4)\"}\n</code></pre> <p>\u5176\u4e2d\u7684<code>define i32 @main()</code>\u5373\u6e90\u4ee3\u7801\u8f6c\u5316\u4e3aLLVM IR\u7684\u6838\u5fc3\u90e8\u5206</p>"},{"location":"compiler/llvm/#llvmir","title":"LLVM\u540e\u7aef\u4f18\u5316IR","text":"<p>\u4f7f\u7528llvm\u4e2d\u7684opt\u8fdb\u884cO3\u4f18\u5316</p> <pre><code>opt test.ll -S -O3\n# \u6216\u8005\nclang++ -S -emit-llvm -O3 test.cpp\n</code></pre> <pre><code>; ModuleID = 'test.cpp'\nsource_filename = \"test.cpp\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local noundef i32 @main() local_unnamed_addr #0 {\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"clang version 13.0.0 (https://github.com/apple/llvm-project.git f0fb631dd1a3a2988b23ba5057cd9106713cd0b4)\"}\n</code></pre>"},{"location":"compiler/llvm/#llvm_1","title":"LLVM\u540e\u7aef\u751f\u6210\u6c47\u7f16\u4ee3\u7801","text":"<p>\u4f7f\u7528llc\u7ec4\u4ef6<code>llc test.ll</code>\uff0c\u751f\u6210<code>test.s</code></p> <pre><code> .text\n .file \"test.cpp\"\n .globl main                            # -- Begin function main\n .p2align 4, 0x90\n .type main,@function\nmain:                                   # @main\n .cfi_startproc\n# %bb.0:\n xorl %eax, %eax\n retq\n.Lfunc_end0:\n .size main, .Lfunc_end0-main\n .cfi_endproc\n                                        # -- End function\n .ident \"clang version 13.0.0 (https://github.com/apple/llvm-project.git f0fb631dd1a3a2988b23ba5057cd9106713cd0b4)\"\n .section \".note.GNU-stack\",\"\",@progbits\n</code></pre> <p>\u7136\u540e\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u81ea\u5e26\u7684\u6c47\u7f16\u5668\u3001\u8fde\u63a5\u5668\u3002\u6700\u7ec8\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f(.s ==OS Assembler -&gt; .o ==OS Linker -&gt; executable)</p>"},{"location":"embed/arm/","title":"ARM","text":""},{"location":"embed/arm/#cpu","title":"\u67e5\u770bcpu\u67b6\u6784\u4fe1\u606f","text":"<pre><code>cat /proc/cpuinfo\n\n---output:\nCPU implementer : 0x41\nCPU architecture: 8\nCPU variant     : 0x2\nCPU part        : 0xd05\n</code></pre> <p>\u4e0a\u8ff0\u4fe1\u606f\u67e5\u770b\u5730\u70b9cputype.h</p> <p>\u53ef\u4ee5\u770b\u5230:</p> <ol> <li>0x41\u662fARM cpu\u7684\u67b6\u6784\u5b9e\u73b0</li> <li>0xd05\u662f cortex A55</li> </ol>"},{"location":"embed/arm/#arm-neon","title":"Arm Neon","text":"<p>intrinsics\u67e5\u770b\u5730\u5740</p>"},{"location":"embed/arm/#_1","title":"\u4ea4\u53c9\u7f16\u8bd1","text":"<p>linux x86 \u4ea4\u53c9\u7f16\u8bd1\u4e3aarm\u67b6\u6784\u768432\u4f4d/64\u4f4d\u7a0b\u5e8f\uff08\u4f7f\u7528g++)</p> <pre><code># gcc \u4ea4\u53c9\u7f16\u8bd1\nsudo apt install gcc-arm-linux-gnueabi\n# g++ \u4ea4\u53c9\u7f16\u8bd1\nsudo apt install g++-arm-linux-gnueabi\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\u5373\u53ef\u4ee5\u50cf\u4f7f\u7528g++\u4e00\u6837\u4f7f\u7528arm-linux-gnueabi-g++\u53bb\u7f16\u8bd1\u7a0b\u5e8f\u3002\u540c\u6837\u8fde\u5e26\u7740\u5b89\u88c5\u7684\u8fd8\u6709arr2line\u3001c++filt\u3001nm\u3001objdump\u3001strip\u7b49\u4ea4\u53c9\u7a0b\u5e8f</p> <p>\u7f16\u8bd1\u5b8c\u540e\u76f4\u63a5\u8fd0\u884c\u53ef\u80fd\u4f1a\u62a5<code>No such file or directory</code>\u9519\u8bef\uff0c\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u65b9\u5f0f\u9ed8\u8ba4\u662f\u52a8\u6001\u94fe\u63a5\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u52a0<code>-static</code>\u6539\u4e3a\u9759\u6001\u94fe\u63a5\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"embed/arm/#gnueabignueabihf","title":"\u5173\u4e8egnueabi\u4e0egnueabihf","text":"<ol> <li>\u8fd9\u4e24\u4e2a\u90fd\u662f\u9002\u914darm32\u4f4d\u7684cpu\u7684\u3002gnueabi\u662f\u5bf9\u5e94ARMel port,\u652f\u6301\u65e0\u786c\u4ef6FPU(floating-point unit)\u7684\u65e732\u4f4darm\u5904\u7406\u5668\uff0c\u5373softfp\uff1b     gnueabihf\u662f\u652f\u6301\u81f3\u5c11\u662farmv7\u67b6\u6784\u768432\u4f4d\u5904\u7406\u5668\uff0c\u5373hard\uff08\u5177\u6709\u786c\u4ef6\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\uff09</li> <li>\u5bf9\u5e94\u7684\u9002\u914darm64 port\u7684\u662f armv8\u4ee5\u4e0a\u7684arm64\u4f4d\u5904\u7406\u5668\uff0c\u5bf9\u5e94\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u662fg++-aarch64-linux-gnu\u548cgcc-aarch64-linux-gnu</li> </ol>"},{"location":"embed/board/","title":"\u5f00\u53d1\u677f\u76f8\u5173","text":""},{"location":"embed/board/#system","title":"system","text":"<ol> <li> <p>\u67e5\u770bcpu\u9891\u7387\uff1a</p> <pre><code>cat /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq\n</code></pre> </li> <li> <p>\u67e5\u770b\u677f\u5b50\u6e29\u5ea6\uff1a</p> <p>```sh cat /sys/class/thermal/thermal_zone0/temp</p> </li> </ol>"},{"location":"frontend/js-ts/","title":"TypeScript","text":""},{"location":"frontend/js-ts/#_1","title":"\u53d8\u91cf\u4f20\u9012","text":"<p>tsapp\u4f20\u9012<code>Array&lt;Interface&gt;</code>\u6570\u636e\u5230napi\u5c42\u65f6\uff0c\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u663e\u793a\u5b9a\u4e49\u5176\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf:</p> <pre><code>    const arrayList: Array&lt;SurfaceConfig&gt; = [\n    { surfaceId: '155', type: 0 },\n    { surfaceId: '654', type: 1 }\n    ];\n</code></pre> <p>\u5176\u4e2d\u5fc5\u987b\u5199\u660esurfaceId, type\u7b49\uff0c\u56e0\u4e3a\u5728napi\u5904\u89e3\u6790\u65f6\u9700\u8981\u7528\u5230\u3002\u5176\u4e2d\u7684\u4f20\u9012\u89e3\u6790\u8c8c\u4f3c\u662f\u901a\u8fc7protobuf\u6765\u5b8c\u6210\u7684</p>"},{"location":"frontend/js-ts/#xcomponent","title":"XComponent\u4f7f\u7528","text":"<p>\u83b7\u53d6\u521b\u5efa\u7684XComponentController()\u7a97\u53e3\u7684surfaceId\uff0c\u5fc5\u987b\u5728\u5e03\u5c40\u65f6\u83b7\u53d6getXComponentSurfaceId()\u524d\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u5426\u5219\u641e\u51fa\u6765\u7684id\u662f \u4e2a\u65e0\u6548\u7684id</p> <pre><code>// \u53ef\u4ee5\u7684\u521d\u59cb\u5316\u65b9\u6cd5\nXComponent({\n    id: 'xcomponent',\n    type: 'surface',\n    controller: this.controllerList[index][index2]\n}).onLoad(() =&gt; {\n        let ComponentController = this.controllerList[index][index2]\n        ComponentController.setXComponentSurfaceSize({ surfaceWidth: 640, surfaceHeight: 360 })\n        this.surfaceIdList[index][index2] = ComponentController.getXComponentSurfaceId()\n    })\n    .width('100%')\n    .height('100%')\n    .padding(10)\n    .borderRadius(20)\n    .borderWidth(3)\n    .borderColor('#fff')\n</code></pre>"},{"location":"frontend/js-ts/#napi","title":"Napi","text":"<ul> <li>c++\u8f6cjs \u7ed3\u6784\u4f53struct\u5bf9\u5e94js\u4e2d\u7684object\uff0c\u6570\u7ec4vector\u5bf9\u5e94js\u4e2d\u7684array\uff0c<code>napi_set_named_property</code>\u7528\u4e8e\u5411object\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c <code>napi_set_element</code>\u7528\u4e8e\u5411array\u4e2d\u6dfb\u52a0\u5143\u7d20</li> <li>napi_unwrap\u53ef\u4ee5\u5c06env\uff0cjsThis\u4e2d\u7684js\u5bf9\u8c61\u62c6\u51fa\u6765\u5373jsPlayerNapi\u8fd9\u79cd\u5bf9\u8c61\u3002</li> </ul>"},{"location":"multimedia/av/","title":"\u97f3\u89c6\u9891","text":""},{"location":"multimedia/av/#_2","title":"\u97f3\u89c6\u9891\u540c\u6b65","text":""},{"location":"multimedia/av/#_3","title":"\u97f3\u89c6\u9891\u5411\u7cfb\u7edf\u65f6\u949f\u540c\u6b65","text":"<p>\u5f53\u5f53\u524d\u97f3\u89c6\u9891\u65f6\u95f4\u6233\u5927\u4e8e\u7cfb\u7edf\u65f6\u949f\u65f6\uff0c \u8ba9\u89e3\u7801\u7ebf\u7a0b\u4f11\u7720\u76f4\u5230\u65f6\u95f4\u6233\u4e0e\u7cfb\u7edf\u65f6\u949f\u5bf9\u9f50</p> <pre><code>auto curTime;\n// \u57fa\u4e8e\u7cfb\u7edf\u65f6\u949f\u83b7\u53d6\u4ece\u5f00\u59cb\u64ad\u653e\u6d41\u901d\u7684\u65f6\u95f4\nauto elapsedTime = curTime - startTime;\nif (ptsTime &gt; elapsedTime) {\n    av_usleep(ptsTime - elapsedTime);\n}\n</code></pre>"},{"location":"multimedia/av/#_4","title":"\u97f3\u9891\u5411\u89c6\u9891\u540c\u6b65","text":"<p>\u89c6\u9891\u6709\u56fa\u5b9a\u7684\u5237\u65b0\u9891\u7387\uff0c\u6839\u636efps\u786e\u5b9a\u6bcf\u5e27\u7684\u6e32\u67d3\u65f6\u957f\u3002\u5f53\u97f3\u9891\u65f6\u95f4\u6233\u5927\u4e8e\u89c6\u9891\u65f6\u95f4\u6233\uff08\u6216\u8d85\u8fc7\u67d0\u4e00\u9608\u503c\uff09\uff0c\u97f3\u9891\u64ad\u653e\u5668\u63d2\u5165\u9759\u97f3\u5e27\u6216\u8005\u4f11\u7720\u6216\u8005\u653e\u6162\u901f\u5ea6\uff0c\u53cd\u4e4b\u3002\u9700\u8981 \u8df3\u5e27\u3001\u4e22\u5e27\u6216\u8005\u52a0\u5feb\u64ad\u653e\u3002</p>"},{"location":"multimedia/av/#_5","title":"\u89c6\u9891\u5411\u97f3\u9891\u540c\u6b65","text":"<p>\u3010\u66f4\u5e38\u7528\u3011\u56e0\u4e3a\u4eba\u8033\u5bf9\u58f0\u97f3\u53d8\u5316\u6bd4\u773c\u775b\u5bf9\u56fe\u50cf\u53d8\u5316\u66f4\u654f\u611f</p> <p>\u97f3\u9891\u6309\u7167\u56fa\u5b9a\u7684\u91c7\u6837\u7387\u64ad\u653e\uff0c\u5f53\u89c6\u9891\u65f6\u95f4\u6233\u5927\u4e8e\u97f3\u9891\u4f60\u65f6\u95f4\u6233\u65f6\uff0c\u6e32\u67d3\u5668\u4e0d\u8fdb\u884c\u6e32\u67d3\u6216\u8005\u91cd\u590d\u4e0a\u4e00\u5e27\uff0c\u53cd\u4e4b\uff0c\u8fdb\u884c\u8df3\u5e27</p>"},{"location":"multimedia/av/#ptsdts","title":"PTS\u4e0eDTS","text":"<ul> <li>PTS\u662f\u663e\u793a\u65f6\u95f4\u6233\uff0cDTS\u662f\u89e3\u7801\u65f6\u95f4\u6233\uff0c\u7528\u4e8e\u6307\u5bfc\u64ad\u653e\u5668\u7684\u884c\u4e3a\uff0c\u5728\u7f16\u7801\u65f6\u751f\u6210\u3002\u5728ts\u6d41\u4e2d\uff0c\u7684pes header\u4e0a\u542b\u6709pts/dts\u7684\u6807\u8bc6</li> </ul> <p>\u5176\u4e2dpts\u548cdts\u5747\u536040\u4f4d\uff085\u4e2a\u5b57\u8282\uff09\u4f46\u5b9e\u9645\u53ea\u670933\u4f4d\uff0c\u7ed3\u6784\u5982\u56fe</p> <p>ts\u4e2d\u7684pts/dts\u7684\u65f6\u95f4\u57fa\u51c6\u5747\u4e3a<code>{1, 90000}</code>\uff0c\u56e0\u6b64\u7ed3\u6784\u4e2d\u7684<code>pts = 0x21000f9951</code>\uff0c\u6309\u7167\u4e0a\u8ff0\u63d0\u53d6\u5176\u4e2d\u768433\u4f4d\u5373\u4e3a<code>0x3cca8 = 249000</code>\uff0c\u4e5f\u5c31\u662f<code>249000 / 90000 = 2.766s</code></p>"},{"location":"multimedia/av/#_6","title":"\u97f3\u9891\u5e27\u7387","text":"<p>\u97f3\u9891\u5e27\u7387\u4e0e\u7f16\u7801\u683c\u5f0f\u6709\u5173\uff0c\u6bd4\u5982AAC\u683c\u5f0f\uff0c\u4e00\u822c\u662f1024\u4e2a\u91c7\u6837\u70b9(1024SPF)\u4e3a\u4e00\u5e27\uff1bmp3\u6bcf\u5e27\u4e3a1152\u4e2a\u91c7\u6837\u70b9\u3002</p> <p>\u90a3\u4e48\uff0c\u91c7\u6837\u7387\u4e3a48000hz\u7684AAC\u97f3\u9891\u6bcf\u5e27\u7684\u64ad\u653e\u65f6\u95f4\u4e3a 1024 / 48000 * 1000 = 21.33 ms\uff0c\u5e27\u7387\u5c31\u662f 1 / (\u6bcf\u5e27\u64ad\u653e\u65f6\u95f4) = 46.875(FPS)</p>"},{"location":"multimedia/av/#fdk-aac","title":"fdk-aac","text":"<ul> <li><code>aacDecoder</code>\u7684<code>buffer</code>\u662f<code>2048 * channels * sizeof(INT_PCM)</code>\uff08\u4f46\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u662f2048\uff09</li> <li><code>aacEncoder</code>\u7684<code>numInSamples</code>\u662f<code>1024 * channels</code>, <code>buffer</code>\u662f<code>maxOutBufBytes * channels * 2</code>(\u8fd9\u4e2a2\u5e94\u8be5\u662f<code>sizeof(INT_PCM)</code>\uff0c <code>maxOutBufBytes</code>\u597d\u50cf\u662f1536\u6bd41024\u5927\u4f46\u6bd42048\u5c0f)</li> </ul>"},{"location":"multimedia/ffmpeg/","title":"FFMPEG","text":""},{"location":"multimedia/ffmpeg/#ffmpeg_1","title":"ffmpeg\u6e90\u7801\u7f16\u8bd1","text":"<p>\u6700\u7ec8\u7684ffmpeg\u914d\u7f6e(\u73af\u5883Ubuntu22.04)\uff1a  |\u8f6f\u4ef6|\u7248\u672c| |:-:|:-:| |ffmpeg|2023-04-10\u5728\u5b98\u7f51\u4e0b\u7684| |fdk-aac|2.0.2| |sdl2|2.26.5| |x264|0.164.x|</p> <p>\u9ed8\u8ba4\u5b89\u88c5\u8def\u5f84\uff1a/usr/local \u53c2\u8003\u94fe\u63a5</p>"},{"location":"multimedia/ffmpeg/#_1","title":"\u5b89\u88c5\u524d\u7f6e\u4f9d\u8d56\u9879","text":"<pre><code># nasm\u662flibx264\u7684\u7f16\u8bd1\u4f9d\u8d56\nsudo apt install build-essential cmake nasm\n</code></pre>"},{"location":"multimedia/ffmpeg/#fdk-aac","title":"\u4e0b\u8f7d\u7f16\u8bd1fdk-aac","text":"<p>\u5728sourceforge\u4e0b\u8f7dfdk-aac-2.0.2.tar.gz</p> <pre><code># \u89e3\u538b\ntar -xvf fdk-aac-2.0.2.tar.gz\n# \u914d\u7f6e\ncd fdk-aac-2.0.2 &amp;&amp; ./configure\n# \u7f16\u8bd1\u5b89\u88c5\nmake &amp;&amp; sudo make install\n</code></pre>"},{"location":"multimedia/ffmpeg/#x264","title":"\u4e0b\u8f7d\u7f16\u8bd1x264","text":"<p>\u5728x264\u5b98\u7f51\u4e0b\u8f7dx264</p> <pre><code># \u89e3\u538b\ntar -xvf x264-master.tar.bz2\n# \u914d\u7f6e\ncd x264-master &amp;&amp; ./configure --disable-opencl --disable-asm --enable-static --enable-shared --enable-pic\n# \u7f16\u8bd1\u5b89\u88c5\nmake -j8 &amp;&amp; sudo make install\n</code></pre>"},{"location":"multimedia/ffmpeg/#ffmpeg_2","title":"\u4e0b\u8f7d\u7f16\u8bd1ffmpeg\u6e90\u7801","text":"<p>\u5728ffmpeg\u5b98\u7f51\u4e0b\u8f7dSource Code</p> <pre><code># \u89e3\u538b\ntar -xvf ffmpeg-snapshot.tar.bz2\n# \u914d\u7f6e\ncd ffmpeg &amp;&amp; ./configure --enable-gpl --enable-nonfree --enable-libfdk-aac --enable-libx264 --enable-filter=delogo --enable-debug --disable-optimizations --enable-shared --enable-pthreads\n# \u7f16\u8bd1\u5b89\u88c5\nmake -j4 &amp;&amp; sudo make install\n</code></pre>"},{"location":"multimedia/ffmpeg/#ffplay","title":"\u95ee\u9898\u4e00\uff1a\u5b89\u88c5\u540e\u65e0ffplay","text":"<p>\u8fd9\u6837\u7f16\u8bd1\u51fa\u6765\u4f1a\u53d1\u73b0\u6ca1\u6709ffplay\uff0c\u53ea\u6709ffmpeg\u3001ffprobe\uff0c\u662f\u56e0\u4e3a\u6ca1\u6709ffplay\u4f9d\u8d56\u7684sdl\uff0c\u518d\u5b89\u88c5sdl\uff0cSDL\u5b98\u7f51</p> <pre><code># \u914d\u7f6e\ncd SDL2-2.26.5 &amp;&amp; ./configure\n# \u7f16\u8bd1\u5b89\u88c5\nmake &amp;&amp; sudo make install\n</code></pre> <p>\u7136\u540e\u518d\u91cd\u65b0\u7f16\u8bd1\u5b89\u88c5ffmpeg</p> <pre><code># \u518d\u914d\u7f6e\u4e2d\u6dfb\u52a0 --enable-sdl2\n./configure ... --enable-sdl2\nmake -j4 &amp;&amp; sudo make install\n</code></pre>"},{"location":"multimedia/ffmpeg/#ffplay_1","title":"\u95ee\u9898\u4e8c\uff1affplay\u65e0\u6cd5\u64ad\u653e","text":"<p>\u62a5\u9519\u4fe1\u606f:</p> <pre><code># \u5f88\u591a\u90fd\u662fno such video device, \u6211\u9047\u5230\u7684\u662f\u6ca1\u6709\u97f3\u9891\u8bbe\u5907\nCould not initialize SDL - dsp: No such audio device\n</code></pre> <p>\u5b89\u88c5\u76f8\u5173\u5e93\uff08\u54b1\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4fe9\u97f3\u9891\u5e93\uff0c\u53cd\u6b63\u5b89\u88c5\u4e86\u80fd\u64ad\u5c31\u884c</p> <pre><code>sudo apt install libasound2-dev libpulse-dev\n</code></pre> <p>\u7136\u540e\u91cd\u65b0\u7f16\u8bd1\u5b89\u88c5\u4e0bSDL2\u5e94\u8be5\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"multimedia/ffmpeg/#ffmpegc","title":"\u95ee\u9898\u4e09\uff1a\u53ef\u80fdffmpeg\u547d\u4ee4\u5931\u6548/\u7f16\u5199\u7684c++\u7a0b\u5e8f\u62a5\u9519\u627e\u4e0d\u5230\u52a8\u6001\u5e93","text":"<p>\u62a5\u9519\u4fe1\u606f:</p> <pre><code>error while loading shared libraries: libavcodec.so.6\n</code></pre> <p>\u5728~/.bashrc\u4e2d\u6dfb\u52a0\u73af\u5883\u53d8\u91cf</p> <pre><code>export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n# \u5982\u679c\u662f\u627e\u4e0d\u5230\u5934\u6587\u4ef6\uff0c\u6dfb\u52a0\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\nexport C_INCLUDE_PATH=xxx/path:$C_INCLUDE_PATH\nexport CPLUS_INCLUDE_PATH=xxx/path:$CPLUS_INCLUDE_PATH\n</code></pre>"},{"location":"multimedia/ffmpeg/#ffmpeg_3","title":"ffmpeg\u547d\u4ee4","text":""},{"location":"multimedia/ffmpeg/#ffplay_2","title":"ffplay\u64ad\u653e","text":"<pre><code># \u64ad\u653eh264\nffplay *.h264\n# \u64ad\u653eaac\nffplay *.aac\n# \u64ad\u653epcm\nffplay -ar 48000 -ac 2 -f s16le -i *.pcm\n# \u64ad\u653eyuv\nffplay -f rawvideo  -video_size 1280x720 -pixel_format nv12 *.yuv\n</code></pre>"},{"location":"multimedia/ffmpeg/#_2","title":"\u63a8\u6d41","text":"<pre><code>ffmpeg -i ${input_video} -f flv rtmp://${server}/live/${stream_name}\n# -i \u8f93\u5165\u6587\u4ef6\u8def\u5f84/url\n# -f \u5f3a\u5236\u91c7\u7528\u67d0\u79cd\u683c\u5f0f rtmp\u63a8\u6d41\u4e00\u822c\u91c7\u7528flv\u6d41\u6570\u636e\n# -vcodec copy -an \u53ea\u63a8\u89c6\u9891\uff0c\u4e0d\u63a8\u97f3\u9891\n# -re read input at native frame rate, \u6309\u7167\u65f6\u95f4\u6233\u987a\u5e8f\u63a8\u6d41\n# -stream_loop -1 \u65e0\u9650\u5faa\u73af\u64ad\u653e\n# -flvflags no_duration_filesize \u4e0d\u8981\u629b\u51faduration_filesize\u8b66\u544a\nffmpeg -i ${input_video} -c copy -f rtsp rtsp://${server}/stream\n</code></pre>"},{"location":"multimedia/ffmpeg/#_3","title":"\u52a0\u65f6\u95f4\u6233\u6c34\u5370","text":"<p>ffmpeg\u56fa\u5b9a\u7801\u7387\u7ed9MP4\u589e\u52a0\u65f6\u95f4\u6c34\u5370\uff1a-ac: \u97f3\u9891\u901a\u9053   -ar: \u97f3\u9891\u91c7\u6837\u7387</p> <pre><code>./ffmpeg.exe -i 720HDR30.mp4  -vf \"drawtext=fontsize=100:text='%{pts\\:hms}':x=25:y=25:fontcolor=red\" -b 6991k -c:v libx264 -c:a copy -f mp4 output.mp4 -y\n</code></pre>"},{"location":"multimedia/ffmpeg/#b","title":"\u53bb\u9664\u89c6\u9891\u4e2d\u7684B\u5e27","text":"<p>\u5728\u4e0d\u652f\u6301B\u5e27\u7684\u89e3\u7801\u5668\u4e2d\uff0c\u5982\u679c\u4f20\u5165\u4e86B\u5e27\u4f1a\u5bfc\u81f4\u89e3\u7801\u64ad\u653e\u7684\u89c6\u9891\u5361\u987f</p> <pre><code># -bf 0\u65b9\u5f0f\nffmpeg -i *.mp4 -vcodec libx264 -bf 0 out.h264\n# -x264opts \"bframe=0\"fangs\nffmpeg -i *.mp4 -vcodec libx264 -x264opts \"bframes=0\" out.h264\n# -profile:v baseline\u65b9\u5f0f\nffmpeg -i *.mp4 -vcodec libx264 -profile:v baseline -pix_fmt yuv420p -s 1280x720 -acodec aac -r 30 -g 30 out.mp4\n</code></pre>"},{"location":"multimedia/ffmpeg/#b_1","title":"\u67e5\u770b\u89c6\u9891\u4e2d\u662f\u5426\u542b\u6709B\u5e27","text":"<pre><code>ffprobe -v quiet -show_frames -select_streams v *.mp4 | grep \"pict_type=B\"\n</code></pre>"},{"location":"multimedia/ffmpeg/#gop","title":"\u8bbe\u5b9agop\u503c","text":"<p>-g\u53c2\u6570\u6307\u5b9agop\u5e27\u6570\uff0c\u4fee\u6539gop\u65f6\u8981\u91cd\u65b0\u7f16\u7801\u5373\u9700\u8981\u6307\u5b9a -c:v libx264\u7b49\u5b57\u773c</p> <pre><code>ffmpeg -i sample.mkv -c:v libx264 -b:v 2048k -s 1920x1080 -r 30 -g 250 -c:a libfdk_aac -b:a 128k -ac 2 -ar 44100 out.mp4\n</code></pre>"},{"location":"multimedia/ffmpeg/#_4","title":"\u4fee\u6539\u5206\u8fa8\u7387","text":"<p>-vf scale=x:y</p> <pre><code>ffmpeg -i input.mp4 -vf scale=1280:720 output.mp4\n</code></pre>"},{"location":"multimedia/nginx/","title":"\u642d\u5efa\u672c\u5730\u7f51\u9875MP4\u670d\u52a1\u5668","text":""},{"location":"multimedia/nginx/#nginx","title":"\u5b89\u88c5nginx","text":"<pre><code>sudo apt install nginx\n# \u9ed8\u8ba4\u5b89\u88c5\u540e\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\u5728 /etc/nginx\u4e2d(ubuntu 22.04)\n# \u9759\u6001\u6587\u4ef6(html/module\u7b49)\u5728 /usr/share/nginx\u4e2d\n# \u65e5\u5fd7\u6587\u4ef6\u5728 /var/log/nginx\u4e2d\n</code></pre>"},{"location":"multimedia/nginx/#mp4_1","title":"\u914d\u7f6emp4\u64ad\u653e\u670d\u52a1\u5668","text":"<pre><code># \u521b\u5efavideo\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\nsudo vim /etc/nginx/conf.d/video.conf\n# \u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\nserver {\n    listen 801;\n    location ~* .*\\.mp4 {\n        root /home/lsp/Desktop/;\n        mp4;\n        mp4_buffer_size 1m;\n        mp4_max_buffer_size 50m;\n    }\n}\n</code></pre>"},{"location":"multimedia/nginx/#_1","title":"\u542f\u52a8\u670d\u52a1","text":"<pre><code>sudo service nginx restart\nsudo nginx -s reload\n</code></pre>"},{"location":"multimedia/nginx/#403","title":"\u9047\u5230403\u95ee\u9898","text":"<ol> <li> <p>\u67e5\u770b/var/log/nginx/error.log\uff0c\u663e\u793a\u65e0\u6743\u9650</p> </li> <li> <p>\u67e5\u770b\u542f\u52a8\u7684nginx\u7684\u7528\u6237 <code>ps aux | grep \"nginx: worker process\"</code>\uff0c\u6211\u8fd9\u8fb9\u53d1\u73b0\u5176\u7528\u6237\u4e0e\u6211\u5f53\u524d\u7528\u6237\u4e0d\u4e00\u81f4\uff08\u4e5f\u4e0d\u662froot\uff09</p> </li> <li> <p>\u66f4\u6539/etc/nginx/nginx.conf\u7b2c\u4e00\u884c\u7684user\u7528\u6237</p> </li> </ol> <p>\u89e3\u51b3\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668 127.0.0.1:801/demo.mp4 \u64ad\u653e\u89c6\u9891\u5566\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bbf\u4e3bwindows\u4e3b\u673a\u91cc\u9762\u7684vlc\u8f6f\u4ef6\u64ad\u653e\u7f51\u7edcurl\u89c6\u9891\uff09</p>"},{"location":"multimedia/rtp/","title":"RTP","text":""},{"location":"multimedia/rtp/#_1","title":"\u76f8\u5173\u672f\u8bed","text":"<ul> <li>FEC: Forward Error Correction \u524d\u5411\u7ea0\u9519\u3002\u5c06k bit\u4fe1\u606f\u5206\u7ec4\u7f16\u7801\uff0c\u52a0\u5165n-k\u4e2a\u5197\u4f59\u6821\u9a8c\u4fe1\u606f\uff0c\u63a5\u6536\u7aef\u53ef\u901a\u8fc7\u6821\u9a8c\u4fe1\u606f\u8fdb\u884c\u7ea0\u9519\uff0c\u964d\u4f4e\u7cfb\u7edf\u8bef\u7801\u7387\u3001 \u5ef6\u957f\u4f20\u8f93\u8ddd\u79bb\u3002</li> <li>NACK: Non-Acknowledge\uff0c\u4e8eACK\u76f8\u53cd\uff0c\u5f53\u672a\u6536\u5230\u67d0\u7f51\u54af\u5305\u65f6\u53d1\u9001\u672a\u6536\u5230\u901a\u77e5\uff08\u5177\u4f53\u53d1\u9001\u5224\u5b9a\u673a\u5236\u5177\u4f53\u770b\u5b9e\u73b0\uff09\u63a5\u6536\u7aef\u901a\u8fc7RTCP\u5c06\u4e22\u5305\u7684\u5e8f\u5217\u53f7\u901a\u77e5\u7ed9\u53d1\u9001\u7aef\uff0c\u8ba9\u53d1\u9001\u7aef\u91cd\u4f20\u8be5\u5305\u3002</li> <li>RTX: \u4e0e\u4e0a\u9762\u7684NACK\u5408\u4e00\u8d77\u662fwebrtc\u7684\u4e22\u5305\u91cd\u4f20\u7b56\u7565\u3002\u53d1\u9001\u7aef\u5728\u65b0\u7684SSRC\u4e0a\u53d1\u9001\u91cd\u4f20\u5305\u6216\u8005\u5197\u4f59\u5305\u3002</li> </ul>"},{"location":"multimedia/rtp/#h264","title":"H264","text":"<p>\u5176\u4e2dpayload type\u4e3a96\u7684\u662fh264\uff0c\u5176\u4e2d\u7684payload\u6570\u636e</p> <ul> <li>\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f<code>FU-Identifier\uff0c|F(1)|NRI(2)|Type(5)|</code>\uff0c\u5176\u4e2dNRI\u503c\u8d8a\u5927\u6807\u8bc6\u8be5nalu\u8d8a\u91cd\u8981</li> <li>\u7b2c\u4e8c\u4e2a\u5b57\u8282\u662f<code>FU-Header\uff0c|S(1)|E(1)|R(1)|Type(5)|</code>\uff0c\u5176\u4e2dS\u8868\u793a\u8d77\u59cb\u5206\u7247\uff0cE\u8868\u793a\u6700\u540e\u4e00\u4e2a\u5206\u7247\uff0cR\u662f\u4fdd\u7559\u4f4d\uff0cType\u662f\u5bf9\u5e94\u7684h264\u7684naluType\u3002</li> <li>\u540e\u7eed\u7684\u5b57\u8282\u662fh264\u9664\u53bbnalutype\u7684\u6570\u636e\uff0c\u901a\u8fc7\u524d\u4e24\u4e2a\u5b57\u8282\u5bf9nalu\u8fdb\u884c\u91cd\u6784\uff08\u4ee5\u53ca\u6dfb\u52a0startcode\uff09</li> </ul> <p>\u89e3\u6790\u65f6\uff0c\u5148\u83b7\u53d6\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u540e\u4e94\u4e2abit\uff0c\u8fd95 bit\u8868\u793a\u610f\u601d |Payload Type| Packet Type| |-|-| |0|reserved| |1-23|NALU unit\uff08\u5355\u5305\u5373\u662f\u4e00\u4e2ah264\u7684nalu\u6570\u636e\uff09 |24|STAP-A\uff08\u8fd9\u4e2a\u89c1\u8fc7\uff09| |25|STAP-B| |26|MTAP16| |27|MTAP24| |28|FU-A\uff08\u8fd9\u4e2a\u89c1\u8fc7\uff09| |29|FU-B| |30-31|reserved|</p> <p>\u5982\u679c\u662f1-23\u76f4\u63a5\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u540e\u4e94\u4f4d\u5c31\u662fh264\u7684naluType\u4e86\u3002\u5176\u4ed6\u7684\u5982FU-A\uff0828\uff09\uff0c\u5219nalu\u662f\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u524d3\u4e2abit\u548c\u7b2c\u4e8c\u4e2a\u5b57\u8282\u7684\u540e5\u4e2abit\u3002\u6ce8\u610f\u8fd9\u53ea\u662f \u83b7\u53d6\u5230\u4e86nalu\uff0c\u8fd8\u5e94\u6839\u636e\u7b2c\u4e8c\u4e2a\u5b57\u8282\u7684S bit\u662f\u5426\u4e3a1\uff0c\u5bf9\u5e94\u63d2\u5165<code>0x00000001</code>\u7684startcode\uff081~23\u7684\u65e0\u8111\u63d2<code>0x00000001</code>\uff09\u3002</p>"},{"location":"multimedia/rtp/#nalu","title":"Nalu","text":"<p>8\u5b57\u8282: (1bit\u7981\u6b62\u4f4d) + (2bit\u4f18\u5148\u7ea7\u4f4d) + (5bit naltype)</p> <ul> <li>naltype:</li> <li>1: \u975eIDR\u7684\u4e00\u4e2aslice</li> <li>5: IDR</li> <li>6: SEI</li> <li>7: SPS\uff0c\u5e8f\u5217\u53c2\u6570\u96c6\u5e27\uff0c\u5305\u62ec\u89c6\u9891\u7f16\u7801\u7684\u5206\u8fa8\u7387\u3001\u5e27\u7387\u3001\u8272\u5f69\u7a7a\u95f4\u7b49\uff08ts\u6d41\u4e2didr\u5e27\u524d\u53d1\u9001sps\uff09</li> <li>8: PPS\uff0c\u56fe\u50cf\u53c2\u6570\u96c6\u5e27\uff0c\u5305\u62ec\u7801\u7387\u3001\u91cf\u5316\u53c2\u6570\u3001\u53c2\u8003\u5e27\uff08ts\u6d41\u4e2d\u975eidr\u5e27\u524d\u53d1\u9001pps\uff09</li> <li>9: AUD(Access Unit Delimiter \u8bbf\u95ee\u5206\u9694\u7b26)\uff0c\u8868\u793analu\u7684\u5206\u754c\u7b26\uff0c\u7528\u4e8e\u89e3\u7801\u5668\u63a5\u6536\u5230nalu\u65f6\u6b63\u786e\u7684\u89e3\u7801\u548c\u5904\u7406\u3002</li> </ul> <p>\u6253\u5305es\u5c42\u6570\u636e\u65f6pes\u5934\u548ces\u6570\u636e\u4e4b\u95f4\u8981\u52a0\u5165type\u4e3a9\u7684nalu\uff0c\u5173\u952e\u5e27slice\u524d\u5fc5\u987b\u63d2\u5165type=7\u7684sps\u548ctpye=8\u7684pps\u3002</p> <ul> <li>\u9632\u6b62\u7ade\u4e89(emulation prevention)\u673a\u5236\uff1a h264\u5728\u7f16\u7801\u65f6\uff0c\u5728\u6bcf\u4e2analu\u524d\u52a0\u8d77\u59cb\u7801(0x00000001/0x000001\uff0c4\u5b57\u8282\u7684startcode\u8868\u793a1\u5e27\u5f00\u59cb)\u3002\u4e3a\u9632\u6b62nal\u5185\u90e8\u51fa\u73b00x000001\u6570\u636e\uff0c\u5728\u7f16\u7801nal\u65f6\uff0c\u82e5 \u68c0\u6d4b\u5230\u6709\u8fde\u7eed\u4e24\u4e2a0x00\u5b57\u8282\uff0c\u5c31\u5728\u540e\u9762\u63d2\u5165\u4e00\u4e2a0x03</li> </ul>"},{"location":"multimedia/rtp/#aac","title":"AAC","text":"<p>payload\u4e3a97\u4e14\u662fMEPG4-GENERIC\u7684\u662faac\uff0c\u5176\u4e2d\u9664\u53bb\u542b\u6709ssrc\u3001pt\u3001\uff08\u53ef\u80fd\u6709\u7684csrc\uff09\u7b49\u4fe1\u606f\u7684rtp header\u540e\u7684payload\u662f\u6709AU header\u7684\u3002</p> <p>\u5176\u4e2d\u9996\u5148\u662f\u524d\u4e24\u4e2a\u5b57\u8282\u8868\u793aAU-headers-length\uff08\u5355\u4f4d\u662fbit\uff09\uff0c\u5982<code>00 10</code>\u8868\u793aAu-header\u5360\u752816\u4e2abit\uff0c\u800cAu-header\u7ed3\u6784\u4e3a<code>|Au-size|Au-index/Au-index-delta|CTS-flag|CTS-delta|DTS-flag| DTS-delta|RAP-falg|Stream-state|</code>\u524d\u4e09\u4e2a\u7531sdp\u4e2d\u53d1\u8fc7\u6765\u7684\u5bf9\u5e94\u7684\u4e09\u4e2a\u5b57\u6bb5\u51b3\u5b9a\uff0c\u5269\u4f59\u7684\u503c\u90fd\u662f\u53ef\u9009\u7684\uff08\u770bsdp\u4e2d\u662f\u5426\u51fa\u73b0\u4e14\u662f\u5426\u4e0d\u4e3a0\uff09</p> <p>\u7591\u60d1\uff1a\u6709\u4e9bsdp\u4e2d\u53d1\u4e86index_delta\uff0c\u4f46\u8fd8\u662f\u9ed8\u8ba4\u628aau-header\u5927\u5c0f\u8ba1\u7b97\u65f6\u6ca1\u5e26\u4e0adelta\uff0c\u4e0d\u61c2\u662f\u4e3a\u4ec0\u4e48\uff08\u5173\u952e\u662f\u8fd8\u80fd\u6b63\u5e38\u7528\uff09</p>"},{"location":"multimedia/rtp/#adif","title":"ADIF","text":"<p>\u97f3\u9891\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff08Audio Data Interchange Format\uff09\uff0c\u5e38\u7528\u4e8e\u78c1\u76d8\u6587\u4ef6\u4e2d\u3002header + raw_data</p>"},{"location":"multimedia/rtp/#adts","title":"ADTS","text":"<p>\u97f3\u9891\u6570\u636e\u4f20\u8f93\u6d41\uff08Audio Data Transport Stream\uff09\uff0c\u6709\u4e00\u4e2a\u540c\u6b65\u5b57\u7684bit\u6d41\u3002</p> <ul> <li>ADTS\u5934\u957f\u5ea6\u53ef\u80fd\u4e3a7\u5b57\u8282\u62169\u5b57\u8282\u3002\u5206\u4e3a\u4e24\u4e2a\u57dfadts_fixed_header\uff0828bit\uff09\u548cadts_variable_header\uff0828bit\uff09\uff0cfixed\u4e2dprotection_absent\uff08\u9519\u7801\u6821\u9a8c\uff09\u4e3a0\u65f69\u5b57\u8282\uff0c \u4e3a1\u65f67\u5b57\u8282\u3002</li> <li>fixed_header\u7684\u524d12\u4e2abit\u4e3asyncword\uff08\u540c\u6b65\u5934\uff09\uff0c\u603b\u662f0xFFF\uff0c\u8868\u793a\u4e00\u4e2aADTS\u5e27\u7684\u5f00\u59cb\u3002\u8be5\u56fa\u5b9a\u5934\u6bcf\u5e27\u90fd\u76f8\u540c\uff0c\u5305\u542bAAC\u97f3\u9891\u7ea7\u522b\u3001\u91c7\u6837\u7387\u3001\u58f0\u9053\u4fe1\u606f\u3002</li> <li>variable_header\u5305\u542b\u5e27\u957f\u5ea6\u7684\u4fe1\u606f(13bit)\u548cadts_buffer_fullness\uff08\u4e3a0x7ff\u8868\u793a\u7801\u7387\u53ef\u53d8\uff09</li> </ul>"},{"location":"multimedia/rtsp/","title":"RTSP","text":"<p>\u4f7f\u7528rtsp\u62c9\u6d41\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u534f\u8bae\u4ea4\u4e92\uff0c\u6d41\u7a0b\u5982\u4e0b(\u4ee5tcp\u4e3a\u4f8b)</p> <p></p> <ol> <li>\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001OPTIONS\u62a5\u6587\uff0c\u5e26\u4e0artsp\u7684\u5730\u5740\u548c\u7248\u672c\u4fe1\u606f\uff0c\u4ee5\u53causer-agent\u4fe1\u606f</li> <li>\u670d\u52a1\u7aef\u56de\u590d 200 OK\uff0c\u4ee5\u53ca\u516c\u5f00\u7684\u65b9\u6cd5</li> <li>\u5ba2\u6237\u7aef\u53d1\u9001DESCRIBE\u62a5\u6587\uff0c\u8bf7\u6c42\u63a5\u6536sdp\u62a5\u6587\uff08Accept: application/sdp\uff09</li> <li>\u670d\u52a1\u7aef\u56de\u590d 200 OK\uff0c\u4ee5\u53caSession Description Protocol\u4fe1\u606f\uff08h264\u7684\u8bdd\u91cc\u9762payload type\u4e00\u822c\u4e3a96\uff0c\u4e14\u542b\u6709\u88abbase64\u7f16\u7801\u8fc7\u7684sps\u548cpps\u4fe1\u606f\uff09</li> <li>\u5ba2\u6237\u7aef\u53d1\u9001SETUP\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff0c\u9644\u5e26\u4e0a\u63d0\u4f9b\u7684\u5ba2\u6237\u7aef\u7684rtp/rtcp\u7684\u7aef\u53e3\uff0c\u5e76\u5728rtsp\u5730\u5740\u4e0a\u5199\u660e\u662f\u90a3\u4e2atrack\u3002\uff08\u97f3\u89c6\u9891\u7684\u8bdd\u662f\u97f3\u9891\u548c\u89c6\u9891\u4e24\u4e2atrack\uff0c\u4e00\u822c\u89c6\u9891\u662ftrack1\uff0c \u97f3\u9891\u662ftrack2\uff0c\u8981\u53d1\u9001\u4e24\u6b21SETUP\u8bf7\u6c42</li> <li>\u670d\u52a1\u7aef\u56de\u590d 200 OK\uff0c\u8fd4\u56desession id\u4fe1\u606f\uff0c\u8d85\u65f6\u65f6\u95f4\uff0c\u670d\u52a1\u7aef\u5bf9\u5e94\u7684\u7aef\u53e3\u4fe1\u606f\u4ee5\u53cassrc</li> <li>\u5ba2\u6237\u7aef\u53d1\u9001PLAY\u8bf7\u6c42\uff0c\u5e26\u4e0a\u4e0a\u4e00\u6b65\u8fd4\u56de\u7684session\u4fe1\u606f\uff0c\u8bf7\u6c42\u5f00\u59cb\u64ad\u653e</li> <li>\u670d\u52a1\u7aef\u56de\u590d 200 OK\uff0c\u64ad\u653e\u6210\u529f</li> </ol>"},{"location":"multimedia/rtsp/#h264","title":"H264","text":"<p>\u5176\u4e2dh264\u7684sdp\u4e2d\u542b\u6709\u7684sps\u3001pps\u4fe1\u606f\u662f\u7ecf\u8fc7<code>base64</code>\u7f16\u7801\u7684</p> <p></p> <p>\u5373<code>sprop-parameter-sets=</code>\u540e\u9762\u7684\u53ef\u6253\u5370\u5b57\u7b26\u4e32\uff0c\u901a\u8fc7\u5c06<code>nal unit 1 string</code>\u7ecf\u8fc7<code>base64</code>\u89e3\u7801\u540e\uff0c\u518d\u4ee516\u8fdb\u5236\u663e\u793a(<code>hexdump -C</code>)\u5c31\u53ef\u4ee5\u5f97\u523067\u5f00\u5934\u7684\u6570\u636e\u4e86</p>"},{"location":"multimedia/rtsp/#aac","title":"AAC","text":"<p>\u5176\u4e2daac\u4e5f\u6709\u4fe1\u606f\u4f1a\u5728sdp\u4e2d\u53d1\u9001\u8fc7\u53bb\u91cc\u9762\u542b\u6709\u4e00\u4e2a<code>config</code>\u5b57\u6bb5</p> <p></p> <p>\u56fe\u4e2d\u5728<code>a=rtpmap</code>\u4e2d\u663e\u793a\u97f3\u9891\u7684\u683c\u5f0f\u4e3a<code>MPEG4-GENERIC</code>\uff0c\u91c7\u6837\u7387\u4e3a48khz\uff0c\u901a\u9053\u6570\u4e3a2</p> <p>\u5728<code>a=fmtp</code>\u4e2d\u663e\u793a\u4e86\u4e00\u5806\u8be6\u7ec6\u4fe1\u606f\uff0c\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u662f<code>config=1190</code>\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u8fd9\u662f\u4e24\u4e2a16\u8fdb\u5236\u7684\u5b57\u8282</p> audioObjectType samplingFrequencyIndex channelConfiguration unused 5 4 4 3 <p>\u4ec5\u524d13\u4e2abit\u6709\u6548\uff0c\u4e14<code>audioObjectType</code>\u901a\u5e38\u662f1\u6216\u80052\u3002</p> <p>\u6bd4\u5982\u8fd9<code>0x1190=0001 0001 1001 0000</code>\uff0c\u4e2d\u7684<code>samplingFrequencyIndex</code>\u4e3a<code>0011</code>\u5373\u5bf9\u5e94\u7684\u91c7\u6837\u7387\u662f48khz\uff0c<code>channelConfiguration</code>\u4e3a<code>0010</code>\u53732\u3002</p> <p>\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u662f\u6784\u6210AAC\u7684ADTS\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u4fe1\u606f\u662flength\uff08\u8868\u793aadts+aac\u6570\u636e\u7684\u957f\u5ea6\uff09\uff0c\u5927\u90e8\u5206\u7684adts\u957f\u5ea6\u4e3a7\u4e2a\u5b57\u8282\uff08\u6240\u4ee5\u6709\u4e9b\u5730\u65b9\u7684\u65f6\u95f4\u76f4\u63a5\u5c31\u628a\u8fd9\u4e2alength = 7 + aacData.size\uff09</p>"},{"location":"multimedia/simple-rtsp-server/","title":"MediaMTX","text":"<ol> <li>\u89e3\u538bmediamtx\uff0c\u6267\u884c\u5176\u4e2d\u7684 mediamtx.exe \u7a0b\u5e8f</li> <li> <p>\u4f7f\u7528ffmpeg.exe \u63a8\u6d41\u89c6\u9891</p> <pre><code>ffmpeg.exe -re -stream_loop -1 -i sharing/360p.mp4 -c copy -f rtsp rtsp://127.0.0.1:8554/stream\n</code></pre> <p>\u4e0a\u9762\u7684\u547d\u4ee4\u4e2d <code>sharing/360p.mp4</code>\u662f\u8981\u63a8\u9001\u7684\u672c\u5730\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84</p> </li> <li> <p>rtsp\u62c9\u53d6\u7684\u5730\u5740\u5373<code>rtsp://127.0.0.1:8554/stream</code>\uff0c\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u7ed9player\u5b9e\u4f8b\u7684url\u5c5e\u6027\u5373\u53ef</p> </li> </ol>"},{"location":"multimedia/wfd/","title":"WFD","text":"<ul> <li>\u534f\u8bae\u4ea4\u4e92\uff1a</li> <li>m1: source -&gt; sink option</li> <li>m2: sink -&gt; source option</li> <li>m3: source -&gt; sink get_parameter  \u83b7\u53d6\u97f3\u89c6\u9891\u683c\u5f0f<ul> <li>\u5982\u679csource\u4fa7\u5bf9sink reply\u7684parameter\u4e0d\u652f\u6301\uff0c\u53ef\u80fd\u4f1a\u76f4\u63a5\u8d70tcp\u7684\u56de\u6536\u6d41\u7a0b\uff0c\u5bf9\u5e94\u7684socket\u4f1a\u62a5     \"Resource temporarily unavailable\"\u9519\u8bef\uff0c\u800c\u65e0\u540e\u7eed\u7684set_parameter\u7b49\u6d41\u7a0b</li> <li>sink\u7684reply\u4e2d\u7684\u97f3\u9891 <code>AAC_48000_16_2 = \"00000001 00\"; AAC_48000_16_4 = \"00000002 00\"</code></li> </ul> </li> <li> <p>m4: source -&gt; sink set_parameter // m1~m4 may count 2s</p> </li> <li> <p>m5: source -&gt; sink set_parameter wfd_trigger_method SETUP</p> </li> <li>m6: sink -&gt; source SETUP (source respond the port ssrc, etc)</li> <li> <p>m7: sink -&gt; source PLAY</p> </li> <li> <p>Microsoft\u7684Miracast\u662f\u975e\u6807\u7684R2\u7b49\u7ea7\u7684WFD\u534f\u8bae\u5b9e\u73b0\uff0c\u5176\u4e2d\u4f7f\u7528\u4e867250\u7684\u7aef\u53e3\u7528\u4e8ewfd\u534f\u8bae\u4ea4\u4e92(7236)\u7684\u63a7\u5236\uff08\u4e00\u822c\u5728\u8fde\u63a5\u524d\u548c\u65ad\u5f00\u524d\u67097250\u7684\u4e00\u4e9btcp\u5305\u7684\u4ea4\u4e92\uff09</p> </li> </ul>"},{"location":"network/dhcp/","title":"DHCP","text":""},{"location":"network/dhcp/#_1","title":"\u6d41\u7a0b","text":"<ol> <li>0.0.0.0 -&gt; 255.255.255.255  discover\u62a5\u6587\uff0cclient\u53d1\u73b0DHCP\u670d\u52a1\u5668\uff08\u5e26\u4e0aclient mac\u5730\u5740\uff09</li> <li>server.ip -&gt; 255.255.255.255 offer\u62a5\u6587\uff0cDHCP\u670d\u52a1\u5668\u5411client\u63d0\u4f9bip\u5730\u5740\uff08\u5e26\u4e0aclient mac\u5730\u5740\uff09</li> <li>0.0.0.0 -&gt; 255.255.255.255 request\u62a5\u6587\uff0cclient\u9009\u62e9ip\u5730\u5740\uff0c\u8868\u793a\u4f7f\u7528\u8fd9\u4e2aIP\u5730\u5740\uff08dhcp\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff09</li> <li>server.ip -&gt; 255.255.255.255 ack\u62a5\u6587\uff0cDHCP\u670d\u52a1\u5668\u901a\u77e5client\u6b64ip\u88abclient\u5360\u7528\u6210\u529f\u3002\uff08\u6b64\u65f6client\u8fd8\u6ca1ip\u5730\u5740\uff0c\u8be5\u62a5\u6587client\u6536\u5230\u540e\u624d \u62e5\u6709ip\u5730\u5740\uff09</li> </ol> <p>client\u6536\u5230\u540e\uff0c\u53ef\u80fd\u4f1a\u5e7f\u64ad\u53d1\u9001arp\u5305\uff08\u8c01\u662fserver.ip\uff0c\u544a\u8bc9client\u88ab\u5206\u914d\u7684ip\uff09\uff1bclient\u6536\u5230server.ip\u5bf9\u5e94\u7684mac\u4e4b\u540e\u5c31\u786e\u8ba4\u4e86\u81ea\u5df1ip\u88ab\u5206\u914d\u6210\u529f\u4e86</p>"},{"location":"network/dhcp/#_2","title":"\u7279\u6b8a\u5730\u5740","text":""},{"location":"network/dhcp/#0000","title":"0.0.0.0","text":"<ul> <li>DHCP\u5ba2\u6237\u7aef\u8fd8\u672a\u83b7\u53d6\u5230\u5177\u4f53ip\u65f6\u53d1\u9001\u7684Discover\u5305\u4e2d\u6e90\u5730\u5740\u4e3a\"0.0.0.0\"\u3002\uff08\u5ba2\u6237\u7aef\uff09</li> <li>\u670d\u52a1\u7aef\u76d1\u542cip\uff0c\u4f7f\u670d\u52a1\u8bbf\u95ee\u65b9\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u7aef\u591a\u4e2aip\u5730\u5740\u8bbf\u95ee\u670d\u52a1\u7aef\u7684\u670d\u52a1\u3002\uff08\u5185\u7f51+\u5916\u7f51\u7684\u8bbf\u95ee\u5747\u53ef\u4ee5\u88ab\u76d1\u542c\u5230\uff0c\u5982\u679c\u76d1\u542c127.0.0.1\u5219\u53ea\u80fd\u76d1\u542c\u5185\u7f51\u7684ip\uff09</li> </ul>"},{"location":"network/dhcp/#255255255255","title":"255.255.255.255","text":"<ul> <li>\u76ee\u7684\u5730\u5740\u4e3a255.255.255.255\u8868\u793a\u4f7f\u4e00\u4e2a\u5e7f\u64ad\u62a5\u6587\uff0c\u672c\u5c40\u57df\u7f51\u5185\u6240\u6709\u4e3b\u673a\u90fd\u4f1a\u6536\u5230\uff0c\u5373DHCP\u5ba2\u6237\u7aef\u53d1\u51fa\u7684Discover\u5305</li> </ul>"},{"location":"network/epoll/","title":"EPOLL","text":""},{"location":"network/epoll/#fd-epoll","title":"\u57fa\u4e8efd epoll\u7684\u5b9a\u65f6\u5668\u63d0\u524d\u5524\u9192","text":"<ul> <li> <p>\u5728epollFd\u7684\u76d1\u542cfd\u4e0a\u65b0\u5efa\u4e00\u4e2aawakenFd\uff0c\u5f53\u5b9a\u65f6\u5668\u88ab\u7528\u6237\u624b\u52a8\u5173\u95ed\u65f6\uff08ShutDown\uff09\uff0c\u8c03\u7528write\u7cfb\u7edf\u51fd\u6570\u5728awakenFd\u4e0a\u53d1\u9001\u4efb\u610f\u4fe1\u606f\uff0c\u89e6\u53d1epoll_wait \u7684\u8fd4\u56de\uff08\u800c\u4e0d\u662f\u7b49\u5f85\u8bbe\u5b9a\u7684\u8d85\u5e02\u65f6\u95f4\u540e\u624d\u8fd4\u56de\uff09\uff0c\u5728epoll_wait\u8fd4\u56de\u540e\uff0c\u4f1a\u6536\u5230awakenFd\u53d1\u9001\u7684\u4efb\u610f\u4fe1\u606f\uff0c\u8fdb\u884cread\u8bfb\u53d6\u540e\uff0c\u5373\u53ef\u63d0\u524d\u89e3\u9664epoll_wait\u7684\u963b\u585e</p> </li> <li> <p>\u540c\u6837\u53ef\u4ee5\u7528\u4e8e\u63d0\u524d\u7ed3\u675f\u6709\u8d85\u65f6\u7684epoll\u76d1\u542c</p> <pre><code># include &lt;sys/epoll.h&gt;\n# include &lt;sys/eventfd.h&gt;\n\n// 1. \u542f\u52a8\u65f6\uff0c\u5728epollFd_\u4e0a\u6dfb\u52a0awakenFd\u76d1\u542c\nif (epollFd_ &lt; 0) {\n    epollFd_= epoll_create1(EPOLL_CLOEXEC);\n}\n\nif (awakenFd_&lt; 0) {\n    awakenFd_ = eventfd(0, EFD_CLOEXEC | EFD_NONBLOCK);\n    if (awakenFd_ &lt; 0) {\n        std::cerr &lt;&lt; \"Failed to create awakenFd\\n\";\n        return;\n    }\n}\n\nstruct epoll_event epollEvent = {\n    .events = EPOLLIN | EPOLLET,\n    .data   = {.fd = awakenFd_},\n};\n\nepoll_ctl(epollFd_, EPOLL_CTL_ADD, awakenFd_, &amp;epollEvent);\n\n// 2. \u5173\u95ed\u65f6(ShutDown)\uff0cwrite sth.\nstatic const uint64_t incre = 1;\nwrite(awakenFd_, &amp;incre, sizeof(incre));\n\n// 3. \u5728\u5b9a\u65f6\u5668\u7684\u963b\u585e\u7ebf\u7a0b\u4e2depoll_wait\u6536\u5230write\u4e8b\u4ef6\u65f6\u5c06\u4f1a\u8fd4\u56de\nstd::vector&lt;struct epoll_event&gt; epollEvents(maxEvents_);\nint nfd = epool_wait(epollFd_, &amp;epollEvents[0], static_cast&lt;int&gt;(epollEvents.size()), timeout);\n\nfor (int index = 0; index &lt; nfd; ++index) {\n    if (epollEvents[index].data.fd == awakenFd_) {\n        uint64_t value = 0;\n        read(awakenFd_, &amp;value, sizeof(value));\n        continue;\n    }\n    // process other common event\n}\n\nif (nfd == maxEvents_) {\n    // \u5bf9maxEvents_\u6269\u5bb9\uff0c\u521d\u59cb\u503c\u53ef\u80fd\u662f8\u7b49\u3002\u3002\n    maxEvents_ *= 2;\n}\n\n// 4. \u6e05\u7406\u8be5\u5b9a\u65f6\u5668\u65f6\uff0c\u540c\u65f6\u6e05\u7406awakenFd\nif (awakenFd_&gt; 0) {\n    close(awakenFd_);\n    awakenFd_ = -1;\n}\n</code></pre> </li> </ul>"},{"location":"network/lt-et/","title":"LT\u4e0eET\u6a21\u5f0f","text":"<p>\u8be6\u89e3</p> <ol> <li> <p>LT: \u6c34\u5e73\u89e6\u53d1\uff0c\u53ea\u8981\u6709\u6570\u636e\u5c31\u4f1a\u89e6\u53d1epoll_wait     &gt; \u9002\u7528\u4e8e\u5904\u7406\u5c11\u91cf\u6570\u636e\u6216\u8005\u9700\u8981\u786e\u4fdd\u6570\u636e\u5b8c\u6574\u6027\u7684\u573a\u666f\u3002     &gt; \u9002\u7528\u4e8e\u4f7f\u7528\u963b\u585e\u5f0fIO\u6a21\u578b\uff08\u5982select\uff09\u7684\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230epoll\u7684\u8fc7\u6e21\u671f\u3002</p> </li> <li> <p>ET\uff1a\u8fb9\u6cbf\u89e6\u53d1\uff0cepoll_wait\u53ea\u89e6\u53d1\u4e00\u6b21     &gt; \u9002\u7528\u4e8e\u9ad8\u5e76\u53d1\u3001\u9ad8\u541e\u5410\u91cf\u7684\u573a\u666f\uff0c\u5373\u5f53\u6570\u636e\u6d41\u5230\u8fbe\u65f6\uff0c\u5185\u6838\u7acb\u5373\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u907f\u514d\u4e86\u91cd\u590d\u89e6\u53d1\u4e8b\u4ef6\u548c\u91cd\u65b0\u8bfb\u53d6\u5957\u63a5\u5b57\u7f13\u5b58\u7684\u5f00\u9500\u3002     &gt; \u9002\u7528\u4e8e\u9700\u8981\u7cbe\u786e\u63a7\u5236\u7684\u573a\u666f\uff0c\u5373\u5f53\u6570\u636e\u6d41\u5230\u8fbe\u65f6\uff0c\u5185\u6838\u53ea\u4f1a\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u4e00\u6b21\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u5b8c\u6574\u5730\u5904\u7406\u6570\u636e\uff0c\u5219\u4f1a\u5728\u4e0b\u4e00\u6b21epoll_wait()\u8c03\u7528\u65f6\u518d\u6b21\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002</p> </li> </ol>"},{"location":"network/ntp/","title":"NTP","text":"<p>Network Time Protocol\uff0c\u7f51\u7edc\u65f6\u95f4\u534f\u8bae\uff0c\u7528\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u65f6\u95f4\u540c\u6b65</p> <ol> <li>\u5ba2\u6237\u7aef\u9996\u5148\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2aNTP\u8bf7\u6c42\u62a5\u6587\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u8be5\u62a5\u6587\u79bb\u5f00\u5ba2\u6237\u7aef\u7684\u65f6\u95f4\u6233t1;</li> <li>NTP\u8bf7\u6c42\u62a5\u6587\u5230\u8fbeNTP\u670d\u52a1\u5668\uff0c\u6b64\u65f6NTP\u670d\u52a1\u5668\u7684\u65f6\u523b\u4e3at2\u3002\u5f53\u670d\u52a1\u7aef\u63a5\u6536\u5230\u8be5\u62a5\u6587\u65f6\uff0cNTP\u670d\u52a1\u5668\u5904\u7406\u4e4b\u540e\uff0c\u4e8et3\u65f6\u523b\u53d1\u51faNTP\u5e94\u7b54\u62a5\u6587\u3002\u8be5\u5e94\u7b54\u62a5\u6587\u4e2d\u643a\u5e26\u62a5\u6587\u79bb\u5f00NTP\u5ba2\u6237\u7aef\u65f6\u7684\u65f6\u95f4\u6233t1\u3001\u5230\u8fbeNTP\u670d\u52a1\u5668\u65f6\u7684\u65f6\u95f4\u6233t2\u3001\u79bb\u5f00NTP\u670d\u52a1\u5668\u65f6\u7684\u65f6\u95f4\u6233t3\uff1b</li> <li>\u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230\u54cd\u5e94\u62a5\u6587\u65f6\uff0c\u8bb0\u5f55\u62a5\u6587\u8fd4\u56de\u7684\u65f6\u95f4\u6233t4\u3002</li> </ol> <p>\u5219NTP\u62a5\u6587\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e4b\u95f4\u5f80\u8fd4\u7684\u65f6\u5ef6\u4e3a<code>delay = (t4 - t1)  - (t3 - t2)</code></p> <p>\u7136\u540e\u8bbe\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u65f6\u95f4\u5dee\u4e3aoffset\u5c31\u6709\u65b9\u7a0b\u7ec4</p> <ul> <li>t2 = t1 + offset + delay / 2</li> <li>t4 = t3 - offset + delay / 2</li> </ul> <p>\u53ef\u4ee5\u89e3\u51fa\u6765\u65f6\u95f4\u5dee\u4e3a`offset = ((t2 - t1) + (t3 - t4)) / 2</p>"},{"location":"network/rfc-2597/","title":"\u7f51\u7edc\u62a5\u6587\u4f18\u5148\u7ea7","text":"<p>PHB(Per-hop Behavoir): \u8def\u7531\u5668\u4f5c\u7528\u4e8e\u6570\u636e\u6d41\u7684\u884c\u4e3a\u3002\u5176\u62e5\u67094\u4e2a\u6807\u51c6\uff1a</p> <ol> <li>\u7c7b\u9009\u62e9\u7801 CS\uff0cIPTOS_CLASS_MASK: \u5bf9\u5e94DSCP\u4e3aXXX000 mask\u4e3a0xe0; IPTOS_DSCP_MASK: \u5bf9\u5e94DSCP\u4e3aXXXXXX00 mask\u4e3a0xfc\uff0c\u672c\u8d28\u4e0a\u65f6\u5bf9ipv4 \u62a5\u5934\u4e2d\u4f7f\u7528\u76841byte\u548cipv6\u62a5\u5934\u4e2d\u6570\u636e\u7c7b(TrafficClass)\u76841\u5b57\u8282\u7684\u91cd\u65b0\u5b9a\u4e49/\u547d\u540d\uff08\u4e3aDS\u5b57\u6bb5\uff09\u3002     &gt; IPTOS_CLASS_MASK\u5373\u662f\u5bf9ipv4\u4f7f\u7528\u76843\u4e2abit\u8868\u793a\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u5bf9\u5e94     &gt; IPTOS_DSCP_MASK\u5219\u662f\u5bf9\u7d27\u8ddf\u7740\u76843\u4e2abit\u8fdb\u884c\u4e22\u5f03\u4f18\u5148\u7ea7\u7684\u8868\u793a     &gt; \u7136\u540e\u6700\u540e\u7684\u4e24\u4e2abit\u7528\u4e8e\u8868\u793a\u901a\u77e5\u963b\u585e\u7684\u7b49\u7ea7</li> <li>\u52a0\u901f\u8f6c\u53d1 EF Expedited Forwarding(\u65e0\u963b\u788d\u8f6c\u53d1)\uff0c\u9002\u7528\u4e8e\u4f4e\u4e22\u5305\u7387\uff0c\u4f4e\u5ef6\u8fdf\uff0c\u4f4e\u6296\u52a8\u4fdd\u8bc1\u5e26\u5bbd\u7684\u4e1a\u52a1\uff0c\u6bd4\u5982VOIP\uff0c0xb8</li> <li>\u786e\u4fdd\u8f6c\u53d1 AF\uff0c\u5206\u4e3aAF1\u3001AF2\u3001AF3\u3001AF4 mask\u4e3a0xfc  Assured Forwarding\u3002\uff08\u7b2c3\u548c\u7b2c4\u6bd4\u7279\u8868\u793a\u4e22\u5f03\u4f18\u5148\u7ea7\uff0c01-\u4f4e\uff0c02-\u4e2d\uff0c03-\u9ad8\uff0c\u662f\u5bf9CS1~CS4\u7684\u5b9a\u4e49\uff09</li> <li>\u5c3d\u529b\u800c\u4e3a BE, 0x00</li> </ol> <p>ipv4\u7684tos8\u4e2a\u4f18\u5148\u7ea7\u5b9a\u4e49</p> <ol> <li>111 \uff0dNetwork Control \u7f51\u7edc\u63a7\u5236   \u4f18\u5148\u7ea76\u548c7\u4e00\u822c\u4fdd\u7559\u7ed9\u7f51\u7edc\u63a7\u5236\u6570\u636e\u4f7f\u7528\uff0c\u6bd4\u5982\u8def\u7531</li> <li>110 \uff0dInternetwork Control \u7f51\u95f4\u63a7\u5236   \u4f18\u5148\u7ea76\u548c7\u4e00\u822c\u4fdd\u7559\u7ed9\u7f51\u7edc\u63a7\u5236\u6570\u636e\u4f7f\u7528\uff0c\u6bd4\u5982\u8def\u7531</li> <li>101 \uff0dCritic \u5173\u952e          \u4f18\u5148\u7ea75\u63a8\u8350\u7ed9\u8bed\u97f3\u6570\u636e\u4f7f\u7528</li> <li>100 \uff0d FlashOverride \u75be\u901f  \u4f18\u5148\u7ea74\u7531\u89c6\u9891\u4f1a\u8bae\u548c\u89c6\u9891\u6d41\u4f7f\u7528</li> <li>011 \uff0dFlash \u95ea\u901f      \u4f18\u5148\u7ea73\u7ed9\u8bed\u97f3\u63a7\u5236\u6570\u636e\u4f7f\u7528</li> <li>010 \uff0dImmediate \u5feb\u901f  \u4f18\u5148\u7ea71\u548c2\u7ed9\u6570\u636e\u4e1a\u52a1\u4f7f\u7528</li> <li>001 \uff0dPriority \u4f18\u5148   \u4f18\u5148\u7ea71\u548c2\u7ed9\u6570\u636e\u4e1a\u52a1\u4f7f\u7528</li> <li>000 \uff0dRoutine \u666e\u901a    \u4f18\u5148\u7ea70\u4e3a\u7f3a\u7701\u6807\u8bb0\u503c</li> </ol> <p>\u53c2\u8003\u94fe\u63a5</p>"},{"location":"network/socket/","title":"Socket","text":"<ul> <li>tcp\u548cudp\u90fd\u901a\u8fc7socket\u8fdb\u884c\u521b\u5efa\uff0c\u4e0d\u540c\u7684\u662ftcp\u662f<code>SOCK_STREAM</code>\uff0cudp\u662f<code>SOCK_DGRAM</code>\u3002\u4e14\u9664\u4e86tcp\u548cudp\u7684<code>setsockopt</code>\u5171\u6027\u53ef\u4ee5\u8bbe\u7f6e\u7684\u5c5e\u6027\uff08<code>SO_REUSEADDR, SO_REUSEPORT, O_NONBLOCK, SO_SNDBUF, SO_RCVBUF, SO_LINGER, FD_CLOEXEC\uff09\u7b49\uff0ctcp\u8fd8\u6709</code>TCP_NODELAY, SO_KEEPALIVE`\u7b49\u8bbe\u7f6e\u4e0d\u5ef6\u8fdf\u53d1\u9001\u3001\u4fdd\u6d3b\u7b49\u5c5e\u6027\u3002</li> <li>SO_PRIORITY\uff1a\u53ef\u7528\u4e8e\u8bbe\u7f6esocket\u7684\u4f18\u5148\u7ea7\uff0c0~6, 6\u4f18\u5148\u7ea7\u6700\u9ad8</li> <li>SO_LINGER\uff1a\u5176\u4e2d\u7684l_onoff\u4e3a\u975e0\u65f6\u8868\u793a\u6253\u5f00\uff0c\u6b64\u65f6l_linger\u8868\u793a\u5ef6\u65f6\u7684\u65f6\u95f4\u3002\u7528\u4e8eclose/shutdown\u540e\u7b49\u5230socket\u961f\u5217\u91cc\u7684\u6d88\u606f\u53d1\u9001\u6210\u529f\u540e/\u5230\u8fbe\u5ef6\u65f6\u65f6\u95f4 \u540e\u624d\u8fd4\u56de\uff0c\u5426\u5219l_onoff\u4e3a0\u65f6\u8868\u793a\u7acb\u5373\u8fd4\u56de</li> <li>IP_TOS\uff1a<code>setsockopt(fd, IPPROTO_IP, IP_TOS, &amp;opt_value, (socklen_t)(sizeof(opt_value)));</code>\uff0c\u7528\u4e8e\u5728\u7f51\u7edc\u4e0a\u533a\u5206\u5305\u7684\u4f18\u5148\u7ea7     &gt; 1. IPTOS_LOWDELAY \u7528\u6765\u4e3a\u4ea4\u4e92\u5f0f\u901a\u4fe1\u6700\u5c0f\u5316\u5ef6\u8fdf\u65f6\u95f4     &gt; 2. IPTOS_THROUGHPUT \u7528\u6765\u4f18\u5316\u541e\u5410\u91cf     &gt; 3. IPTOS_RELIABILITY \u7528\u6765\u4f5c\u53ef\u9760\u6027\u4f18\u5316     &gt; 4. IPTOS_MINCOST \u5e94\u8be5\u88ab\u7528\u4f5c\"\u586b\u5145\u6570\u636e\"     &gt;     &gt; \u8fd9\u4e9bTOS\u503c\u6700\u591a\u53ea\u80fd\u58f0\u660e\u4e00\u4e2a\u3002\u7f3a\u7701\u65f6\u4f18\u5148\u53d1\u9001IPTOS_LOWDELAY\u6570\u636e\u62a5\u3002     &gt;     &gt; \u5728voip\u4e2d\u53ef\u4ee5\u7528\u4e8e\u63d0\u9ad8rtp\u6570\u636e\u5305\u7684\u4f18\u5148\u7ea7\uff0c\u901a\u8fc7\u5bf9\u67d0\u4e2asocket\u4e0a\u8bbe\u7f6eip_tos</li> </ul>"},{"location":"network/socket/#_1","title":"\u7f51\u7edc\u76d1\u542c","text":"<ul> <li>\u5982\u679c\u76d1\u542c\u5730\u5740\u662f127.0.0.1:port\uff0c\u8868\u793a\u4ec5\u76d1\u542c\u73af\u56de\u63a5\u53e3\u7684\u6570\u636e\uff0c\u5373\u672c\u673a\u53d1\u9001\u7ed9\u672c\u673aport\u7aef\u53e3\u7684\u6570\u636e\uff0c\u5176\u4ed6\u4e3b\u673a\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u65e0\u6cd5\u63a5\u6536\u5230\u3002</li> <li>\u5982\u679c\u76d1\u542c\u5730\u5740\u662f0.0.0.0:port\uff0c\u8868\u793a\u76d1\u542c\u6240\u6709\u7f51\u7edc\u63a5\u53e3\u7684\u6570\u636e\uff0c\u5305\u62ec\u73af\u56de\u63a5\u53e3\u548c\u5176\u4ed6\u7f51\u7edc\u63a5\u53e3\uff0c\u6240\u6709\u672c\u673a\u548c\u5176\u4ed6\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u90fd\u53ef\u4ee5\u63a5\u6536\u5230\u3002</li> <li>\u5982\u679c\u76d1\u542c\u5730\u5740\u662f\u672c\u673aip:port\uff0c\u8868\u793a\u4ec5\u76d1\u542c\u672c\u673aip\u5bf9\u5e94\u7684\u7f51\u7edc\u63a5\u53e3\u3002\u4ec5\u63a5\u6536\u76ee\u7684\u5730\u5740\u662f\u672c\u673aip\u7684\u6570\u636e\u3002\uff08\u5bf9\u672c\u673a\u53d1\u9001\u7ed9\u672c\u673a\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u76ee\u7684\u4e3b\u673a\u5730\u5740\u662f127.0.0.1\u5219\uff0c\u6536\u4e0d\u5230\uff0c\u4ec5\u5f53\u76ee\u7684\u4e3b\u673a\u5730\u5740\u662f\u672c\u673aip\u65f6\u80fd\u591f\u6536\u5230\uff09\u3002</li> </ul>"},{"location":"network/socket/#recv","title":"recv\u62a5\u9519\u89e3\u51b3","text":""},{"location":"network/socket/#_2","title":"\u8fd4\u56de\u503c","text":"<p>recv\u8fd4\u56de\u503c\u5c0f\u4e8e0\u4e14\uff0c<code>errno == EINTR || errno == EWOULDBLOCK || errno == EAGAIN</code>\u65f6\u8ba4\u4e3a\u8fde\u63a5\u662f\u6b63\u5e38\u7684\uff0c\u53ef\u4ee5\u7ee7\u7eed\u63a5\u6536\u3002</p>"},{"location":"network/socket/#eagaineinval","title":"EAGAIN||EINVAL","text":"<p>\u8fd4\u56de\u503c\u4e3aEINVAL\uff0c\u8868\u793a\u65e0\u6548\u53c2\u6570\uff0c\u63d0\u4f9b\u7684\u53c2\u6570\u975e\u6cd5\u3002\u6709\u65f6\u4e5f\u4e0esocket\u5f53\u524d\u72b6\u6001\u76f8\u5173\uff0c\u5982\u4e00\u4e2asocket\u5e76\u6ca1\u6709\u8fdb\u5165listening\u72b6\u6001\uff0c\u6b64\u65f6\u8c03\u7528accept\u5c31\u4f1a\u4ea7\u751fEINVAL\u9519\u8bef\u3002</p> <p>recv\u53ef\u80fd\u8fd4\u56de\u503c\u7b49\u4e8e0\uff0c\u4f46errno\u662fEAGAIN\u5373<code>Resource temporarily unavailable</code>\uff08\u4e5f\u53ef\u80fd\u8fd4\u56deEINVAL\uff0c\u65e0\u6548\u53c2\u6570\uff09\uff0c\u8fd9\u5e94\u8be5\u662frecv\u63a5\u6536\u4e0d\u5230\u6570\u636e\u5bfc\u81f4 \u8d85\u65f6\u4e86\uff0c\u4ee5\u4e3asocket\u8fde\u63a5\u65ad\u5f00\u4e86\u3002\uff08\u6bd4\u5982\u9700\u8981\u534f\u8bae\u4ea4\u4e92\u624d\u80fd\u8fdb\u884c\u4e0b\u53bb\u7684\u60c5\u51b5\uff1a</p> <p>wfd\u6295\u5c4f\u91ccsource\u7aef\u53d1\u9001\u7684m2\u56de\u590dREPLY\u540e\u7d27\u8ddf\u7740\u4e00\u4e2aGET_PARAMETER\uff0c\u7136\u540e\u53ea\u6709sink\u7aef \u56de\u590d\u4e86\u8fd9\u4e2aGET_PARAMETER\uff0csource\u624d\u4f1a\u53d1\u9001\u6d88\u606f\u8fc7\u53bb\uff0c\u5982\u679cm2\u7684response\u4e0em3\u7684request\u7c98\u5305\u4e86\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u4e00\u4e0b\u5b50\u88ab\u8bfb\u5b8c\uff0c\u5982\u679csink\u7aef\u6ca1\u505a\u7c98\u5305\u5904\u7406 \u5c31\u4f1a\u5bfc\u81f4\u53ea\u89e3\u6790\u4e86\u524d\u9762\u7684Response\uff0c\u800c\u540e\u9762\u7684\u83b7\u53d6\u53c2\u6570\u7684request\u88ab\u5ffd\u7565\u6389\u3002 </p>"},{"location":"network/socket/#connect","title":"connect\u62a5\u9519\u89e3\u51b3","text":""},{"location":"network/socket/#einprogress","title":"EINPROGRESS","text":"<p>\u610f\u601d\u662fOperation now in progress\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fde\u63a5\u6d41\u7a0b\u53ef\u80fd\u662f</p> <pre><code>1. \u5efa\u7acbsocket\n2. setsockopt\u8bbe\u7f6e\u975e\u963b\u585e\n3. connect\u8fde\u63a5\n</code></pre> <p>\u7531\u4e8econnect\u63a5\u53e3\u8fd4\u56deEINPROGRESS\u53ef\u80fd\u662f<code>The socket is nonblocking and the connection cannot be completed immediately</code>\u3002\u56e0\u6b64\u5c06 \u8bbe\u7f6e\u975e\u963b\u585e\u653e\u5728\u8fde\u63a5\u4e4b\u540e\u53ef\u4ee5\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u4fee\u590d\u540e\u7684\u6d41\u7a0b</p> <pre><code>1. \u5efa\u7acbsocket\n2. connect\u8fde\u63a5\n3. setsockopt\u8bbe\u7f6e\u975e\u963b\u585e\n</code></pre> <p>\u8fd4\u56de\u503c\u7b49\u4e8e\u96f6\uff0c\u4e00\u822c\u662f\u5728\u7b49\u63a5\u534f\u8bae\u63a5\u6536\u6570\u636e\u65f6\u7f51\u7edc\u4e2d\u65ad\u3002</p>"},{"location":"network/tcp/","title":"TCP","text":""},{"location":"network/tcp/#_1","title":"\u5173\u95ed\u8fde\u63a5","text":"<p>\u6b63\u5e38\u7684\u5173\u95ed\u903b\u8f91</p> <p>\u6b63\u786e\u7684\u5173\u95ed\u903b\u8f91\u5982\u4e0b\uff0c\u5efa\u8bae\u7528\u8fd9\u79cd\u65b9\u5f0f\u4ee3\u66ffSO_LINGER\uff1a</p> <p>\u53d1\u9001\u65b9\uff1asend() \u2192 shutdown(WR) \u2192 recv() == 0\uff08\u7531\u63a5\u6536\u65b9 close \u5bfc\u81f4\uff09 \u2192 close()</p> <p>\u63a5\u6536\u65b9\uff1arecv() == 0\uff08\u7531\u53d1\u9001\u65b9 shutdown \u5bfc\u81f4\uff09 \u2192 more to send? \u2192 close() </p>"},{"location":"network/tcp/#fin_wait1","title":"FIN_WAIT1","text":"<p>\u5f53\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5f02\u5e38\uff0c\u4e00\u76f4\u4e0d\u5904\u7406\u62a5\u6587\uff0c\u5bfc\u81f4tcp server\u7aef\u53d1\u9001\u7f13\u51b2\u533a\u585e\u6ee1\u4e86\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u81ea\u5df1\u7684\u63a5\u6536\u7f13\u51b2\u533a\u4e5f\u586b\u6ee1\u4e86\u6570\u636e\u3002\u7136\u540eserver\u7aef\u7531\u4e8e\u6536\u53d1\u5305\u5931\u8d25\u4f1a \u8c03\u7528close\uff0c\u4e8e\u662fserver\u7aeftcp\u72b6\u6001\u673a\u8fdb\u5165FIN_WAIT1\uff0c\u4f46FIN\u4e5f\u53d1\u4e0d\u51fa\u53bb\uff08\u88ab\u618b\u6b7b\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u53eb\u505aorphaned connection</p> <p>\u901a\u8fc7\u8bbe\u7f6e<code>proc/sys/net/ipv4/tcp_max_orphans</code>\u3001<code>/etc/sysctl.conf</code>\u53ef\u4ee5\u9650\u5236orphaned connection\u7684\u6700\u5927\u6570\u91cf </p>"},{"location":"network/tcp/#time_wait","title":"TIME_WAIT","text":"<p>\u901a\u8fc7\u8bbe\u7f6e<code>net.ipv4.tcp_tw_recycle = 1</code>\u53ef\u4ee5\u5c06tcp\u4e2d\u7684TIME_WAIT\u5feb\u901f\u56de\u6536\uff0c\u9ed8\u8ba4\u4e3a0</p>"},{"location":"network/zero-copy/","title":"Linux\u96f6\u62f7\u8d1d","text":"<ul> <li>mmap: map core buffer to user buffer</li> <li>\u4f7f\u7528mmap\u4ee3\u66ffread\uff0c\u51cf\u5c11\u5185\u6838\u7f13\u51b2\u533a\u5230\u7528\u6237\u7f13\u51b2\u533a\u7684\u62f7\u8d1d</li> <li><code>tmp_buf = mmap(file, len);</code></li> <li><code>write(socket, tmp_buf, len);</code></li> <li>\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7mmap\uff0c\u78c1\u76d8\u7684\u6570\u636e\u901a\u8fc7DMA\u62f7\u8d1d\u81f3core buffer\uff0c\u6b64\u6bb5buffer\u4e8e\u7528\u6237\u8fdb\u7a0b\u5171\u4eab\uff0c\u7136\u540ewrite\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u62ffcore buffer\u5185\u5bb9\u62f7\u8d1d\u81f3socket\u7684\u7f13\u51b2\u533a\uff0c\u7136\u540e\u901a\u8fc7DMA copy\u53d1\u9001\u81f3\u7f51\u5361\u3002</li> <li>\u76f8\u6bd4\u5e38\u89c4\u7684 read &amp; write\uff0c\u51cf\u5c11\u4e86\u4e00\u4e9bcopy\uff0c\u5229\u7528\u6620\u5c04\u4ee3\u66ffcopy\uff0c\u9002\u7528\u4e8e\u5927\u8303\u56f4\u7684\u6570\u636e\u3002</li> <li>\u4f46\u7531\u4e8e\u662f\u5bf9\u6587\u4ef6\u7684\u5185\u5b58\u6620\u5c04\uff0c\u6240\u4ee5\u5f53\u524d\u6587\u4ef6\u82e5\u88ab\u5176\u4ed6\u8fdb\u7a0b\u622a\u65ad\u7b49\u64cd\u4f5c\uff0cwrite\u5c06\u4f1a\u62a5SIGBUS\u4e2d\u65ad\uff0c\u5bfc\u81f4\u8fdb\u7a0b\u88ab\u6740\u6b7b\u3002\uff08\u89e3\u51b3\u65b9\u6cd5\uff1a1. \u4e3aSIGBUS\u6ce8\u518c\u65b0\u7684\u4fe1\u53f7\u5904\u7406\u5668\uff1b2. \u5229\u7528\u6587\u4ef6\u79df\u754c\u9501\uff08\u63a8\u8350\uff09</li> <li>sendfile: fd -&gt; socketfd, transfer</li> <li>\u6570\u636e\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e0d\u53ef\u89c1\uff0c\u9002\u7528\u4e8e\u5e94\u7528\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4e0d\u9700\u8981\u5bf9\u6240\u8bbf\u95ee\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u7684\u60c5\u51b5\uff0c\u5c40\u9650\u4e8e\u57fa\u4e8e\u6587\u4ef6\u670d\u52a1\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u78c1\u76d8\u6587\u4ef6 -DMA copy-&gt; \u5185\u6838\u9875\u7f13\u5b58 -CPU copy-&gt; socket\u7f13\u5b58 -DMA copy-&gt; \u7f51\u7edc/\u7f51\u5361</li> <li>\u501f\u52a9\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u5b9e\u73b0\u6570\u636e\u62f7\u8d1d\uff1a\u76f4\u63a5\u5c06\u6587\u4ef6\u63cf\u8ff0in_fd\u7684\u6570\u636e\u62f7\u8d1d\u7ed9\u6587\u4ef6\u63cf\u8ff0\u7b26out_fd\uff0c\u5176\u4e2din_fd\u662f\u6570\u636e\u63d0\u4f9b\u65b9\uff0cout_fd\u662f\u6570\u636e\u63a5\u6536\u65b9\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u5185\u6838\u8fdb\u884c\u7684\uff0c\u4e0d\u4f1a\u7ecf\u8fc7\u7528\u6237\u7a7a\u95f4\uff0c\u6240\u4ee5\u6570\u636e\u4e0d\u7528\u62f7\u8d1d\u5230app buffer\uff0c\u5b9e\u73b0\u4e86\u96f6\u590d\u5236\u3002</li> <li>\u57fa\u4e8e\u786c\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u6536\u96c6\u62f7\u8d1d\u529f\u80fd\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e2d\u95f4\u7684CPU copy</li> <li>splice: pipe to-ot fd, move</li> <li>\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u79fb\u52a8\u6570\u636e\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u63cf\u8ff0\u7b26\u5fc5\u987b\u662f\u7ba1\u9053\u63cf\u8ff0\u7b26\u3002\u7531\u4e8e\u4e0d\u9700\u8981\u5728kernel buffer\u548capp buffer\u4e4b\u95f4\u62f7\u8d1d\u6570\u636e\uff0c\u6240\u4ee5\u5b9e\u73b0\u4e86\u96f6\u590d\u5236</li> <li>tee: pipe inner copy</li> <li>\u5728\u4e24\u4e2a\u7ba1\u9053\u63cf\u8ff0\u7b26\u4e4b\u95f4\u590d\u5236\u6570\u636e\u3002\u7531\u4e8e\u4ecein_fd\u590d\u5236\u7ed9\u53e6\u4e00\u4e2a\u7ba1\u9053out_fd\u65f6\uff0c\u4e0d\u8ba4\u4e3a\u6570\u636e\u662f\u6765\u81ea\u4e8ein_fd\u7684\uff0c\u6240\u4ee5\u590d\u5236\u6570\u636e\u540e\uff0cin_fd\u4ecd\u53ef\u4f7f\u7528splice()\u51fd\u6570\u8fdb\u884c\u6570\u636e\u79fb\u52a8\u3002\u7531\u4e8e\u6ca1\u6709\u7ecf\u8fc7\u7528\u6237\u7a7a\u95f4\uff0c\u6240\u4ee5\u5b9e\u73b0\u4e86\u96f6\u590d\u5236\u3002</li> <li>Linux\u4e0b\u7684tee\u7a0b\u5e8f\u5c31\u662f\u4f7f\u7528tee\u51fd\u6570\u7ed3\u5408splice\u51fd\u6570\u5b9e\u73b0\u7684\uff0c\u5148\u5c06\u6570\u636e\u901a\u8fc7tee()\u51fd\u6570\u62f7\u8d1d\u7ed9\u7ba1\u9053\uff0c\u518d\u4f7f\u7528splice()\u51fd\u6570\u5c06\u6570\u636e\u79fb\u52a8\u7ed9\u53e6\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</li> </ul> <pre><code>#include &lt;sys/socket.h&gt;\n#include &lt;netinet/in.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/uio.h&gt;\n#include &lt;sys/sendfile.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;sys/epoll.h&gt;\n#include &lt;pthread.h&gt;\nint main(int argc, char* argv[])\n{\n    if (argc != 2) {\n        printf(\"usage: %s &lt;file?\\n\", argv[0]);\n        return 1;\n    }\n    int filefd = open(argv[1], O_CREAT | O_WRONLY | O_TRUNC, 0666);\n    assert(filefd &gt; 0);\n\n    int pipefd_stdout[2];\n    int ret = pipe(pipefd_stdout);\n    assert(ret != -1);\n\n    int pipefd_file[2];\n    ret = pipe(pipefd_file);\n    assert(ret != -1);\n    // in -&gt; fdstdout\n    // splice: pipe to-ot fd\n    ret = splice(STDIN_FILENO, NULL, pipefd_stdout[1], NULL, 32768, SPLICE_F_NONBLOCK);\n    assert(ret != -1);\n    // fdstdout -&gt; fdfile\n    // tee : pipe inner copy\n    ret = tee(pipefd_stdout[0], pipefd_file[1], 32768, SPLICE_F_NONBLOCK);\n    assert(ret != -1);\n    // fdfile -&gt; filefd\n    ret = splice(pipefd_file[0], NULL, filefd, NULL, 32768, SPLICE_F_MORE | SPLICE_F_MOVE);\n    assert(ret != -1);\n    // fdstdout -&gt; stdout\n    ret = splice(pipefd_stdout[0], NULL, STDOUT_FILENO, NULL, 32768, SPLICE_F_MORE | SPLICE_F_MOVE);\n    assert(ret != -1);\n    close(filefd);\n    close(pipefd_stdout[0]);\n    close(pipefd_stdout[1]);\n    close(pipefd_file[0]);\n    close(pipefd_file[1]);\n    return 0;\n}\n</code></pre>"},{"location":"notes/gcc/","title":"GCC","text":"<pre><code># \u7f16\u8bd132\u4f4d\u7684\u53c2\u6570\uff08\u540c\u67b6\u6784\uff09\n-m32 # \u5c06int\u3001long\u548c\u6307\u9488\u8bbe\u4e3a32\u4f4d\uff0c\u9002\u7528\u4e8ei386\n-m64 # \u5c06int\u8bbe\u4e3a32\u4f4d\u3001long\u548c\u6307\u9488\u8bbe\u4e3a64\u4f4d\uff0c\u9002\u7528\u4e8ex86-64\n-mx32 # \u5c06int\u3001long\u548c\u6307\u9488\u8bbe\u4e3a32\u4f4d\uff0c\u9002\u7528\u4e8ex86-64\n</code></pre>"},{"location":"notes/gcc/#g","title":"\u67e5\u770bg++\u9ed8\u8ba4\u7f16\u8bd1\u6807\u51c6","text":"<p>\u4f7f\u7528<code>info g++</code>\u5728<code>-std=</code>\u4e2d\u53c8default\u5b57\u773c\uff0cg++ 11.4\u4e2d\u9ed8\u8ba4\u662fc++17</p>"},{"location":"notes/gcc/#_1","title":"\u7f16\u8bd1\u6c47\u7f16\u4ee3\u7801","text":"<pre><code># \u8be5\u547d\u4ee4\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210 test.s \u6587\u4ef6\uff0c\u4e14\u6ca1\u6709\u5bf9\u521d\u5b66\u8005\u4e0d\u53cb\u597d\u7684\u4ec0\u4e48\u7e41\u7410\u4fe1\u606f\uff08\u6808\u4fdd\u62a4\u76f8\u5173\u4fe1\u606fbala\u4ec0\u4e48\u7684\uff09\ng++ -S -fverbose-asm -fno-stack-protector -fno-asynchronous-unwind-tables -fno-dwarf2-cfi-asm [test.cpp]\n# \u751f\u6210\u4e0e\u4e0a\u9762\u76f8\u5bf9\u5e94\u7684\u53ef\u4f9bgdb\u8c03\u8bd5\u7684\u7a0b\u5e8f\ng++ test.cpp -g -fverbose-asm -fno-stack-protector -fno-asynchronous-unwind-tables -fno-dwarf2-cfi-asm -o test\n</code></pre>"},{"location":"notes/gcc/#_2","title":"\u8c03\u8bd5\u6c47\u7f16\u4ee3\u7801","text":"<pre><code># \u53ef\u5728gdb\u9875\u9762\u663e\u793a\u6c47\u7f16\u4ee3\u7801\nlayout asm\n# \u4ee516\u8fdb\u5236\u8f93\u51fa \u4ece$rsp\u5730\u5740\u5f00\u59cb\u768432\u5404byte\nx/32xb $rsp\n# \u6253\u5370rsp\u7684\u5730\u5740\u4fe1\u606f\np $rsp\n# \u6253\u5370\u5f53\u524d\u6808\u5e27\ninfo frames\n</code></pre> <p>\u8c03\u8bd5\u5c0f\u8bb0: \u79fb\u4f4d\u64cd\u4f5c\uff0c\u572832\u4f4d\u7cfb\u7edf\u548c64\u4f4d\u7cfb\u7edf\u91cc\u9762\uff0c\u88ab\u79fb\u4f4d\u7684\u6570\u636e\u9ed8\u8ba4\u4f20\u5165$eax\u5bc4\u5b58\u5668\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u5bf9(int16_t/int8_t)\u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\uff0c\u5373\u4fbf\u79fb\u7684\u4f4d\u6570\u8d85\u8fc7\u4e86\u6570\u636e\u7684\u4f4d\u5bbd\u4e5f\u4e0d\u4f1a\u53d8\u62100</p>"},{"location":"notes/gcc/#objdump","title":"objdump","text":"<p>\u663e\u793a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4fe1\u606f\uff0c\u67e5\u770b\u53cd\u6c47\u7f16\u4ee3\u7801</p> <pre><code># -S \u53ef\u4ee5\u53cd\u6c47\u7f16\u540c\u65f6\u663e\u793a\u6e90\u4ee3\u7801\nobjdump -S -d main\n</code></pre>"},{"location":"notes/gcc/#nm","title":"nm","text":"<p>\u7528\u4e8e\u663e\u793a\u6587\u4ef6\u7684\u7b26\u53f7\u4fe1\u606f</p> <pre><code># \u663e\u793a\u6240\u6709\u7b26\u53f7\nnm -a\n</code></pre>"},{"location":"notes/gcc/#strip","title":"strip\u7b26\u53f7\u4fe1\u606f\u4e0e\u8c03\u8bd5\u4fe1\u606f","text":"<p>\u7528\u4e8e\u5bf9\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u5bf9\u8c61\u6587\u4ef6\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u4fe1\u606f\uff08\u7b26\u53f7\uff09\uff0c\u5e26\u6765\u66f4\u597d\u7684\u6027\u80fd\u548c\u51cf\u5c11\u78c1\u76d8\u7a7a\u95f4\u7684\u4f7f\u7528</p> <p>\u9ed8\u8ba4gcc/g++\u7f16\u8bd1\u51fa\u6765\u7684\u7a0b\u5e8f\u662f\u5e26\u6709\u7b26\u53f7\u4fe1\u606f\u7684\uff0c\u800c\u52a0\u4e0a-g\u662f\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u52a0\u4e0a\u4f9b\u8c03\u8bd5\u7684\u7b26\u53f7\u4fe1\u606f(.debug)\uff08\u5373\u521b\u5efa\u7b26\u53f7\u8868\uff09\uff0c\u5e76\u4e14\u5173\u95ed\u6240\u6709\u7684\u4f18\u5316\u673a\u5236\u3002\u4e25\u683c \u6309\u7167\u7a0b\u5e8f\u6267\u884c\uff0c-Og\u4f18\u5316\u6210\u90fd\u4ecb\u4e8e-O0\u548c-O1\u4e4b\u95f4\u3002</p>"},{"location":"notes/gcc/#_3","title":"\u7f16\u8bd1\u4f18\u5316","text":"<ol> <li>O0  \u4e0d\u8fdb\u884c\u4efb\u4f55\u4f18\u5316\uff0c\u9ed8\u8ba4\u8bbe\u7f6e</li> <li>O1  \u4e3b\u8981\u5bf9\u4ee3\u7801\u5206\u652f\u3001\u5e38\u91cf\u4ee5\u53ca\u8868\u8fbe\u5f0f\u8fdb\u884c\u4f18\u5316\uff08\u53bb\u9664\u65e0\u7528\u7684inline\u548c\u65e0\u7528\u7684static\u3001\u6b7b\u4ee3\u7801\u6d88\u9664</li> <li>O2  \u5c1d\u8bd5\u66f4\u591a\u7684\u5bc4\u5b58\u5668\u7ea7\u7684\u4f18\u5316\u548c\u6307\u4ee4\u96c6\u7ea7\u522b\u7684\u4f18\u5316\uff0c\u81ea\u52a8\u5bf9\u51fd\u6570\u8fdb\u884c\u5185\u8054\uff0c\u53ef\u80fd\u4fee\u6539\u4ee3\u7801\u548c\u51fd\u6570\u6267\u884c\u6d41\u7a0b</li> <li>O3  \u5728O2\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528\u4f2a\u5bc4\u5b58\u5668\u7f51\u7edc\uff0c\u666e\u901a\u51fd\u6570\u7684\u5185\u8054\uff0c\u6bd4O2\u66f4\u6fc0\u8fdb\uff0c\u5bf9\u5faa\u73af\u3001\u5185\u8054\u7684\u4f18\u5316\uff0c\u63d0\u9ad8\u5e76\u884c\u6267\u884c\u901f\u5ea6</li> <li>Os  \u76f8\u5f53\u4e8eO2.5\u4f7f\u7528O2\u4f46\u4e0d\u7f29\u51cf\u4ee3\u7801\u5c3a\u5bf8</li> <li>Og  \u4f18\u5316\u8c03\u8bd5\u4f53\u9a8c\uff0c\u5728\u4fdd\u6301\u5feb\u901f\u7f16\u8bd1\u548c\u826f\u597d\u8c03\u8bd5\u4f53\u9a8c\u7684\u540c\u65f6\uff0c\u63d0\u4f9b\u5408\u7406\u7684\u4f18\u5316\u7ea7\u522b\u3002</li> </ol>"},{"location":"notes/gcc/#gdb","title":"gdb","text":"<p>\u6e90\u4ee3\u7801\u7f16\u8bd1\u8fc7\u7a0b\uff1a</p> <p>.c =\u9884\u5904\u7406=&gt; .i =\u7f16\u8bd1=&gt;.s =\u6c47\u7f16=&gt; *.o =\u94fe\u63a5(ld)=&gt; .out</p> <p>\u5176\u4e2d\uff1a</p> <ol> <li>\u9884\u5904\u7406\uff1a\u6587\u672c\u66ff\u6362\u3001\u5b8f\u5c55\u5f00\u3001\u5220\u9664\u6ce8\u91ca\uff0c\u540e\u751f\u6210*.i\u6587\u4ef6</li> <li>\u7f16\u8bd1\uff1a\u5904\u7406\u5185\u8054\u51fd\u6570\uff0c\u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s</li> <li>\u6c47\u7f16\uff1a\u7ffb\u8bd1\u6210*.o\u673a\u68b0\u8bed\u8a00</li> <li>\u94fe\u63a5\uff1a\u94fe\u63a5\u9759\u6001\u5e93*.a\u548c\u52a8\u6001\u5e93*.so</li> </ol> \u53c2\u6570 \u8bf4\u660e -E \u9884\u7f16\u8bd1\u751f\u6210*.i\u6587\u4ef6 -S \u751f\u6210\u6c47\u7f16\u4ee3\u7801*.s\u6587\u4ef6 -c \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210*.o\u6587\u4ef6 -o \u628a\u8f93\u51fa\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u5185 -g \u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u8c03\u8bd5\u4fe1\u606f -static \u94fe\u63a5\u9759\u6001\u94fe\u63a5\u5e93 <ul> <li>gdb\u8c03\u8bd5fork\u591a\u8fdb\u7a0b\uff1a<code>set follow_fork_mode [mode]</code>\uff0c\u5176\u4e2d<code>mode</code>\u53ef\u9009<code>parent</code>\u548c<code>child</code>\uff0c\u5206\u522b\u8868\u793afork\u4e4b\u540e\u8c03\u8bd5\u7236\u8fdb\u7a0b\u8fd8\u662f\u5b50\u8fdb\u7a0b\u3002</li> <li><code>info threads</code>\uff1a\u663e\u793a\u5f53\u524d\u53ef\u8c03\u8bd5\u7684\u7ebf\u7a0b\uff1b<code>thread [ID]</code>\u5207\u6362\u8981\u8c03\u8bd5\u7684\u7ebf\u7a0b</li> <li><code>set scheduler-blocking [off|on|step]</code>\uff0c<code>off</code>\uff0c\u9ed8\u8ba4\u503c\uff0c\u4e0d\u9501\u5b9a\u7ebf\u7a0b\u5373\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u8fd0\u884c\uff1b<code>on</code>\u8868\u793a\u53ea\u6709\u5f53\u524d\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u624d\u4f1a\u6267\u884c\uff1b<code>step</code>\u8868\u793a\u5728\u5355\u6b65\u8fd0\u884c\u65f6\uff0c\u53ea\u6709\u5f53\u524d\u7ebf\u7a0b\u4f1a\u6267\u884c\u3002</li> <li><code>set disassemble-next-line on</code>  #\u6253\u5f00\u6c47\u7f16\u6307\u4ee4\u5f00\u5173\uff0c\u8fd9\u6837gdb\u6bcf\u6267\u884c\u4e00\u6b65\uff0c\u90fd\u4f1a\u6253\u5370\u51fa\u6765\u5bf9\u5e94\u6267\u884c\u7684\u6c47\u7f16\u6307\u4ee4</li> </ul>"},{"location":"notes/git/","title":"Git","text":""},{"location":"notes/git/#git_1","title":"Git\u5e38\u7528\u547d\u4ee4","text":"<ul> <li> <p>\u53d6\u6d88git pull/push\u65f6\u9891\u7e41\u8f93\u5165\u8d26\u53f7\u5bc6\u7801</p> <pre><code>git config --global credential.helper store\n</code></pre> </li> <li> <p>git\u51fa\u73b0^M\u7b26\u53f7</p> <pre><code># \u8fd9\u662f\u56e0\u4e3awindows\u662fCRLF\u56de\u8f66\u6362\u884c\uff0cmac/linux\u662fLF\n# \u4f7f\u7528\u4e0b\u65b9\u547d\u4ee4\u89e3\u51b3\ngit config --global core.autocrlf input\n</code></pre> </li> <li> <p>git error: object file xxx is empty</p> <pre><code># \u5220\u9664\u7a7a\u7684object\u6587\u4ef6\nfind .git/objects/ -type f -empty | xargs rm\n# \u91cd\u65b0 fetch \u8fdc\u7aef\u7684\u5206\u652f\uff0c\u5e76 prune \u4fee\u526a\u6389\u8fdc\u7aef\u5df2\u7ecf\u65e0\u6548\u7684\u5206\u652f\ngit fetch -p\n# file system check\uff0c\u8fdb\u884c\u4ed3\u5e93\u7684\u4e00\u81f4\u6027\u68c0\u67e5\ngit fsck --full\n</code></pre> </li> <li> <p>git \u91cd\u547d\u540d\u5206\u652f</p> <pre><code># \u91cd\u547d\u540d\u5f53\u524d\u5206\u652f\ngit branch -m new_name\n# \u91cd\u547d\u540d\u5176\u4ed6\u5206\u652f\ngit branch -m old_name new_name\n</code></pre> </li> <li> <p>git commit\u540e\u64a4\u9500commit:</p> <pre><code>git reset --soft HEAD^\n# HEAD^\u8868\u793a\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u540cHEAD~1\n# --soft \u4e0d\u5220\u9664\u5de5\u4f5c\u7a7a\u95f4\u7684\u6539\u52a8\u4ee3\u7801\uff0c\u64a4\u9500commit\uff0c\u4e0d\u64a4\u9500git add file\n# --hard \u5220\u9664\u5de5\u4f5c\u7a7a\u95f4\u7684\u6539\u52a8\u4ee3\u7801\uff0c\u64a4\u9500commit\u5e76\u64a4\u9500add\n</code></pre> </li> <li> <p>git \u53d6\u6d88add\u64cd\u4f5c:</p> <pre><code># \u6574\u4f53\u56de\u5230\u4e0a\u4e00\u6b21\u64cd\u4f5c\uff0c\u540e\u8ddf\u6587\u4ef6\u540d\u662f\u9488\u5bf9\u6587\u4ef6\u8fdb\u884c\u56de\u6eda\ngit reset HEAED\n</code></pre> </li> <li> <p>git reset --hard\u4e22\u5931\u6539\u52a8\u4fe1\u606f\uff0c\u53ef\u572830\u5929\u5185\u901a\u8fc7<code>git reflog</code>\u67e5\u770b\u6539\u52a8\u4e0e\u6062\u590d</p> </li> <li> <p>git stash \u4fdd\u5b58\u5907\u6ce8\u4fe1\u606f</p> <pre><code>git stash save \"msg\"\n</code></pre> </li> <li> <p>git stash \u90e8\u5206\u6587\u4ef6</p> <p>\u501f\u7528git add\u5b9e\u73b0</p> <pre><code>git add file1 file 2 # \u4fdd\u7559\u66f4\u6539\u6587\u4ef6\u5230\u5de5\u4f5c\u533a\ngit stash save -k # \u6682\u5b58\u672aadd\u7684\u66f4\u6539\u6587\u4ef6\ngit reset #\u56de\u590d\u5de5\u4f5c\u533a\u6587\u4ef6\n</code></pre> </li> <li> <p>git \u4fdd\u5b58patch</p> <pre><code>git diff &gt; changes.patch\n# stash \u5bfc\u51fa\u4e3apatch\ngit stash show \"stash@{0}\" -p &gt; changes.patch\n</code></pre> </li> <li> <p>git \u5e94\u7528patch</p> <pre><code>git apply xxx.patch\n# --3way  \u5408\u5e76\u5982\u679c\u5931\u8d25\uff0c\u91c7\u75283way\u7b97\u6cd5\u8fdb\u884c\u5408\u5e76\n# --reject \u91c7\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5931\u8d25\u540e\uff0c\u53ef\u81ea\u884c\u89e3\u51b3.rej\u7684\u6587\u4ef6\u51b2\u7a81\n# --whitespace=fix \u5ffd\u7565\u7a7a\u683c\n</code></pre> </li> <li> <p>git \u53d6\u6d88\u5e94\u7528patch</p> <pre><code>git apply -R changes.patch\n</code></pre> </li> <li> <p>git fork\u5206\u652f\u540e\u4e0e\u539f\u4ed3\u5e93\u4fdd\u6301\u540c\u6b65</p> <p>\u53c2\u8003\u94fe\u63a5</p> <pre><code># \u514b\u9686\u65b0\u4ed3\u5e93\ngit clone xxx/newhub.git\n# \u5728\u65b0\u4ed3\u5e93\u6dfb\u52a0\u539f\u4ed3\u5e93\u7684\u8fdc\u7a0b\u94fe\u63a5\ngit remote add oldhub xxx/oldhub.git\n# git remote -v \u53ef\u4ee5\u770b\u5230\u65b0\u4ed3\u5e93origin\u548c\u65e7\u4ed3\u5e93oldhub\u7684\u4ed3\u5e93\u4fe1\u606f\n# \u83b7\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u5185\u5bb9\ngit fetch oldhub\n# git branch -r \u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u4ed3\u5e93\u7684\u6240\u6709\u5206\u652f\u4fe1\u606f\n# \u4f7f\u7528merge\u540c\u6b65\u5206\u652f\uff0c\u5728newhub/master\u4e0b\ngit merge oldhub/master --allow-unrelated-histories # merge\u51fa\u9519\u4f7f\u7528\n</code></pre> </li> <li> <p>git\u5408\u5e76\u4e00\u4e2a\u5206\u652f\u7684\u6307\u5b9acommit\u5230\u53e6\u4e00\u4e2a\u5206\u652f</p> <pre><code>git cherry-pick [commit-id]\n</code></pre> </li> <li> <p>git \u5206\u652f\u7ed1\u5b9a</p> <pre><code>git branch --set-upstream-to=origin/develop develop\n</code></pre> </li> </ul>"},{"location":"notes/git/#repo","title":"Repo\u547d\u4ee4","text":"<ol> <li>\u540c\u6b65\uff1arepo sync -c  -&gt;  repo forall -c 'git lfs pull'</li> <li>\u5220\u9664\u672c\u5730\u4fee\u6539\u5e76\u540c\u6b65\uff1arepo sync -d</li> <li> <p>repo \u91cd\u65b0init\u524d\u9700\u8981reset\u6240\u6709\u5206\u652f\uff0c\u53bb\u9664\u6240\u6709\u6539\u52a8</p> <pre><code># \u5168\u90e8\u91cd\u7f6e\u65b9\u6cd5\n# \u5176\u4e2d clean -f \u8868\u793a\u5220\u9664\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709track\u8fc7\u7684\u6587\u4ef6\uff0c-d\u8868\u793a\u5305\u62ec\u6587\u4ef6\u5939\nrepo forall -c 'git reset --hard &amp;&amp; git clean -fd'\n</code></pre> </li> <li> <p>repo \u5168\u4ed3\u5e93\u56de\u9000\u5230\u67d0\u4e2a\u65f6\u95f4\u63d0\u4ea4\u4e4b\u524d</p> <pre><code>repo forall -c 'commitID=`git log --before \"2023-04-28 00:00\" -1 --pretty=format:\"%H\"`; git reset --hard $commitID'\n</code></pre> </li> </ol>"},{"location":"notes/shell/","title":"shell","text":""},{"location":"notes/shell/#linuxfd","title":"linux\u6807\u51c6fd","text":"<p>0: \u6807\u51c6\u8f93\u5165(stdin)\uff0c1: \u6807\u51c6\u8f93\u51fa(stdout)\uff0c2: \u6807\u51c6\u9519\u8bef(stderr)\u3002shell\u547d\u4ee4\u540e\u76842&gt;/dev/null\u662f\u5c06\u6807\u51c6\u9519\u8bef\u4e22\u5f03\u6389\uff0c\u4e0d\u8f93\u51fa\u3002</p>"},{"location":"notes/shell/#_1","title":"$\u4f20\u9012\u53c2\u6570","text":"<ol> <li>$? : \u663e\u793a\u6700\u540e\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001</li> <li>$#: \u53c2\u6570\u4e2a\u6570</li> <li>$*\uff1a\u83b7\u53d6\u53c2\u6570\uff0c\u52a0\"\"\u4ee5\u201c1 2 3\u201d\u5f62\u5f0f\u83b7\u53d6\u4e00\u4e2a\u53c2\u6570</li> <li>$@: \u83b7\u53d6\u53c2\u6570\uff0c\u52a0\"\"\u4ee5\"1\" \"2\" \"3\"\u5f62\u5f0f\u83b7\u53d6\u591a\u4e2a\u53c2\u6570</li> <li>$!: \u540e\u53f0\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u7684ID\u53f7</li> <li>$$: \u811a\u672c\u8fd0\u884c\u7684\u5f53\u524d\u8fdb\u7a0bID\u53f7</li> </ol>"},{"location":"notes/shell/#typeset","title":"typeset\u547d\u4ee4","text":"<ol> <li>-u \u5c06\u7b2c\u4e00\u4e2a\u53d8\u91cf\u7684\u5b57\u7b26\u53d8\u6210\u5927\u5199</li> <li>-l \u5c06\u7b2c\u4e00\u4e2a\u53d8\u91cf\u7684\u5b57\u7b26\u53d8\u6210\u5c0f\u5199</li> <li>-Ln \u628a\u53d8\u91cf\u53d8\u6210\u4e00\u4e2a\u5de6\u5bf9\u9f50\u7684n\u4e2a\u5b57\u7b26\u4e32\uff08\u8fc7\u957f\u9636\u6bb5\uff09</li> <li>-Rn \u628a\u53d8\u91cf\u53d8\u6210\u4e00\u4e2a\u53f3\u5bf9\u9f50\u7684n\u4e2a\u5b57\u7b26\u4e32\uff08\u8fc7\u957f\u622a\u65ad\uff09</li> </ol>"},{"location":"notes/shell/#eval","title":"eval","text":"<p>\u4e8c\u6b21\u626b\u63cf\u8fd0\u884c</p>"},{"location":"notes/shell/#_2","title":"\\((())\u4e0e\\)()\u4e0e${}","text":"<ol> <li>$()\u4e0e``\u7b49\u4ef7\uff0c\u90fd\u662f\u7528\u6765\u547d\u4ee4\u66ff\u6362\u7684</li> <li>$()\u7528\u4e8e\u53d8\u91cf\u66ff\u6362\uff0c#\u53bb\u6389\u5de6\u8fb9\uff0c%\u53bb\u6389\u53f3\u8fb9\uff0c\u5355\u4e2a#/%\u662f\u6700\u5c0f\u5339\u914d\uff0c##/%%\u662f\u6700\u5927\u5339\u914d</li> <li>${#var}\u8ba1\u7b97\u53d8\u91cf\u7684\u957f\u5ea6</li> <li>$(())\u7528\u4e8e\u6574\u6570\u8fd0\u7b97\uff0c(())\u53ef\u91cd\u5b9a\u4e49\u53d8\u91cf\u503c</li> </ol>"},{"location":"notes/skills/","title":"Develop Skill","text":""},{"location":"notes/skills/#linux","title":"\u67e5\u770b\u662f\u5426\u662flinux\u7cfb\u7edf\u7531\u4e8e\u5185\u5b58\u6ea2\u51fa\u6740\u6b7b\u4e86\u8fdb\u7a0b","text":"<pre><code># \u67e5\u770blog\u6587\u4ef6\negrep -i -r 'killed process' /var/log\ndmesg | grep -E 'kill|oom|out of memory'\n</code></pre>"},{"location":"notes/skills/#_1","title":"\u67e5\u770b\u8fdb\u7a0b\u91cc\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6d88\u8017\u865a\u5b58\u7684\u5927\u5c0f","text":"<pre><code>ulimit -a\n# \u8f93\u51fa\u7ed3\u679c\u91cc\u6709\u4e2a  stack size\u5c31\u662f\u5206\u914d\u7684\u9ed8\u8ba4\u6808\u5927\u5c0f\uff0cubuntu22.04\u865a\u62df\u673a\u5206\u914d\u7684\u662f8192kbytes\u53738M\n# \u67e5\u770b\u7cfb\u7edf\u652f\u6301\u7684\u6700\u5927\u7ebf\u7a0b\u6570\ncat /proc/sys/kernel/threads-max\n# \u67e5\u770bpid\u53f7\u6570\u91cf\uff0c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u4f1a\u6d88\u8017\u8fd9\u4e2aid\u53f7\ncat /proc/sys/kernel/pid_max\n</code></pre>"},{"location":"notes/skills/#cpunuma","title":"\u67e5\u770bcpu\u5904\u7406\u5668\u662f\u5426\u4e3aNUMA\u67b6\u6784","text":"<pre><code>sudo apt install numactl\n# \u67e5\u770b\u53ef\u7528\u7684\u5185\u5b58\u8282\u70b9\u4fe1\u606f\u4e0e\u8bbf\u95ee\u8ddd\u79bb\nnumactl -H\n# \u67e5\u770bnuma\u5185\u5b58\u5206\u914d\u7b56\u7565:\n# \u4e3b\u8981\u6709MPOL_BIND(\u5fc5\u987b\u7ed1\u5b9a\u7684\u8282\u70b9\uff0c\u4e0d\u8db3\u5373swap)\u3001MPOL_INTERLEAVE(\u672c\u5730\u548c\u8fdc\u7a0b\u5747\u53ef)\n# MPOL_PREFERRED(\u4f18\u5148\u6307\u5b9a\u8282\u70b9\uff0c\u4e0d\u62e9\u5373\u9009\u62e9\u79bb\u6307\u5b9a\u8282\u70b9\u6700\u8fd1\u7684\u8282\u70b9)\u3001MPOL_LOCAL(\u9ed8\u8ba4\uff0c\u4f18\u5148\u672c\u5730\uff0c\u4e0d\u8db3\u4f7f\u7528\u8fdc\u7a0b)\n# \u53ef\u901a\u8fc7 #include &lt;numaif.h&gt; \u7684 long set_mempolicy(int mode, const unsigned long* nodemask, unsigned long maxnode) \u8bbe\u7f6e\u5185\u5b58\u7b56\u7565\nnumactl -s\n# \u67e5\u770b\u5404\u4e2anuma\u8282\u70b9\u7684\u5185\u5b58\u8bbf\u95ee\u547d\u4e2d\u6b21\u6570\nnumastat\n# \u901a\u8fc7numactl\u5c06\u8fdb\u7a0b\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684\u5185\u5b58\u8282\u70b9, \u4e0b\u9762\u662f\u5185\u5b58\u5206\u914d\u57280\u53f7numa\u8282\u70b9\uff0c\u8fdb\u7a0bnumatest.out\u8fd0\u884c\u57281\u53f7numa\u8282\u70b9\nnumactl --membind=0 --cpunodebind=1 ./numatest.out\n</code></pre>"},{"location":"notes/skills/#cpu","title":"\u6309\u7167\u8fdb\u7a0b\u540d\u67e5\u770bcpu\u5360\u7528\u7b49\u4fe1\u606f","text":"<pre><code># sed -n '1p'\u662f\u9009\u62e9\u7b2c\u4e00\u884c\uff0c\u4e5f\u53ef\u4ee5\u7528head -1\u4ee3\u66ff\ntop -d 1 -p $(ps -ef | grep exe_name | awk '{print $2}' | sed -n '1p')\n</code></pre>"},{"location":"notes/skills/#_2","title":"\u57fa\u51c6\u6d4b\u8bd5","text":"<p>sysbench\u538b\u529b\u6d4b\u8bd5\uff0c\u53ef\u7528\u4e8e\u6d4b\u8bd5cpu\u6027\u80fd\u3001\u5185\u5b58\u8d1f\u8f7d\u3001\u78c1\u76d8io\u3001\u591a\u7ebf\u7a0b\u8c03\u5ea6\u7b49</p>"},{"location":"notes/skills/#cpu_1","title":"\u67e5\u770bcpu\u8d1f\u8f7d","text":""},{"location":"notes/skills/#uptime","title":"uptime","text":"<p>\u67e5\u770b\u7cfb\u7edf\u5e73\u5747\u8d1f\u8f7d</p>"},{"location":"notes/skills/#mpstat","title":"mpstat","text":"<p>\u67e5\u770b\u5404\u4e2acpu\u7684\u8d1f\u8f7d\uff0c\u53ef\u4ee5\u770b\u5230\u662f\u5426\u65f6io\u5bc6\u96c6\u578b\uff08iowait\u4e3a0\u5219\u4e3acpu\u5bc6\u96c6\u578b\uff09</p>"},{"location":"notes/skills/#dstat","title":"dstat","text":"<p>\u67e5\u770btotal cpu\u3001sidk\u3001net\u3001paging\u3001system\u7684\u8d1f\u8f7d</p>"},{"location":"notes/skills/#sar","title":"sar","text":"<p><code>sar -n DEV 1 10</code> / <code>sar -u 1</code>\u7b49\u76d1\u6d4b\u7f51\u5361\u8d1f\u8f7d</p> <pre><code>mpstat -P ALL\n</code></pre>"},{"location":"notes/skills/#pidstat","title":"pidstat","text":"<p>\u67e5\u770b\u8fdb\u7a0b\u7684\u8d1f\u8f7d\u60c5\u51b5</p> <pre><code>pidstat -u 5\n</code></pre>"},{"location":"notes/skills/#stress","title":"stress","text":"<p>\u538b\u529b\u6d4b\u8bd5\u5de5\u5177\uff0c\u5347\u7ea7\u7248\uff1astress-ng\u3002\u517c\u5bb9stress\u3002\u4e0d\u7528\u53e6\u5199c++demo\u4e86</p> <ol> <li>-c, --cpu N\uff1a\u4ea7\u751fN\u4e2a\u8fdb\u7a0b\uff0c\u5faa\u73af\u8c03\u7528sqrt\u4ea7\u751fcpu\u538b\u529b</li> <li>-i, --io N\uff1a\u4ea7\u751fN\u4e2a\u8fdb\u7a0b\uff0c\u5faa\u73af\u8c03\u7528sync\u5c06\u5185\u5b58\u7f13\u51b2\u533a\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u4ea7\u751fio\u538b\u529b\u3002\u5982\u679c\u7f13\u51b2\u533a\u5185\u6570\u636e\u8f83\u5c11\uff0c\u5199\u5230\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u4e5f\u8f83\u5c11\uff0c\u4e0d\u4f1a\u4ea7\u751fIO\u538b\u529b\u3002 \u5728SSD\u78c1\u76d8\u73af\u5883\u4e2d\u5c24\u4e3a\u660e\u663e\uff0c\u5f88\u53ef\u80fdiowait\u603b\u662f0\uff0c\u5374\u56e0\u4e3a\u5927\u91cf\u8c03\u7528\u7cfb\u7edf\u8c03\u7528sync\uff0c\u5bfc\u81f4\u7cfb\u7edfCPU\u4f7f\u7528\u7387sys \u5347\u9ad8\u3002</li> <li>-m, --vm N\uff1a\u4ea7\u751fN\u4e2a\u8fdb\u7a0b\uff0c\u5faa\u73af\u8c03\u7528malloc/free\u8fdb\u884c\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002\uff08--vm-bytes B:\u6307\u5b9a\u5206\u914d\u5185\u5b58\u5927\u5c0f\uff1b--vm-stride B:\u4e0d\u65ad\u7ed9\u90e8\u5206\u5185\u5b58\u8d4b\u503c\uff0c \u8ba9COW\u53d1\u751f\uff1b--vm-hang N:\u5206\u914d\u5230\u5185\u5b58\u7684\u8fdb\u7a0b\u4f11\u7720N\u79d2\u540e\uff0c\u518d\u91ca\u653e\u5185\u5b58\uff1b--vm-keep:\u4e00\u76f4\u5360\u7528\u5185\u5b58\uff09</li> <li>-d, --hdd N\uff1a\u4ea7\u751fN\u4e2a\u4e0d\u65ad\u6267\u884cwrite\u548cunlink\u51fd\u6570\u7684\u8fdb\u7a0b(\u521b\u5efa\u6587\u4ef6\uff0c\u5199\u5165\u5185\u5bb9\uff0c\u5220\u9664\u6587\u4ef6)\u3002\uff08--hdd-bytes B\uff1a\u6307\u5b9a\u6587\u4ef6\u5927\u5c0f\uff09</li> <li>\u2013hdd-noclean\uff1a\u4e0d\u8981\u5c06\u5199\u5165\u968f\u673aASCII\u6570\u636e\u7684\u6587\u4ef6Unlink</li> <li>-t, --timeout N\uff1a\u5728N\u79d2\u540e\u7ed3\u675f\u7a0b\u5e8f</li> <li>\u2013backoff N\uff1a\u7b49\u5f85N\u5fae\u79d2\u540e\u5f00\u59cb\u8fd0\u884c</li> <li>-q, --quiet\uff1a\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u8f93\u51fa\u4fe1\u606f</li> <li>-n, --dry-run\uff1a\u8f93\u51fa\u7a0b\u5e8f\u4f1a\u505a\u4ec0\u4e48\u800c\u5e76\u4e0d\u5b9e\u9645\u6267\u884c\u76f8\u5173\u7684\u64cd\u4f5c</li> </ol> <pre><code># \u6a21\u62df1\u4e2aworker\u8c03\u7528sync\u5237\u65b0\u5185\u5b58\u7f13\u51b2\u533awrite\u5230\u78c1\u76d8\nstress -i 1 --hdd 1 --timeout 600\n# stress-ng\u547d\u4ee4\u4e3e\u4f8b\nstress-ng [OPTION [ARG]]\n# \u4ea7\u751f2\u4e2aworker\u505a\u5706\u5468\u7387\u7b97\u6cd5\u538b\u529b\nstress-ng --cpu 2 --cpu-method pi\n#\u4ea7\u751f2\u4e2aworker\u8fed\u4ee3\u4f7f\u752830\u591a\u79cd\u4e0d\u540c\u7684\u538b\u529b\u7b97\u6cd5\uff0c\u5305\u62ecpi, crc16, fft\u7b49\nstress-ng --cpu 2 --cpu-method all\n#\u4ea7\u751f2\u4e2aworker\u8c03\u7528socket\u76f8\u5173\u51fd\u6570\u4ea7\u751f\u538b\u529b\nstress-ng --sock 2\n#\u4ea7\u751f2\u4e2aworker\u8bfb\u53d6tsc\u4ea7\u751f\u538b\u529b\nstress-ng --tsc 2\n#stress-ng\u5c06\u538b\u529b\u6307\u5b9a\u5230\u6307\u5b9aCPU\u4e0a\nstress-ng --sock 4 --taskset 0-1,3\n</code></pre>"},{"location":"notes/skills/#iperf3","title":"iperf3","text":"<p>\u6d4b\u8bd5\u7f51\u7edc\u541e\u5410\u91cf(\u9ed8\u8ba4\u4f7f\u7528tcp\u534f\u8bae)</p> <pre><code># server\u7aef\uff0c \u76d1\u63a7\u95f4\u969410s\uff0c\u7aef\u53e3\u4e3a5201\niperf3 -s -i 10 -p 5201\n# \u5ba2\u6237\u7aef\uff0c\u6d4b\u901f\u65f6\u95f45s\uff0c\u53d1\u900110\u4e2a\u8fde\u63a5\u6570\uff0c-R\u8868\u793a\u4e0b\u8f7d\u6d4b\u8bd5\uff0c-O\u5ffd\u7565\u524d4s\u7684\u7ed3\u679c\niperf3 -c x.x.x.x -p 5201 -t 5 -P 10 -R -O 4\n# \u5ba2\u6237\u7aef udp\uff0c\u6267\u884c20s\uff0c\u6bcf5s\u6267\u884c\u4e00\u6b21\uff0c\u4f20\u8f93\u6570\u636e\u53055G, --get-server-output\u8868\u793a\u663e\u793a\u670d\u52a1\u7aef\u4fe1\u606f\niperf3 -u -c x.x.x.x -p 5201 -t 20 -i 5 --get-server-output\n# \u5ba2\u6237\u7aef \u4f20\u8f93\u6570\u636e\u53055G\uff0c\u6bcf7s\u663e\u793a\u4e00\u6b21\niperf3 -c x.x.x.x -p 5201 -i 7 -n 5G\n# \u7eaf\u7eaf\u6d4b\u901f\n# \u670d\u52a1\u7aef\niperf3 -s\n# \u5ba2\u6237\u7aef\uff0c\u4ee5GB/s\u8f93\u51fa\uff0c\u65e0\u9650\u5236\u6bd4\u7279\u7387\niperf3 -c server.ip -B client.ip -f G -b 0 [-u]\n</code></pre>"},{"location":"notes/skills/#iptables","title":"iptables","text":"<p>\u6a21\u62df\u4e22\u5305</p> <pre><code># \u4e22\u5f03\u6765\u81eatcp\uff0cip\u4e3a192.168.1.4\u7684\u5305\niptables -A INPUT -p tcp -s 192.168.1.4 -j DROP\n# \u4e22\u5f03\u53d1\u9001\u7ed9192.168.1.4\u7684tcp\u5305\niptables -A OUTPUT -p tcp -d 192.168.1.4 -j DROP\n# \u5217\u51faiptables\u5f53\u524d\u914d\u7f6e\u9879, \u663e\u793a\u5e8f\u53f7\niptables -nvL --line-numbers\n# \u5220\u9664\u914d\u7f6e\u7684\u89c4\u5219\uff0c\u5e8f\u53f7\u4e3aOUTPUT\u76841\niptables -D OUTPUT 1\niptables -D INPUT 1\n</code></pre>"},{"location":"notes/skills/#strace","title":"strace","text":"<p>\u5f88\u5f3a\u5927\uff0c\u8bb0\u5f97\u7528\uff0c\u8ddf\u8e2a\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u65f6\u95f4\u3001\u8ddf\u8e2a\u7279\u5b9a\u7cfb\u7edf\u8c03\u7528read\u3001write\u7b49</p>"},{"location":"notes/skills/#tcpdump","title":"tcpdump","text":"<p>\u6293\u5305\u7a0b\u5e8f\uff0c\u5e38\u7528\u7684\u9009\u9879\u6709</p> <ul> <li>-i \u6307\u5b9a\u8981\u6355\u83b7\u7684\u76ee\u6807\u7f51\u5361\u540d\uff0c\u901a\u8fc7ifconfig\u83b7\u53d6\uff0cany\u8868\u793a\u6355\u83b7\u6240\u6709\u7f51\u5361</li> <li>-w \u5c06\u6355\u83b7\u7684\u5305\u539f\u59cb\u4fe1\u606f\uff08\u4e0d\u89e3\u6790\u3001\u4e5f\u4e0d\u8f93\u51fa\uff09\u5199\u5165\u6587\u4ef6\u4e2d\uff0c\u540e\u8ddf\u6587\u4ef6\u540d</li> <li>-vv \u8be6\u7ec6\u663e\u793a\u6293\u5305\u4fe1\u606f</li> <li>-n\u4e0d\u89e3\u6790\u57df\u540d\uff0c\u76f4\u63a5\u663e\u793aip\uff1b-nn\u4e0d\u89e3\u6790\u57df\u540d\u548c\u7aef\u53e3\u3002\uff08\u4e0d\u89e3\u6790\u8fd8\u4f1a\u63d0\u9ad8\u6293\u53d6\u6548\u7387\uff09</li> <li>-s 0 tcpdump\u9ed8\u8ba4\u622a\u53d6\u524d96\u5b57\u8282\u5185\u5bb9\uff0c\u51990\u8868\u793a\u622a\u53d6\u62a5\u6587\u5168\u90e8\u5185\u5bb9</li> <li>host/src/dst\u8fc7\u6ee4\u4e3b\u673aip</li> <li>tcp \u53ea\u6293\u53d6tcp\u5305</li> <li>udp \u540c\u4e0a</li> </ul>"},{"location":"notes/skills/#perf","title":"perf","text":"<p>\u7edf\u8ba1c++\u7a0b\u5e8f\u5404\u4e2a\u51fd\u6570\u8fd0\u884c\u65f6\u95f4\u548c\u8c03\u7528\u6b21\u6570</p> <pre><code># \u6027\u80fd\u7edf\u8ba1\nperf record -e cpu-clock ./test\n# \u5206\u6790\u62a5\u544a\nperf report\n</code></pre> <p>\u8fdb\u4e00\u6b65\u53ef\u4ee5\u751f\u6210\u706b\u7130\u56fe\uff0c\u4f7f\u7528\u6b65\u9aa4</p> <pre><code># perf \u8bb0\u5f55\u4fe1\u606f\nsudo perf record -F 99 -a -g ./a.out\nsudo perf script &gt; out.perf\n./stackcollapse-perf.pl out.perf &gt; out.folded\n./flamegraph.pl out.folded &gt; kernel.svg\n# \u6700\u7ec8\u4f7f\u7528\u6e38\u89c8\u5668\u6253\u5f00kernel.svg\n\n## \u597d\u770b\u7684top\n\n```sh\nsudo apt install htop\n</code></pre>"},{"location":"notes/skills/#_3","title":"\u7cfb\u7edf\u68c0\u6d4b\u5de5\u5177","text":"<ul> <li>tcpdump: \u7f51\u7edc\u6293\u5305</li> <li>lsof\uff1a\u5217\u51fa\u6240\u6709\u6253\u5f00\u7684fd</li> <li>nc\uff1a\u53ef\u7528\u4e8e\u5feb\u901f\u6a21\u62df\u7f51\u7edc\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\u5bf9\u7f51\u7edc\u6570\u636e\u53d1\u9001\u63a5\u6536\u7684\u5904\u7406\uff0c\u8fdb\u884c\u8c03\u8bd5</li> <li>strace\uff1a\u7528\u4e8e\u8ddf\u8e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u63a5\u53d7\u7684\u4fe1\u53f7</li> <li>netstat\uff1a\u7f51\u7edc\u8fde\u63a5\u3001\u8def\u7531\u7b49\u4fe1\u606f</li> <li>ss: \u4e0enetstat\u5dee\u4e0d\u591a\uff0c\u4f46\u6027\u80fd\u6bd4netstat\u597d</li> <li>vmstat/ifstat/mpstat</li> </ul>"},{"location":"notes/skills/#_4","title":"\u67e5\u770b\u7cfb\u7edf\u5185\u5b58","text":"<pre><code># \u4ee5MB\u67e5\u770b\nfree -m\n# \u4ee5GB\u67e5\u770b\nfree -g\n</code></pre>"},{"location":"notes/skills/#_5","title":"\u4fee\u6539\u8fdb\u7a0b\u4f18\u5148\u7ea7","text":"<pre><code>renice -n [number] [pid]\n</code></pre>"},{"location":"notes/skills/#shell","title":"\u8f6e\u8be2\u8c03\u7528shell\u547d\u4ee4","text":"<pre><code># \u7ec8\u7aef\u547d\u4ee4\u884c\u8f6e\u8be2\u67e5\u770b\u72b6\u6001\u547d\u4ee4\uff08while do\uff09\uff1a\nwhile true; do top -d 1 -p [pid]; sleep 1; done\n</code></pre>"},{"location":"notes/skills/#addr2line","title":"addr2line","text":"<p>\u6839\u636ecppcrash\u6808\u4fe1\u606f\uff0c\u5b9a\u4f4d\u5bf9\u5e94so\u6216\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u884c\u6570\uff08\u7f16\u8bd1\u65f6\u52a0-g\uff09</p> <pre><code>addr2line -C -f -e [.so/.exe/.out file] [crash pc]\n</code></pre>"},{"location":"notes/skills/#cfilt","title":"c++filt","text":"<p>\u5206\u6790c++ \u7f16\u8bd1\u51fa\u7684\u6666\u6da9\u96be\u61c2\u7684\u540d\u79f0</p> <pre><code>c++filt [eg: _ZN5RkCam10CamHwIsp2020clearStaticCamHwInfoEv]\n</code></pre>"},{"location":"notes/skills/#_6","title":"\u8ba1\u6570","text":"<pre><code>ls | wc -l\n</code></pre>"},{"location":"notes/skills/#grep","title":"grep","text":"<pre><code># \u6307\u5b9a\u5339\u914d\ngrep -E \"[...]|[...]\"\n# \u6307\u5b9a\u6392\u9664\ngrep -v \"[...]\\|[...]\\|[...]\"\n# \u8f93\u51fa\u4e0a\u4e0b\u6587\n# \u663e\u793a\u524d10\u884c\ngrep -A 10\n# \u663e\u793a\u540e10\u884c\ngrep -B 10\n# \u663e\u793a\u524d\u540e10\u884c\ngrep -C 10\n</code></pre>"},{"location":"notes/ssh/","title":"SSH","text":""},{"location":"notes/ssh/#ssh_1","title":"ssh\u670d\u52a1","text":"<pre><code># \u5b89\u88c5ssh server\nsudo apt install openssh-server\n# \u542f\u52a8ssh\u670d\u52a1\nsudo /etc/init.d/ssh start\n# \u6216\u8005\nservice ssh start\n# \u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8\nsudo systemctl enable ssh\n# \u514d\u5bc6\u767b\u5f55\uff0c\u5728.ssh\u7684authorized_keys\u4e2d\u6dfb\u52a0\u522b\u7684\u4e3b\u673a\u7684id_rsa.pub\n# \u5728\u522b\u7684\u4e3b\u673a\u7684.ssh/config \u4e2d\u589e\u52a0 IdentityFile \"[id_rsa  path]\"\n</code></pre>"},{"location":"notes/ssh/#ssh_2","title":"\u672c\u5730\u751f\u6210ssh\u516c\u94a5","text":"<pre><code>ssh-keygen\n# \u8def\u5f84 ~/.ssh/id_rsa\n</code></pre>"},{"location":"notes/ssh/#_1","title":"\u6302\u8f7d\u8fdc\u7aef\u6587\u4ef6\u7cfb\u7edf","text":"<p>```sh</p>"},{"location":"notes/ssh/#sshfs","title":"\u5b89\u88c5sshfs\u5ba2\u6237\u7aef","text":"<p>sudo apt install sshfs</p>"},{"location":"notes/ssh/#_2","title":"\u521b\u5efa\u6302\u8f7d\u76ee\u5f55","text":"<p>sudo mkdir -p /mnt/test</p>"},{"location":"notes/ssh/#_3","title":"\u6302\u8f7d\u8fdc\u7aef\u6587\u4ef6\u5939","text":"<p>sudo sshfs -o allow_other user_name@xxx:/home/... /mnt/test</p>"},{"location":"notes/ssh/#_4","title":"\u6302\u8f7d\u65f6\u4f7f\u7528\u5bc6\u94a5\u9a8c\u8bc1\u8eab\u4efd","text":"<p>sudo sshfs -o allow_other,IdentityFile=/home/user_name/.ssh/id_rsa user_name@xxx:/home/... /mnt/test</p>"},{"location":"notes/unix/","title":"Unix\u5e73\u53f0\u5de5\u5177\u4f7f\u7528\u6280\u5de7","text":""},{"location":"notes/unix/#_1","title":"\u7edf\u8ba1\u4ee3\u7801\u884c\u6570","text":"<p>cloc\u5de5\u5177\u7edf\u8ba1\u5404\u8bed\u8a00\uff1bgitstats\u7edf\u8ba1\u63d0\u4ea4\u884c\u6570</p> <pre><code># \u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u5404\u8bed\u8a00\u884c\u6570\uff0c\"\"\u5185\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\ncloc . --fullpath --not-match-d=\"./services/3rdpart|./services/tests\"\n</code></pre>"},{"location":"notes/unix/#wpawifi","title":"WPA\u8fde\u63a5wifi","text":""},{"location":"notes/unix/#wpa","title":"\u542f\u52a8wpa\u670d\u52a1","text":"<pre><code>wpa_supplicant -Dnl80211 -iwlan0 -c /etc/wpa_supplicant.conf\n</code></pre>"},{"location":"notes/unix/#wpa_cli","title":"\u542f\u52a8wpa_cli\u5e94\u7528","text":"<pre><code>wpa_cli # \u6709\u547d\u4ee4\u548c\u4ea4\u4e92\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\n\nwpa_cli -i wlan0 scan              # \u641c\u7d22\u9644\u4ef6wifi\u70ed\u70b9\nwpa_cli -i wlan0 scan_result       # \u663e\u793a\u641c\u7d22wifi\u70ed\u70b9\nwpa_cli -i wlan0 status            # \u5f53\u524d WPA/EAPOL/EAP \u901a\u8baf\u72b6\u6001\nwpa_cli -i wlan0 ping              # pings wpa_supplicant\n</code></pre>"},{"location":"notes/unix/#_2","title":"\u6dfb\u52a0\u65b0\u7684\u8fde\u63a5","text":"<pre><code>wpa_cli -i wlan0 add_network                      # \u6dfb\u52a0\u4e00\u4e2a\u7f51\u7edc\u8fde\u63a5,\u4f1a\u8fd4\u56de&lt;network id&gt;\nwpa_cli set_network &lt;network id&gt;  ssid '\"name\"'   # ssid\u540d\u79f0\nwpa_cli set_network &lt;network id&gt;  psk '\u201cpsk\u201d'     # \u5bc6\u7801\nwpa_cli set_network &lt;network id&gt;  scan_ssid 1\nwpa_cli set_network &lt;network id&gt;  priority  1     # \u4f18\u5148\u7ea7\n</code></pre>"},{"location":"notes/unix/#_3","title":"\u4fdd\u5b58\u8fde\u63a5","text":"<pre><code>wpa_cli -i wlan0 save_config   # \u4fe1\u606f\u4fdd\u5b58\u5230\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u524d\u9762\u63d0\u5230\u7684/etc/wpa_supplicant.conf\n</code></pre>"},{"location":"notes/unix/#_4","title":"\u65ad\u5f00\u8fde\u63a5","text":"<pre><code>wpa_cli -i wlan0 disable_network &lt;network id&gt;\n</code></pre>"},{"location":"notes/unix/#_5","title":"\u8fde\u63a5\u5df2\u6709\u8fde\u63a5","text":"<pre><code>wpa_cli -i wlan0 list_network                  # \u5217\u4e3e\u4fdd\u5b58\u8fc7\u5f97\u8fde\u63a5\nwpa_cli -i wlan0 select_network  &lt;network id&gt;  # \u8fde\u63a5\u6307\u5b9a\u7684ssid\nwpa_cli -i wlan0 enable_network  &lt;network id&gt;  # \u4f7f\u80fd\u5236\u5b9a\u7684ssid\n</code></pre>"},{"location":"notes/windows/","title":"Windows\u5e73\u53f0\u5de5\u5177\u4f7f\u7528\u6280\u5de7","text":""},{"location":"notes/windows/#wireshark","title":"Wireshark","text":"<p>\u5728<code>Wireshark</code>\u7684\u5206\u6790\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>lua</code>\u811a\u672c\u5c06<code>rtp</code>\u7684<code>h264</code>\u6d41\u7ed9\u5bfc\u51fa\u6765\uff0c\u89c1<code>rtp_h264_extractor.lua</code>\u3002</p> <p>\u6ce8\uff1a\u8fd9\u4e2a\u811a\u672c\u4e00\u822c\u53ea\u9002\u7528\u4e8e\u5728\u53d1<code>idr</code>\u5e27\u4e4b\u524d\u6709\u53d1<code>sps</code>, <code>pps</code>\u7684<code>rtp</code>\u6d41 \u6709\u4e9b<code>rtsp</code>\u62c9\u6d41\u7684<code>rtp</code>\u5305\u7531\u4e8e\u5728<code>rtsp</code>\u534f\u8bae\u4ea4\u4e92\u65f6\u5728<code>sdp</code>\u4e2d\u643a\u5e26\u4e86<code>sps</code>, <code>pps</code>\u4fe1\u606f\uff0c\u53ef\u80fd\u51fa\u73b0\u5728\u540e\u7eed\u7684\u5a92\u4f53\u6d41\u4e2d\u5c31\u4e0d\u4f1a\u518d\u53d1\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u624b\u52a8\u6539\u811a\u672c\uff0c\u89c1<code>--here here</code>\u3002</p>"},{"location":"notes/windows/#notepad","title":"Notepad++","text":""},{"location":"notes/windows/#_1","title":"\u5c06\u5339\u914d\u884c\u5220\u9664","text":"<p>\u60f3\u5728Notepad++\u4e2d\u5229\u7528\u67e5\u627e\u529f\u80fd\uff0c\u67e5\u627e\u6587\u4ef6\u4e2d\u542b\u6709\u5b57\u6bb5 \u201c0|20180706\u201d \u7684\u884c\u5e76\u4e88\u4ee5\u5220\u9664\u3002</p> <p>\u5177\u4f53\u6b65\u9aa4\uff1a</p> <ol> <li>Ctrl + F\uff0c\u67e5\u627e\uff0c\u67e5\u627e\u6a21\u5f0f\u9009\u62e9 '\u6b63\u5219\u8868\u8fbe\u5f0f'\uff0c\u4e0d\u9009 '.\u5339\u914d\u65b0\u884c'</li> <li>\u67e5\u627e\u76ee\u6807\u8f93\u5165 ^.0|20180706.\\r?\\n \uff08\u5982\u679c\u8981\u4fdd\u7559\u7a7a\u884c\uff0c\u5219\u67e5\u627e ^.0|20180706.$\uff09</li> <li>\u66ff\u6362\u4e3a\uff1a\uff08\u7a7a\uff09</li> </ol>"},{"location":"notes/windows/#windows_1","title":"Windows\u5185\u5b58\u5360\u7528\u8fc7\u9ad8","text":"<p>\u4f7f\u7528\u5fae\u8f6f\u7684RAMMap\u8f6f\u4ef6\uff0c Empty Working Sets\u89e3\u51b3</p>"},{"location":"program-languages/cpp/cpp-pat-a1065/","title":"\u9898\u89e3\u4ee3\u7801\u94fe\u63a5","text":"<p>A1065 A+B and C(64bit)</p>"},{"location":"program-languages/cpp/cpp-pat-a1065/#_2","title":"\u9898\u76ee\u8bf4\u660e","text":"<p>\u6b64\u9898\u662f\u8003\u5bdf\u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u672c\u5e94\u8be5\u662f\u8f83\u4e3a\u5bb9\u6613\u7684\u9898\u3002\u4f46\u662f\u7531\u4e8e\u6211\u73b0\u5728\u662f\u5728\u5b66\u4e60c++\u4e2d\uff0c\u5e72\u5565\u90fd\u7528<code>cin</code>/<code>cout</code>\u3002 \u53d1\u73b0\u63d0\u4ea4\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\uff0c\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\u70b9\u7528<code>cin</code>\u8fc7\u4e0d\u53bb\uff0c\u7528<code>scanf</code>\u5c31\u8fc7\u53bb\u4e86\u3002\u4e8e\u662f\u5c31\u60f3\u7740\u63a2\u7a76\u4e00\u756a</p>"},{"location":"program-languages/cpp/cpp-pat-a1065/#cin-scanf","title":"cin \u4e0e scanf \u63a2\u7a76","text":"<p>\u901a\u8fc7\u67e5\u9605\u8d44\u6599\u5f97\u77e5\uff0c<code>cin</code>\u662f\u67094\u4e2a\u6761\u4ef6\u72b6\u6001\u91cf\u7684\uff1a</p> <pre><code>goodbit:\u65e0\u9519\u8bef\neofbit:\u5df2\u5230\u8fbe\u6587\u4ef6\u5c3e\nfailbit:\u975e\u81f4\u547d\u7684\u8f93\u5165/\u8f93\u51fa\u9519\u8bef\uff0c\u53ef\u633d\u56de\nbadbit:\u81f4\u547d\u7684\u8f93\u5165/\u8f93\u51fa\u9519\u8bef,\u65e0\u6cd5\u633d\u56de\n</code></pre> <p>\u800c\u50cf\u8fd9\u79cd\u8f93\u5165\u683c\u5f0f\u4e0d\u7b26\u5408\u6d41\u8bbe\u7f6e\u7684\u683c\u5f0f\u5219\u51fa\u9519\uff0c\u5982<code>cin</code>\u4e00\u4e2a<code>int</code>\u6570\u636e\uff0c\u4f46\u662f\u5176\u503c\u4e3a\\(2^{31}\\)=2147483648\uff0c\u4ea7\u751f\u4e0a\u6ea2\u3002</p> <ul> <li> <p><code>cin</code>\u7684\u5904\u7406</p> <p>\u6b64\u65f6<code>failbit</code>\u5c06\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u8868\u793a\u51fa\u9519\uff0c\u4e14\u6b64\u65f6<code>cin</code>\u8f93\u5165\u7684\u6570\u636e\u4ee5\u51681\u8868\u793a\u51fa\u9519\uff0c\u6b64\u5904\u5373\u4e3a\\(2^{31}-1\\)=2147483647\u3002 - <code>scanf</code>\u7684\u5904\u7406</p> <p>\u6b64\u65f6\u8f93\u5165\u7684\u503c\u4e3a\\(-2^{31}\\)\uff0c\u5373-2147483648</p> </li> </ul> <p><code>cin</code>\u8fd4\u56defalse\u5219\u51fa\u9519\uff0c\u53ef\u4ee5\u68c0\u6d4b\u51fa\u8fd9\u79cdfailbit\u51fa\u9519\uff0c\u5373\u7528<code>cin.fail()</code>\u3002\u82e5<code>failbit</code>\u88ab\u8bbe\u7f6e\u4e86\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002\u6355\u83b7\u5230\u9519\u8bef\u540e\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7<code>cin.clear()</code>\u6e05\u9664\u72b6\u6001\u6807\u5fd7\u4f4d\uff0c\u5373\u53ef\u4ee5\u633d\u56de\u3002\u6b64\u65f6\u53ef\u7ee7\u7eed\u8f93\u5165\u65b0\u7684\u503c\u5b58\u5165\u521a\u624d\u8981\u5b58\u5165\u7684\u53d8\u91cf\u4e2d\uff0c\u4e4b\u524d\u7684\u9519\u8bef\u8f93\u5165\u5219\u88ab\u4e22\u5f03\uff08\u8fd9\u4e00\u70b9\u6211\u5176\u5b9e\u6709\u5728\u67e5\u627e\u80fd\u5426\u4e0d\u4e22\u5f03\uff0c\u91cd\u65b0\u5229\u7528\uff0c\u4f46\u6ca1\u6709\u627e\u5230\u8fd9\u65b9\u9762\u4f46\u8d44\u6599\ud83d\ude43\uff09 \u82e5\u4e0d\u6e05\u9664\u72b6\u6001\u6807\u5fd7\u4f4d\uff0c\u5219\u540e\u7eed\u4e0d\u80fd\u7ee7\u7eed\u8fdb\u884c\u8f93\u5165 \u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u4f7f\u7528<code>int</code>\u662f\u53ef\u4ee5\u6d4b\u51fa\u8fd9\u4e2a\u5dee\u522b\u7684\uff0c\u4f46\u6b64\u9898\u662f\u7528<code>long long</code>\u578b\u7684\uff0c\u6216\u8bb8\u662f\u56e0\u4e3a\u76ee\u524d\u673a\u5668\uff08\u5305\u62ecoj\uff09\u57fa\u672c\u90fd\u662f64\u4f4d\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5bf9<code>long long</code>\u7684\u6ea2\u51fa\u5904\u7406<code>cin</code>\u548c<code>scanf</code>\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6d4b\u8bd5\u5982\u56fe </p> <p>\u663e\u800c\u6613\u89c1\uff0c<code>cin</code>\u4e0e<code>scanf</code>\u7684\u5dee\u5f02\u4e4b\u5904</p> <p>\u5bf9\u4e86\uff0c\u5bf9\u4e8e\u6548\u7387\u8fd9\u65b9\u9762\uff0c<code>cin</code>\u82e5\u4f7f\u7528\u4e86<code>cin.sync_with_stdio(false)</code>\u5173\u95ed\u540c\u6b65\uff0c\u5373\u53ef\u8ddf<code>scanf</code>\u6548\u7387\u5dee\u4e0d\u591a\u3002</p>"},{"location":"program-languages/cpp/cpp/","title":"C++ Memo","text":""},{"location":"program-languages/cpp/cpp/#_1","title":"\u7a0b\u5e8f\u7684\u7f16\u8bd1\u548c\u8fd0\u884c","text":"<ul> <li>\u5e38\u7528\u7684c++\u7f16\u8bd1\u5668\u662fGNU\u7f16\u8bd1\u5668\uff08\u8fd8\u6709\u5fae\u8f6f\u7684Visual Studio\u7f16\u8bd1\u5668\uff09</li> <li>\u9ed8\u8ba4\u8fd0\u884cGNU\u547d\u4ee4\u662f<code>g++</code>:     <code>$ g++ proc.cpp -o proc_name</code>     \u5176\u4e2d<code>g++</code>\u8c03\u7528GNU\u7f16\u8bd1\u5668\uff0c<code>proc.cpp</code>\u662f\u6211\u4eec\u5199\u7684\u7a0b\u5e8f\u540d\uff0c<code>-o proc_name</code>\u662f\u7f16\u8bd1\u5668\u53c2\u6570\uff0c\u8868\u793a\u7f16\u8bd1\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6587\u4ef6\u540d--<code>proc_name</code>     \u82e5\u4e0d\u52a0-o\u53c2\u6570\uff0c\u5219win\u4e0b\u9ed8\u8ba4\u751f\u6210<code>a.exe</code>\u6587\u4ef6\uff0cunix\u4e0b\u751f\u6210<code>a.out</code>\u6587\u4ef6</li> <li>\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6     win\u4e0b\u901a\u8fc7 <code>.\\a</code>\u8fd0\u884c<code>a.exe</code>--\u540e\u7f00\u53ef\u4ee5\u7701\u7565     unix\u4e0b\u901a\u8fc7<code>./a.out</code>\u8fd0\u884c<code>a.out</code></li> <li>\u83b7\u53d6\u7a0b\u5e8f\u8fd4\u56de\u503c     \u8fd0\u884c\u540e\u901a\u8fc7<code>echo</code>\u547d\u4ee4\u83b7\u53d6\u7a0b\u5e8f\u7684\u8fd4\u56de\u503c     win\u4e0b\u952e\u5165<code>$ echo $ERRORLEVEL%</code>     unix\u4e0b\u952e\u5165<code>$ echo $?</code></li> </ul> <p>\u6ce8\uff1a \u547d\u4ee4\u4e2d\u7684\u7b2c\u4e00\u4e2a$\u662f\u7cfb\u7edf\u63d0\u793a\u7b26\uff0c\u4e0d\u7528\u8f93\u5165</p>"},{"location":"program-languages/cpp/cpp/#_2","title":"\u58f0\u660e\u4e0e\u5b9a\u4e49\u7684\u5173\u7cfb","text":"<ul> <li> <p>\u6982\u5ff5\u4e0a\u770b</p> <ol> <li>\u58f0\u660e\u662f\u4f7f\u540d\u5b57\u88ab\u7a0b\u5e8f\u6240\u77e5\uff0c\u544a\u8bc9\u7a0b\u5e8f\u53c8\u4e00\u4e2a\u67d0\u79cd\u7c7b\u578b\u7684\u53d8\u91cf/\u51fd\u6570\uff0c\u89c4\u5b9a\u4e86\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u540d\u5b57\uff0c\u5e76**\u4e0d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4**\u3002</li> <li>\u5b9a\u4e49\u662f\u8d1f\u8d23\u521b\u5efa\u4e8e\u540d\u5b57\u5173\u8054\u7684\u5b9e\u4f53\uff0c\u4e0d\u4ec5\u89c4\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u540d\u5b57\uff0c\u8fd8\u4f1a\u7ed9\u8fd9\u4e2a\u53d8\u91cf**\u7533\u8bf7\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u9ed8\u8ba4\u8d4b\u521d\u503c**\u3002</li> </ol> </li> <li> <p>\u53d8\u91cf\u80fd\u4e14\u53ea\u80fd\u88ab\u5b9a\u4e49\u4e00\u6b21\uff0c\u4f46\u53ef\u4ee5\u88ab\u591a\u6b21\u58f0\u660e</p> </li> <li> <p>\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u800c\u975e\u5b9a\u4e49\uff0c\u5219\u9700\u8981\u5728\u53d8\u91cf\u540d\u524d\u52a0\u5173\u952e\u5b57<code>extern</code>\uff0c\u4e14\u4e0d\u8981\u663e\u793a\u521d\u59cb\u5316\uff0c\u4e00\u65e6\u521d\u59cb\u5316\u5c31\u62b5\u6d88\u4e86<code>extern</code>\u7684\u4f5c\u7528\uff0c\u53d8\u6210\u4e86\u5b9a\u4e49</p> <pre><code>//\u58f0\u660e\u4e86\u6574\u578b\u53d8\u91cfi,\u4e0d\u662f\u5b9a\u4e49\nextern int i;\n//\u58f0\u660e\u5e76\u4e14\u5b9a\u4e49\u4e86\u6574\u578b\u53d8\u91cfj,\u5206\u914d\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4e00\u822c\u9ed8\u8ba4\u8d4b\u521d\u503c\nint j;\n//\u663e\u793a\u521d\u59cb\u5316\u62b5\u6d88\u4e86extern\u7684\u4f5c\u7528\uff0c\u6b64\u4e3a\u5b9a\u4e49\nextern double pi = 3.1416;\n</code></pre> </li> </ul>"},{"location":"program-languages/cpp/cpp/#const","title":"\u5f15\u7528\u548c\u6307\u9488\u53caconst","text":"<ul> <li>\u5f15\u7528(refers to)\uff0c\u5373\u522b\u540d\u3002\u7a0b\u5e8f\u5c06\u5f15\u7528\u548c\u5b83\u7684\u521d\u59cb\u503c\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u5c06\u521d\u59cb\u503c\u62f7\u8d1d\u7ed9\u5f15\u7528\u3002\u5f15\u7528\u4e0d\u662f\u5bf9\u8c61\uff0c\u5fc5\u987b\u521d\u59cb\u5316\u3002</li> <li> <p>\u6307\u9488(point to)\uff0c\u672c\u8eab\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5141\u8bb8\u5bf9\u6307\u9488\u8d4b\u503c\u548c\u62f7\u8d1d\uff0c\u65e0\u9700\u5728\u5b9a\u4e49\u65f6\u8d4b\u521d\u503c</p> <p>c++\u7684\u7a7a\u6307\u9488\u5b57\u9762\u503c\u4e3a<code>nullptr</code>\uff0c\u5b83\u53ef\u4ee5\u8f6c\u6362\u6210\u4efb\u610f\u5176\u4ed6\u7684\u6307\u9488\u7c7b\u578b</p> </li> <li> <p><code>const</code>\u9650\u5b9a\u7b26\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cconst\u5bf9\u8c61\u4ec5\u5728\u6587\u4ef6\u5185\u6709\u6548\uff0c\u82e5\u60f3\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5171\u4eabconst\u5bf9\u8c61\uff0c\u5219\u9700\u8981\u5728\u5b9a\u4e49\u524d\u52a0<code>extern</code>\u5173\u952e\u5b57</p> </li> <li> <p>\u5bf9<code>const</code>\u5bf9\u5f15\u7528\uff1a<code>const type &amp;</code>\uff0c\u53c8\u79f0\"\u5e38\u91cf\u5f15\u7528\"\u3002</p> <pre><code>const int ci = 1024;const int &amp;r1 = ci; // \u6b63\u786e\uff0c\u6b64\u65f6r1\u5373\u4e3aconst\u5e38\u91cfci\u7684\u5f15\u7528\uff0c\u4e0d\u53ef\u901a\u8fc7r1\u6539\u53d8ci\u7684\u503c\nint &amp;r = ci; // \u51fa\u9519\uff0c\u4e0d\u80fd\u5c06\u666e\u901a\u7684\u5f15\u7528&amp;\u7ed1\u5b9a\u5230const\u5e38\u91cf\u4e0a\n</code></pre> </li> <li> <p>const\u578b\u6307\u9488<code>type *const</code>\uff1a\u9876\u5c42const**\u8868\u793a\u6307\u9488/\u5bf9\u8c61\u672c\u8eab\u662f\u4e2a\u5e38\u91cf\uff0c**\u5e95\u5c42const**\u8868\u793a\u6307\u9488\u6240\u6307\u7684\u5bf9\u8c61\u662f\u4e2a\u5e38\u91cf--**\u7528\u4e8e\u58f0\u660e\u5f15\u7528\u7684const\u90fd\u662f\u5e95\u5c42const</p> <p>\u5e95\u5c42const\u7684\u9650\u5236\uff1a\u6267\u884c\u5bf9\u8c61\u7684\u62f7\u8d1d\u64cd\u4f5c\u65f6\uff0c\u62f7\u5165\u548c\u62f7\u51fa\u7684\u5bf9\u8c61\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u5e95\u5c42const\u8d44\u683c--\u6307\u5411\u7684\u662f\u4e2a\u5e38\u91cf\uff0c\u6216\u8005\u4e24\u4e2a\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u53ef\u4ee5\u8f6c\u6362\uff08\u5982\uff0c\u975e\u5e38\u91cf\u53ef\u4ee5\u8f6c\u6362\u6210\u5e38\u91cf\uff0c\u53cd\u4e4b\u4e0d\u884c\uff09</p> </li> <li> <p>\u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u540c\u65f6\u662f\u9876\u5c42const\u548c\u5e95\u5c42const\uff0c\u5982</p> <pre><code>const int *const p1 = p;\n// \u9760\u53f3\u7684const\u662f\u9876\u5c42const--\u81ea\u8eab\u662f\u5e38\u91cf\uff0c\u9760\u5de6\u7684\u662f\u5e95\u5c42\nconstcont int &amp;r = i; // r\u662f\u5e95\u5c42const\n</code></pre> </li> <li> <p>c++11\u53ef\u4ee5\u901a\u8fc7\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a<code>constexpr</code>\u7c7b\u578b\uff0c\u4f7f\u7f16\u8bd1\u5668\u81ea\u5df1\u9a8c\u8bc1\u53d8\u91cf\u662f\u5426\u4e3a\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff08\u5b57\u9762\u503c\u4e5f\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\uff09\uff0c\u5f53\u7136\uff0c\u58f0\u660e\u65f6\u5fc5\u987b\u7528\u5e38\u91cf\u8868\u8fbe\u5f0f\u521d\u59cb\u5316\u3002\u9650\u5b9a\u7b26<code>constexpr</code>\u4ec5\u5bf9\u6307\u9488/\u5bf9\u8c61\u6709\u6548\uff0c\u5bf9\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u65e0\u5173\uff0c\u5373\u662f**\u9876\u5c42const**</p> </li> </ul>"},{"location":"program-languages/cpp/cpp/#type-alias","title":"\u7c7b\u578b\u522b\u540d(type alias)","text":"<ul> <li> <p>\u4f20\u7edf\u65b9\u6cd5\uff1a\u4f7f\u7528\u5173\u952e\u5b57<code>typedef</code></p> <p>typedef double wages; // wages\u662fdouble\u7684\u540c\u4e49\u8bcd(synonym)</p> </li> <li> <p>C++\u65b0\u6807\u51c6\uff1a\u4f7f\u7528\u5173\u952e\u5b57<code>using</code></p> <p>using SI = Sales_item; // SI\u662fSales_item\u7684\u540c\u4e49\u8bcd</p> </li> <li> <p><code>auto</code>\uff1a\u7f16\u8bd1\u5668\u5206\u6790\u8868\u8fbe\u5f0f\u6240\u5c5e\u7684\u7c7b\u578b\uff0cauto\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u6709\u521d\u59cb\u503c\uff0c\u4e00\u822c\u5ffd\u7565\u9876\u5c42const</p> </li> <li> <p><code>decltype</code>\uff1a\u9009\u62e9\u5e76\u8fd4\u56de\u64cd\u4f5c\u6570\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u5206\u6790\u5f97\u5230\u7c7b\u578b\uff0c\u800c\u4e0d\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c</p> <pre><code>decltype(f()) sum = x; // sum\u7c7b\u578b\u4e3a\u51fd\u6570f\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u5e76\u4e0d\u8c03\u7528f\n// decltype((variable))\u7684\u7ed3\u679c\u6c38\u8fdc\u662f\u5f15\u7528\uff0c\u800cdecltype(variable)\u7ed3\u679c\u53ea\u6709\u5f53variable\u672c\u8eab\u662f\u5f15\u7528\u65f6\u624d\u662f\u5f15\u7528\n</code></pre> </li> </ul>"},{"location":"program-languages/cpp/gtest/","title":"Google Test","text":""},{"location":"program-languages/cpp/gtest/#format","title":"Format","text":"<p>gtest\u7684cpp\u6587\u4ef6\u683c\u5f0f\uff1a</p> <pre><code>#include &lt;gtest/gtest.h&gt;\n// \u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\uff0c\u4e3a\u9759\u6001\u3001\u5168\u5c40\u51fd\u6570\u6216\u7b80\u5355\u7c7b\u7f16\u5199unittest\nTEST(TestSuiteName, TestName) {}\n// \u7528\u4e8e\u9700\u8981\u8bbf\u95eeunittest\u4e2d\u7684\u5bf9\u8c61\u548c\u5b50\u7a0b\u5e8f\u65f6\uff0cTestFixture\u9700\u8981\u7ee7\u627ftesting::Test\uff0c\u7c7b\u4e2d\u4f7f\u7528public\u6216protected\uff0c\u4fbf\u4e8e\u5b50\u7c7b\u8c03\u7528\n// \u591a\u4e2a\u6d4b\u8bd5\u573a\u666f\u9700\u8981\u76f8\u540c\u6570\u636e\u914d\u7f6e\u65f6\nTEST_F(TestFixture, TestName) {}\n// \u7528\u4e8e\u4f7f\u7528\u53c2\u6570\u7f16\u5199\u6d4b\u8bd5\uff0cTestSuiteName\u9700\u8981\u7ee7\u627ftesting::TestWithParam&lt;T&gt;\uff0cT\u4e3a\u53c2\u6570\u7c7b\u578b\nTEST_P(TestSuiteName, TestName) { auto n = GetParam(); ... }\n// \u544a\u8bc9gtest\u6d4b\u8bd5\u53c2\u6570\u7684\u8303\u56f4\uff0c\u6848\u4f8b\u540d\u88ab\u547d\u540d\u4e3aCastPrefix/TestSuiteName.TestName/Param\nINSTANTIATE_TEST_CASE_P(CasePrefix, TestSuiteName, testing::Values())\n\nint main(int argc, char** argv)\n{\n    testing::InitGoogleTest(&amp;argc, argv);\n    return RUN_ALL_TESTS();\n}\n</code></pre> function meaning Range(begin, end[, step]) [begin, end), use step Values(v1, v2, ..., vN) v1, v2, ..., vN Valuesln(container) &amp; Valuesln(begin, end) from C array or stl Bool() true, false Combine(g1, g2, ..., gN) permunate g1, g2, ..., gN, form a tuple as param"},{"location":"program-languages/cpp/gtest/#event-mechanism","title":"Event Mechanism","text":""},{"location":"program-languages/cpp/gtest/#global","title":"Global","text":"<p>\u6240\u6709\u6848\u4f8b\u6267\u884c\u524d\u540e\uff0c\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u7ee7\u627ftesting::Environment\u7684\u7c7b\uff0c\u5b9e\u73b0\u5176\u4e2d\u7684SetUp\u548cTearDown\u65b9\u6cd5\u3002</p> <pre><code>class XXXEnvironment: public testing::Environment\n{\npublic:\n    virtual void SetUp() { ... }\n    virtual void TearDown() { ... }\n};\n\n// add to gtest\n\nint main(int argc, char** argv)\n{\n    test::AddGlobalTestEnvironment(new XXXEnvironment);\n    ...\n}\n</code></pre>"},{"location":"program-languages/cpp/gtest/#testsuite","title":"TestSuite","text":"<p>\u5728\u67d0\u4e00\u6279\u6848\u4f8b\u4e2d\u7b2c\u4e00\u4e2a\u6848\u4f8b\u6267\u884c\u524d\uff0c\u6700\u540e\u4e00\u4e2a\u6848\u4f8b\u6267\u884c\u540e\u3002\u9700\u8981\u7f16\u5199\u7ee7\u627ftesting::Test\u7684\u7c7b\uff0c\u5b9e\u73b0\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5\u3002</p> <pre><code>class XXXTest: public testing::Test\n{\n// or public\nprotected:\n    // can be used to initialize\n    static void SetUpTestCase() { ... }\n    static void TearDownTestCase() { ... }\n};\n\n// use TEST_F to use XXXTest\nTEST_F(XXXTest, Test) { ... }\n</code></pre>"},{"location":"program-languages/cpp/gtest/#testcase","title":"TestCase","text":"<p>\u5728\u6bcf\u4e2a\u6848\u4f8b\u6267\u884c\u524d\u540e\uff0c\u540cTestSuite\uff0c\u4f46\u9700\u8981\u5b9e\u73b0\u7684\u662fSetUp\u548cTearDown</p> <pre><code>// onaji to TestSuite\nprotected:\n    virtual void SetUp() { ... }\n    virtual void TearDown() { ... }\n\n// use TEST_F\n</code></pre>"},{"location":"program-languages/cpp/gtest/#deathtest","title":"DeathTest","text":"<p>\u7f16\u5199\u6b7b\u4ea1\u6d4b\u8bd5\u65f6\uff0cTEST\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f7f\u7528DeathTest\u4f5c\u4e3a\u540e\u7f00\uff0c\u8fd9\u6837gtest\u4f1a\u4f18\u5148\u6267\u884c\uff0c\u7ebf\u7a0b\u5b89\u5168\u3002</p> <pre><code>// statement\u4e3a\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801/\u51fd\u6570\uff0cregex\u4e3a\u5339\u914d\u5f02\u5e38\u65f6\u8f93\u51fa\u5185\u5bb9\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\nEXPECT_DEATH(statement, regex)\n</code></pre> <p>\u6709\u9700\u8981\u89c1\u6b7b\u4ea1\u6d4b\u8bd5</p>"},{"location":"program-languages/cpp/gtest/#run-parameters","title":"Run Parameters","text":"<p>Priority: Command-line &gt; code-flag &gt; system env path.</p> <pre><code>// \u8bbe\u7f6e\u53c2\u6570\uff0c\u5982--gtest_output\u76f8\u5f53\u4e8etesting::GTEST_FLAG(output) = \"xml\"\ntesting::GTEST_FlAG()\n// \u800c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e3a\u5168\u5927\u5199\n</code></pre> <p>\u5e38\u7528\u7684\u53c2\u6570\uff1a</p> <ol> <li>--gtest_filter=// \u901a\u914d\u7b26\uff0c\u8fd0\u884c\u6240\u6709\u6848\u4f8b</li> <li>--gtest_output=xml[:DIReCTORY_PATH|:FILE_PATH]</li> <li>--gtest_catch_exceptions</li> </ol>"},{"location":"program-languages/cpp/gtest/#google-mock","title":"Google Mock","text":"<p>\u6a21\u62df\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u3002</p> <pre><code>EXPECT_CALL(mock_object, Method(argument-matchers)) // mock_object\u4e3a\u6a21\u62df\u7684\u5bf9\u8c61\uff0cMethod\u4e3amock_object\u4e2d\u7684mock\u65b9\u6cd5\u3002\n    .With(multi-argument-matchers)\n    .Times(cardinality)\n    .InSequence(sequences) // InSquence\u7528\u4e8e\u6307\u5b9a\u51fd\u6570\u6267\u884c\u7684\u987a\u5e8f\uff0c\u901a\u8fc7\u540c\u610f\u5e8f\u5217\u4e2d\u58f0\u660e\u671f\u5f85\u7684\u987a\u5e8f\u786e\u5b9a\n    .After(expectations)\n    .WillOnce(action)\n    .WillRepeatedly(action)\n    .RetiresOnSaturation();\n\n// where all clauses are optional, and .InSequence()/.After()/.WillOnce() can appear any number of times.\n</code></pre>"},{"location":"program-languages/rust/rust/","title":"Rust","text":""},{"location":"solutions/pat/ab-and-c-64bit/","title":"A+B and C (64bit)","text":"<p>\u9898\u76ee\u94fe\u63a51065 A+B and C (64bit) (20 \u5206)</p>"},{"location":"solutions/pat/ab-and-c-64bit/#cin","title":"\u4e0d\u80fd\u7528cin\u7684\u539f\u56e0","text":"<p>\u94fe\u63a5\uff1a [C++]--PAT-A1065 &amp; cin\u4e0escanf</p>"},{"location":"solutions/pat/ab-and-c-64bit/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u51fa\u4e09\u4e2a64\u4f4d\u7684\u6574\u6570\uff0cA,B,C\uff0c\u5224\u65ad\\(A+B&gt;C\\)\u662f\u5426\u6210\u7acb</p>"},{"location":"solutions/pat/ab-and-c-64bit/#_2","title":"\u601d\u8def","text":"<p>\u4f7f\u7528<code>long long</code>\u5b58\u50a8\uff0c\u8fdb\u884c\u5224\u65ad\u8ba1\u7b97\u5373\u53ef\u3002</p>"},{"location":"solutions/pat/ab-and-c-64bit/#_3","title":"\u95ee\u9898","text":"<p>\u6b64\u9898\u7528<code>cin</code>\u6700\u540e\u4e00\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u8fc7\u4e0d\u4e86\uff0c\u53ea\u80fd\u7528<code>scanf</code>\u5177\u4f53\u5206\u6790\u89c1 [C++]--PAT-A1065 &amp; cin\u4e0escanf</p>"},{"location":"solutions/pat/ab-and-c-64bit/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int T;\n    cin &gt;&gt; T;\n    for (auto k = 0; k != T; ++k) {\n        long long a, b, c;\n        // cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n        scanf(\"%lld%lld%lld\", &amp;a, &amp;b, &amp;c);\n        auto res = a + b;\n        bool flag;\n        if (a &gt; 0 &amp;&amp; b &gt; 0 &amp;&amp; res &lt; 0)\n            flag = true;\n        else if (a &lt; 0 &amp;&amp; b &lt; 0 &amp;&amp; res &gt;= 0)\n            flag = false;\n        else if (res &gt; c)\n            flag = true;\n        else\n            flag = false;\n        if (flag)\n            cout &lt;&lt; \"Case #\" &lt;&lt; k + 1 &lt;&lt; \": true\" &lt;&lt; endl;\n        else\n            cout &lt;&lt; \"Case #\" &lt;&lt; k + 1 &lt;&lt; \": false\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/ab-for-polynomials/","title":"A+B for Polynomials","text":"<p>\u9898\u76ee\u94fe\u63a51002 A+B for Polynomials (25 \u5206)</p>"},{"location":"solutions/pat/ab-for-polynomials/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8ba1\u7b97\u591a\u9879\u5f0f\u7684\u52a0\u6cd5\uff0c\u8981\u6c42\u8f93\u51fa\u9879\u6570\u4ee5\u53ca\u5404\u9879\u7684\u6307\u6570\u3001\u7cfb\u6570</p>"},{"location":"solutions/pat/ab-for-polynomials/#_2","title":"\u601d\u8def","text":"<p>\u4e0d\u96be\uff0c\u6211\u5229\u7528\u4e86\u5f52\u5e76\u7684\u601d\u60f3\u53bb\u505a\uff0c\u5916\u52a0\u5168\u90e8\u4f7f\u7528<code>c++</code>\u7684\u65b9\u5f0f\u7f16\u5199\uff0c\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e2a\u70b9</p> <ol> <li>\u76f8\u52a0\u7cfb\u6570\u4e3a0\u7684\u9879\u4e0d\u80fd\u8f93\u51fa</li> <li>\u5f52\u5e76(\u5047)\uff0c\u82e5A\u548cB\u90fd\u904d\u5386\u5b8c\u4e86\u4e5f\u8981\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd9\u4e2a\u6211\u6700\u521d\u5fd8\u8bb0\u4e86</li> <li>cout\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u7ed3\u679c\uff0c\u8981\u786e\u4fdd\u8f93\u51fa\u7684\u7cfb\u6570\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570</li> </ol> <p>\u8f93\u51fan\u4f4d\u5c0f\u6570\u7684\u63a7\u5236\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iomanip&gt;//\u9700\u8981\u7684\u5934\u6587\u4ef6\n\nint n = 2;\nstd::cout &lt;&lt; setiosflags(std::ios::fixed) &lt;&lt; setprecision(n);\n//\u540e\u9762cout\u8f93\u51fa\u7684\u6570\u5c31\u4fdd\u7559\u4e86n\u4f4d\u5c0f\u6570\n</code></pre>"},{"location":"solutions/pat/ab-for-polynomials/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n// \u6839\u636e\u8f93\u5165\u7684\u9879\u6570\uff0c\u63a5\u53d7\u8f93\u5165\nvoid input(vector&lt;int&gt;&amp; index, vector&lt;double&gt;&amp; value, const int k)\n{\n    int    a;\n    double b;\n    for (auto i = 0; i &lt; k; ++i) {\n        cin &gt;&gt; a &gt;&gt; b;\n        index.push_back(a);\n        value.push_back(b);\n    }\n}\nint main()\n{\n    int            k1, k2;\n    vector&lt;int&gt;    a_index, b_index;\n    vector&lt;double&gt; a_value, b_value;\n    cin &gt;&gt; k1;\n    input(a_index, a_value, k1);\n    cin &gt;&gt; k2;\n    input(b_index, b_value, k2);\n\n    vector&lt;int&gt;    index;\n    vector&lt;double&gt; value;\n    // A\u548cB\u7684\u8fed\u4ee3\u5668\uff0c\u8bbe\u5728for\u5916\uff0c\u540e\u7eed\u8981\u7528\u5230\n    auto it1 = a_index.begin(), it2 = b_index.begin();\n    for (; it1 != a_index.end() &amp;&amp; it2 != b_index.end();) {\n        // \u9009\u53d6\u6307\u6570\u5927\u7684\u5b58\u5165\u7ed3\u679c\u5411\u91cfindex\u548cvalue\u4e2d\n        if (*it1 &gt; *it2) {\n            index.push_back(*it1);\n            value.push_back(a_value[it1 - a_index.begin()]);\n            ++it1;\n        } else if (*it1 &lt; *it2) {\n            index.push_back(*it2);\n            value.push_back(b_value[it2 - b_index.begin()]);\n            ++it2;\n        } else {\n            // \u76f8\u7b49\u65f6\u8fd8\u8981\u5224\u65ad\u548c\u662f\u5426\u4e3a0\uff0c\u82e5\u4e3a0\u5219\u4e0d\u52a0\u5165\u7ed3\u679c\u5411\u91cf\u4e2d\n            if (a_value[it1 - a_index.begin()] + b_value[it2 - b_index.begin()]) {\n                index.push_back(*it1);\n                value.push_back(a_value[it1 - a_index.begin()] + b_value[it2 - b_index.begin()]);\n            }\n            ++it1;\n            ++it2;\n        }\n    }\n    // \u9000\u51fafor\u5faa\u73af\u76843\u79cd\u60c5\u51b5\uff0c\u90fd\u8981\u8003\u8651\u5230\n    // cout\u8f93\u51fan\u4f4d\u5c0f\u6570\u65b9\u6cd5\uff0c\u5148\u8bbe\u7f6efixed\u5728\u8bbe\u7f6e\u7cbe\u5ea6\n    if (it1 != a_index.end()) {\n        cout &lt;&lt; index.size() + a_index.end() - it1;\n        for (auto it = index.begin(); it != index.end(); ++it)\n            cout &lt;&lt; \" \" &lt;&lt; *it &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; value[it - index.begin()];\n        for (; it1 != a_index.end(); ++it1)\n            cout &lt;&lt; \" \" &lt;&lt; *it1 &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; a_value[it1 - a_index.begin()];\n    } else if (it2 != b_index.end()) {\n        cout &lt;&lt; index.size() + b_index.end() - it2;\n        for (auto it = index.begin(); it != index.end(); ++it)\n            cout &lt;&lt; \" \" &lt;&lt; *it &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; value[it - index.begin()];\n        for (; it2 != b_index.end(); ++it2)\n            cout &lt;&lt; \" \" &lt;&lt; *it2 &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; b_value[it2 - b_index.begin()];\n    } else {\n        cout &lt;&lt; index.size();\n        for (auto it = index.begin(); it != index.end(); ++it)\n            cout &lt;&lt; \" \" &lt;&lt; *it &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; value[it - index.begin()];\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/ab-format/","title":"AB-Format","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1001 A+B Format (20 point(s))</p>"},{"location":"solutions/pat/ab-format/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5c06<code>a+b</code>\u7684\u503c\u6309\u7167\u7f8e\u5f0f\uff1f\u7684\u683c\u5f0f\u8f93\u51fa</p>"},{"location":"solutions/pat/ab-format/#_2","title":"\u601d\u8def","text":"<p>\u521a\u5f00\u59cb\u6253\u7b97\u7528\u6c42\u4f59\u8fd0\u7b97\u505a\u7684\uff0c\u8349\u7387\u4e86\uff0c\u6ca1\u6709\u8003\u8651\u5230\u4e3a0\u65f6\u5e94\u8be5\u8f93\u51fa\u8fde\u7eed\u76840\uff0c\u53ea\u62ff\u4e8615\u5206\u3002\u7136\u540e\u8003\u8651\u5230\u6309\u7167\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u7528<code>to_string</code>\u51fd\u6570\uff0c\u5373\u53ef\uff0c\u9664\u4e86\u6700\u524d\u9762\u7684\uff0c\u5176\u4ed6\u6309\u71673\u4e2a\u4e00\u8f93\u51fa\u5373\u53ef\u3002</p>"},{"location":"solutions/pat/ab-format/#ac","title":"AC\u4ee3\u7801","text":"'ab_format.cpp` <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int a, b;\n    cin &gt;&gt; a &gt;&gt; b;\n    int sum = a + b;\n    if (sum &lt; 0) {\n        cout &lt;&lt; \"-\";\n        sum = -sum;\n    }\n    string ans = to_string(sum);\n    int    m   = ans.length() % 3;\n    for (auto i = 0; i &lt; ans.length(); ++i) {\n        cout &lt;&lt; ans[i];\n        if ((i - m + 1) % 3 == 0 &amp;&amp; i != ans.length() - 1)\n            cout &lt;&lt; ',';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/acute-stroke/","title":"Acute Stroke","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1091 Acute Stroke (30 point(s)</p>"},{"location":"solutions/pat/acute-stroke/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7406\u89e3\u9898\u610f\u5f88\u91cd\u8981\uff0c\u8fd9\u4e2a\u9898\u521a\u5f00\u59cb\u6211\u6ca1\u6709\u8bfb\u61c2\uff0c\u611f\u89c9\u8868\u8ff0\u7684\u4e0d\u6e05\u695a\uff0c\u77e5\u9053\u5f53\u6211\u7406\u89e3\u4e86<code>L</code>\u8868\u793a\u7684\u662f<code>layer</code>\u7684\u65f6\u5019\uff0c\u624d\u7ec8\u4e8e\u7406\u89e3\u9898\u76ee\u7ed9\u7684\u662f\u4e00\u4e2a\u5e95\u786e\u5b9a\u7684\u957f\u65b9\u4f53\u533a\u57df\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u4e09\u7ef4\u7a7a\u95f4\uff08\u5982\u679c\u662f\uff0c\u4e00\u76f4\u4e0d\u77e5\u9053\u600e\u4e48\u786e\u5b9a\u6bcf\u4e2a\u5207\u7247\u5728xoy\u5e73\u9762\u7684\u8054\u7cfb\uff09</p>"},{"location":"solutions/pat/acute-stroke/#_2","title":"\u601d\u8def","text":"<p>\u7406\u89e3\u4e86\u9898\u610f\u4e4b\u540e\uff0c\u5c31\u77e5\u9053\u8fd9\u4e2a\u9898\u53ef\u4ee5\u91c7\u7528<code>BFS</code>\u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u57df\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8fde\u901a\u57df\u4e2d1\u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e<code>T</code>\u7684\u4e2a\u6570\u8bb0\u4e0b\u6765\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef</p>"},{"location":"solutions/pat/acute-stroke/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\nconst int MaxM = 1287, MaxN = 129, MaxL = 61;\nint       pixel[MaxM][MaxN][MaxL];\nbool      status[MaxM][MaxN][MaxL]{false};\nint       M, N, L, T; // \u6ce8\u610f\u662fL\u5c42\uff0c\u6bcf\u5c42\u662fM*N\uff0c\u95e8\u69db\u662fT\n\nclass Point {\npublic:\n    int x, y, z;\n    Point(int a, int b, int c) : x(a), y(b), z(c) {}\n    ~Point() = default;\n    Point operator+(Point add) const { return Point{x + add.x, y + add.y, z + add.z}; }\n    bool  check() const\n    {\n        if (x &gt;= M '' x &lt; 0 '' y &gt;= N '' y &lt; 0 '' z &gt;= L '' z &lt; 0)\n            return false; // \u8d8a\u754c\u8fd4\u56defalse\n        if (pixel[x][y][z] == 0 '' status[x][y][z])\n            return false; // \u5f53\u524d\u975e\u80bf\u5757\u70b9\uff0c\u6216\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u8fd4\u56defalse\n        return true;\n    }\n};\nconst Point adj[6] = { // \u4e00\u4e2a\u70b9\u7684\u516d\u4e2a\u76f8\u90bb\u70b9\u7684\u79fb\u52a8\u65b9\u5411 //NOLINT\n    Point{0, 0, 1}, Point{0, 0, -1}, Point{1, 0, 0}, Point{-1, 0, 0}, Point{0, 1, 0}, Point{0, -1, 0}};\n\nint BFS(int x, int y, int z)\n{\n    int          cur = 0; // \u6b64\u6b21bfs\u4e2d\u7684\u7b26\u5408\u7684\u70b9\u7684\u4e2a\u6570\n    queue&lt;Point&gt; q;\n    Point        point{x, y, z};\n    q.push(point);\n    status[x][y][z] = true;\n    while (!q.empty()) {\n        Point top = q.front();\n        ++cur;\n        q.pop();\n        for (auto i : adj) {\n            point = top + i;\n            if (point.check()) {                          // \u7ecf\u68c0\u6d4b\uff0c\u65b0\u4f4d\u7f6e\u7b26\u5408\u8981\u6c42\n                q.push(point);                            // \u5165\u961f\n                status[point.x][point.y][point.z] = true; // \u5e76\u8bbe\u7f6e\u5df2\u7ecf\u68c0\u6d4b\u8fc7\n            }\n        }\n    }\n    if (cur &gt;= T)\n        return cur;\n    else\n        return 0;\n}\n\nint main()\n{\n    cin &gt;&gt; M &gt;&gt; N &gt;&gt; L &gt;&gt; T;\n    for (int z = 0; z &lt; L; ++z) {\n        for (int x = 0; x &lt; M; ++x) {\n            for (int y = 0; y &lt; N; ++y)\n                cin &gt;&gt; pixel[x][y][z];\n        }\n    }\n    int ans = 0;\n    for (int z = 0; z &lt; L; ++z) {\n        for (int x = 0; x &lt; M; ++x) {\n            for (int y = 0; y &lt; N; ++y)\n                // \u5f53\u524d\u4f4d\u7f6e\u4e3a1\uff0c\u4e14\u6ca1\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u4ece\u5f53\u524d\u70b9\u5f00\u59cbBFS\n                if (pixel[x][y][z] == 1 &amp;&amp; !status[x][y][z])\n                    ans += BFS(x, y, z);\n        }\n    }\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/are-they-equal/","title":"Are They Equal","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1060 Are They Equal (25 point(s))</p>"},{"location":"solutions/pat/are-they-equal/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u7cbe\u5ea6\uff0c\u5224\u65ad\u4e24\u4e2a\u5b58\u50a8\u6d6e\u70b9\u6570\u7684\u5b57\u7b26\u4e32\u662f\u5426\u79d1\u5b66\u8868\u8fbe\u5f0f\u76f8\u7b49</p>"},{"location":"solutions/pat/are-they-equal/#_2","title":"\u601d\u8def","text":"<p>\u53c2\u8003\u4e86\u300a\u7b97\u6cd5\u7b14\u8bb0\u300b,\u505a\u7684\u65f6\u5019\u7531\u4e8e\u836f\u7269\uff0c\u8111\u5b50\u6655\u6655\u7684\uff0c\u4e0d\u80fd\u52a8\u8111\u5206\u6790\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u770b\u4e66\u4e86\u3002</p> <p>\u6839\u636e\u4e66\u4e2d\u5206\u6790\uff0c\u8981\u5c06\u5b57\u7b26\u4e32\u4e2d\u4fdd\u5b58\u7684\u5206\u4e3a\u5927\u4e8e1\u548c\u5c0f\u4e8e1\u4e24\u79cd\uff0c\u603b\u4f53\u4e0a\u662f\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\uff0c\u7136\u540e\u5220\u9664\u524d\u5bfc\u96f6\u548c\u5c0f\u6570\u70b9\uff0c\u7531\u4e8e<code>erase</code>\u7684\u590d\u6742\u5ea6\u4e3a<code>O(n)</code>\uff0c\u6240\u4ee5\u6211\u91c7\u53d6\u4e86\u4e0d\u5220\u9664\u7684\u505a\u6cd5\uff0c\u5b9e\u5219\u662f\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6700\u591a\u5220\u9664\u4e00\u6b21\uff08\u5373\u5220\u9664\u5c0f\u6570\u70b9\uff09\uff0c\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\u3002</p>"},{"location":"solutions/pat/are-they-equal/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nint  n;\nbool isZero(string&amp; s)\n{\n    bool zero = true;\n    for (auto&amp; c : s) {\n        if (c != '0') {\n            zero = false;\n            break;\n        }\n    }\n    return zero;\n}\n\nvoid process(string&amp; s, int&amp; e)\n{\n    int k = 0;                            // \u8bb0\u5f55\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u6570\u5b57\u7684\u4e0b\u6807\n    while (s.length() &gt; k &amp;&amp; s[k] == '0') // \u8df3\u8fc7\u524d\u5bfc\u96f6\n        ++k;\n    // \u53bb\u9664\u5c0f\u6570\u70b9\uff08\u5982\u679c\u6709\uff09\n    if (s[k] == '.') { // s\u4e3a\u5c0f\u4e8e1\u7684\u5c0f\u6570\n        s.erase(s.begin() + k);\n        while (s.length() &gt; k &amp;&amp; s[k] == '0') { // \u53bb\u6389\u5c0f\u6570\u70b9\u540e\u9762\u7684\u524d\u5bfc\u96f6\n            ++k;\n            --e; // \u6bcf\u53bb\u6389\u4e00\u4e2a\u6307\u6570\u51cf\u4e00\n        }\n    } else {                                          // s\u5927\u4e8e1\uff0c\u5219\u6b64\u65f6k\u5df2\u7ecf\u786e\u5b9a\u4e86\n        while (k + e &lt; s.length() &amp;&amp; s[k + e] != '.') // \u5bfb\u627e\u5c0f\u6570\u70b9\n            ++e;                // e \u662f\u6307\u6570\uff0c\u4e5f\u8868\u793a\u5c0f\u6570\u70b9\u79bb\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u96f6\u7684\u6570\u7684\u8ddd\u79bb\n        if (k + e &lt; s.length()) // \u627e\u5230\u5c0f\u6570\u70b9\uff0c\u5220\u9664\n            s.erase(s.begin() + k + e);\n    }\n    if (isZero(s)) // \u5224\u65ad\u662f\u5426\u4e3a0\n        e = 0;\n    while (s.length() - k &lt; n) // \u5982\u679c\u6709\u5fc5\u8981\uff0c\u8865\u5145\u7cbe\u5ea6\n        s += '0';\n    s = s.substr(k, n); // \u53d6n\u4e2a\u5b57\u7b26\u7ec4\u6210\u5904\u7406\u540e\u7684\u7ed3\u679c\n}\n\nint main()\n{\n    string s1, s2;\n    cin &gt;&gt; n &gt;&gt; s1 &gt;&gt; s2;\n    int e1 = 0, e2 = 0;\n    // \u5904\u7406\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u53bb\u6389\u5c0f\u6570\u70b9\uff08\u5982\u679c\u6709\uff09\uff0c\u5e76\u8ba1\u7b97\u6307\u6570e\n    // \u5373\u6700\u591a\u4ec5\u6267\u884c\u4e00\u6b21erase\n    process(s1, e1);\n    process(s2, e2);\n    if (s1 == s2 &amp;&amp; e1 == e2)\n        cout &lt;&lt; \"YES 0.\" &lt;&lt; s1 &lt;&lt; \"*10^\" &lt;&lt; e1 &lt;&lt; endl;\n    else\n        cout &lt;&lt; \"NO 0.\" &lt;&lt; s1 &lt;&lt; \"*10^\" &lt;&lt; e1 &lt;&lt; \" 0.\" &lt;&lt; s2 &lt;&lt; \"*10^\" &lt;&lt; e2 &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/boys-vs-girls/","title":"Boys vs Girls","text":"<p>\u9898\u76ee\u94fe\u63a51036 Boys vs Girls (25 \u5206)</p>"},{"location":"solutions/pat/boys-vs-girls/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u4ecd\u662f\u5728\u8f93\u5165\u4e2d\u5904\u7406\u6570\u636e\uff0c\u627e\u6700\u5927\uff0c\u6700\u5c0f\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u5c06\u6570\u636e\u5206\u6210\u4e86\u4e24\u7c7b\uff0c\u7537\u6027\u548c\u5973\u6027</p>"},{"location":"solutions/pat/boys-vs-girls/#_2","title":"\u601d\u8def","text":"<p>\u5e38\u89c4\uff0c\u6ce8\u610f\u5224\u65ad\u662f\u5426\u5b58\u5728\u6700\u503c\u4fee\u6539\u8f93\u51fa\u683c\u5f0f</p>"},{"location":"solutions/pat/boys-vs-girls/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct Student {\n    string name;\n    string id;\n    int    score;\n} male, female, temp;\n\nint main()\n{\n    male.score = 101, female.score = -1;\n    int  n;\n    char gender;\n    cin &gt;&gt; n;\n    while (n--) {\n        cin &gt;&gt; temp.name &gt;&gt; gender &gt;&gt; temp.id &gt;&gt; temp.score;\n        if (gender == 'M' &amp;&amp; temp.score &lt; male.score)\n            swap(male, temp);\n        else if (gender == 'F' &amp;&amp; temp.score &gt; female.score)\n            swap(female, temp);\n    }\n    if (female.score == -1)\n        cout &lt;&lt; \"Absent\" &lt;&lt; endl;\n    else\n        cout &lt;&lt; female.name &lt;&lt; \" \" &lt;&lt; female.id &lt;&lt; endl;\n    if (male.score == 101)\n        cout &lt;&lt; \"Absent\" &lt;&lt; endl;\n    else\n        cout &lt;&lt; male.name &lt;&lt; \" \" &lt;&lt; male.id &lt;&lt; endl;\n    if (female.score == -1 '' male.score == 101)\n        cout &lt;&lt; \"NA\" &lt;&lt; endl;\n    else\n        cout &lt;&lt; female.score - male.score;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/counting-leaves/","title":"Counting Leaves","text":"<p>\u9898\u76ee\u94fe\u63a51004 Counting Leaves (30 \u5206)</p>"},{"location":"solutions/pat/counting-leaves/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8f93\u51fa\u6811\u7684\u53f6\u8282\u70b9\u4e2a\u6570\u3002</p>"},{"location":"solutions/pat/counting-leaves/#_2","title":"\u601d\u8def","text":"<p>\u7528BFS\u4e5f\u5c31\u662f\u5c42\u5e8f\u904d\u5386</p>"},{"location":"solutions/pat/counting-leaves/#_3","title":"\u95ee\u9898","text":"<p>\u4e00\u4e9b\u8fed\u4ee3\u5668\u3001\u7d22\u5f15\u7684\u95ee\u9898\uff0c\u8fd8\u662f\u5199\u6ce8\u91ca\u8981\u597d\uff0c\u601d\u8def\u6e05\u6670\uff0c\u4e0d\u4f1a\u4e71</p>"},{"location":"solutions/pat/counting-leaves/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint traverse(vector&lt;vector&lt;int&gt;&gt; nodes, vector&lt;int&gt;&amp; cnt)\n{\n    queue&lt;int&gt; Q;\n    Q.push(1);\n    int         layer = 1;\n    vector&lt;int&gt; num;\n    num.push_back(nodes[1].size());\n    while (!Q.empty()) {\n        int  size = int(num.size());\n        auto p    = Q.front();\n        for (int i = 0; i &lt; size; ++i) { // num.size()\u4e3a\u5b69\u5b50\u4e2a\u6570\n            if (nodes[p].empty())\n                ++cnt[layer];\n            ++p;\n        }\n        num.clear();\n        for (int i = 0; i &lt; size; ++i) {\n            auto q = Q.front();\n            Q.pop();\n            if (!nodes[q].empty()) {\n                for (auto it = nodes[q].begin(); it != nodes[q].end(); ++it) {\n                    Q.push(*it);\n                    num.push_back(nodes[*it].size());\n                }\n            }\n        }\n        ++layer;\n    }\n    return --layer;\n}\nint main()\n{\n    int N, M;\n    cin &gt;&gt; N &gt;&gt; M;\n    vector&lt;vector&lt;int&gt;&gt; nodes(N + 1);\n    for (int i = 0; i != M; ++i) {\n        int parent, K, child;\n        cin &gt;&gt; parent &gt;&gt; K;\n        for (int j = 0; j &lt; K; ++j) {\n            cin &gt;&gt; child;\n            nodes[parent].push_back(child);\n        }\n    }\n    vector&lt;int&gt; cnt(N + 1, 0);\n    auto        layer = traverse(nodes, cnt);\n    for (auto i = 1; i &lt;= layer; ++i) {\n        cout &lt;&lt; cnt[i];\n        if (i != layer)\n            cout &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/course-list-for-student/","title":"Course List for Student","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1039 Course List for Student (25 point(s))</p>"},{"location":"solutions/pat/course-list-for-student/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u8bfe\u7a0b\u5bf9\u5e94\u7684\u9009\u8bfe\u5b66\u751f\uff0c\u7136\u540e\u7ed9\u4f60\u5b66\u751f\u540d\u5b57\u67e5\u8be2\u8be5\u5b66\u751f\u9009\u7684\u8bfe\u7a0b\u4fe1\u606f\u3002</p>"},{"location":"solutions/pat/course-list-for-student/#_2","title":"\u601d\u8def","text":"<p>\u4f7f\u7528<code>map</code>\uff0c\u7531\u4e8e<code>unordered_map</code>\u6548\u7387\u66f4\u9ad8\uff0c\u4f7f\u7528\u4e4b\u5efa\u7acb\u5b66\u751f\u540d\u5b57\u4e0e\u5b58\u50a8\u7684\u4e0b\u6807\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> <p>\u5728<code>codeup</code>\u4e2d\u63d0\u4ea4\u7684\u8bdd\u4f1a\u8d85\u65f6\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5c06\u53bb\u6389<code>map</code>\u3001\u53bb\u6389<code>cin</code>\u6539\u4e3a<code>scanf</code>\u3001\u53bb\u6389<code>cout</code>\u6539\u4e3a<code>printf</code>\u4ee5\u53ca\u5c06<code>string</code>\u6539\u4e3a<code>char</code>\u6570\u7ec4\u3002</p>"},{"location":"solutions/pat/course-list-for-student/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    int N, K;\n    cin &gt;&gt; N &gt;&gt; K;\n    vector&lt;vector&lt;int&gt;&gt;        stu;\n    unordered_map&lt;string, int&gt; map;\n    int                        k = 0;\n    for (int i = 0; i &lt; K; ++i) {\n        int id, num;\n        cin &gt;&gt; id &gt;&gt; num;\n        for (int j = 0; j &lt; num; ++j) {\n            string name;\n            cin &gt;&gt; name;\n            if (map.find(name) == map.end()) {\n                map[name] = k++;\n                stu.emplace_back();\n            }\n            stu[map[name]].emplace_back(id);\n        }\n    }\n    for (int i = 0; i &lt; N; ++i) {\n        string name;\n        cin &gt;&gt; name;\n        cout &lt;&lt; name &lt;&lt; \" \" &lt;&lt; ((map.find(name) == map.end()) ? 0 : stu[map[name]].size());\n        if (map.find(name) == map.end()) {\n            if (i != N - 1)\n                cout &lt;&lt; endl;\n            continue;\n        }\n        sort(stu[map[name]].begin(), stu[map[name]].end());\n        for (auto&amp; entry : stu[map[name]])\n            cout &lt;&lt; \" \" &lt;&lt; entry;\n        if (i != N - 1)\n            cout &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/dating/","title":"Dating","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1061 Dating (20 point(s))</p>"},{"location":"solutions/pat/dating/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u524d\u4e24\u4e2a\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u76f8\u540c\u7684\u8868\u793a\u661f\u671f\uff0c\u7b2c\u4e8c\u4e2a\u76f8\u540c\u7684\u8868\u793a\u5c0f\u65f6\uff0c\u540e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\u8868\u793a\u5206\u949f</p>"},{"location":"solutions/pat/dating/#_2","title":"\u601d\u8def","text":"<p>\u904d\u5386\uff0c\u627e\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u5373\u53ef</p>"},{"location":"solutions/pat/dating/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst vector&lt;string&gt; week{\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"}; // \u7528\u4e8e\u8f6c\u6362\u661f\u671f\n\nint main()\n{\n    string str1, str2, str3, str4;\n    cin &gt;&gt; str1 &gt;&gt; str2 &gt;&gt; str3 &gt;&gt; str4;\n    int k;\n    for (k = 0; k &lt; str1.length() &amp;&amp; k &lt; str2.length(); ++k) { // \u627e\u661f\u671f\n        if (str1[k] == str2[k] &amp;&amp; str1[k] &gt;= 'A' &amp;&amp; str1[k] &lt;= 'G') {\n            cout &lt;&lt; week[str1[k] - 'A'] &lt;&lt; \" \";\n            break;\n        }\n    }\n    for (k++; k &lt; str1.length() &amp;&amp; k &lt; str2.length(); ++k) { // \u63a5\u7740\u627e\u5c0f\u65f6\n        if (str1[k] == str2[k]) {\n            if (str1[k] &gt;= '0' &amp;&amp; str1[k] &lt;= '9') {\n                cout &lt;&lt; 0 &lt;&lt; str1[k] - '0' &lt;&lt; \":\";\n                break;\n            } else if (str1[k] &gt;= 'A' &amp;&amp; str1[k] &lt;= 'N') {\n                cout &lt;&lt; str1[k] - 'A' + 10 &lt;&lt; \":\";\n                break;\n            }\n        }\n    }\n    for (k = 0; k &lt; str3.length() &amp;&amp; k &lt; str4.length(); ++k) { // \u627e\u5206\u949f\n        if (str3[k] == str4[k]) {\n            if (str3[k] &gt;= 'A' &amp;&amp; str3[k] &lt;= 'Z' '' str3[k] &gt;= 'a' &amp;&amp; str3[k] &lt;= 'z') {\n                k &gt; 9 ? cout &lt;&lt; k : cout &lt;&lt; 0 &lt;&lt; k;\n                break;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/deduplication-on-a-linked-list/","title":"Deduplication on a Linked List","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1097 Deduplication on a Linked List (25 point(s))</p>"},{"location":"solutions/pat/deduplication-on-a-linked-list/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u94fe\u8868\u7684\u53bb\u91cd\uff0c\u7edd\u5bf9\u503c\u76f8\u540c\u5373\u4e3a\u91cd\u590d</p>"},{"location":"solutions/pat/deduplication-on-a-linked-list/#_2","title":"\u601d\u8def","text":"<p>\u8bbe\u4e24\u4e2a\u7ed3\u679c\u94fe\u8868\uff0c\u5206\u522b\u5b58\u50a8\uff0c\u6ce8\u610f\u91cd\u590d\u7684\u94fe\u8868\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u8981\u5148\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u624d\u80fd\u8f93\u51fa</p>"},{"location":"solutions/pat/deduplication-on-a-linked-list/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst int MaxN = 1e6 + 10;\nconst int MaxK = 1e4 + 10;\nstruct node {\n    int data{};\n    int next{};\n} l[MaxN];\nint status[MaxK]{0};\n\nint main()\n{\n    int         N, first;\n    vector&lt;int&gt; res1, res2;\n    cin &gt;&gt; first &gt;&gt; N;\n    int address;\n    for (int i = 0; i &lt; N; ++i) {\n        cin &gt;&gt; address &gt;&gt; l[address].data &gt;&gt; l[address].next;\n    }\n    while (first != -1) {\n        if (status[abs(l[first].data)] == 0) {\n            res1.emplace_back(first);\n            status[abs(l[first].data)] = 1; // \u6807\u8bb0\u6b64\u6570\u7684\u7edd\u5bf9\u503c\u5df2\u7ecf\u51fa\u73b0\n        } else\n            res2.emplace_back(first);\n        first = l[first].next;\n    }\n    for (int i = 0; i != res1.size() - 1; ++i)\n        cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res1[i] &lt;&lt; \" \" &lt;&lt; l[res1[i]].data &lt;&lt; \" \" &lt;&lt; setw(5) &lt;&lt; setfill('0')\n             &lt;&lt; res1[i + 1] &lt;&lt; \"\\n\";\n    cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res1[res1.size() - 1] &lt;&lt; \" \" &lt;&lt; l[res1[res1.size() - 1]].data &lt;&lt; \" \" &lt;&lt; -1\n         &lt;&lt; \"\\n\";\n    if (!res2.empty()) {\n        for (int i = 0; i != res2.size() - 1; ++i)\n            cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res2[i] &lt;&lt; \" \" &lt;&lt; l[res2[i]].data &lt;&lt; \" \" &lt;&lt; setw(5) &lt;&lt; setfill('0')\n                 &lt;&lt; res2[i + 1] &lt;&lt; \"\\n\";\n        cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res2[res2.size() - 1] &lt;&lt; \" \" &lt;&lt; l[res2[res2.size() - 1]].data &lt;&lt; \" \" &lt;&lt; -1;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/digital-library/","title":"Digital Library","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1022 Digital Library (30 point(s))</p>"},{"location":"solutions/pat/digital-library/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u4e66\u7684\u4fe1\u606f\uff0c\u6309\u7167\u7ed9\u5b9a\u7684\u90e8\u5206\u4fe1\u606f\u67e5\u51fa\u6765\u4e66\u7684<code>id</code>\uff0c\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u4e00\u672c\u4e66\u53ef\u80fd\u4e0e\u591a\u4e2a\u4f5c\u8005\u3001\u51fa\u7248\u793e\u7b49\u5bf9\u5e94\u3002</p>"},{"location":"solutions/pat/digital-library/#_2","title":"\u601d\u8def","text":"<p>\u4f7f\u7528<code>map&lt;string, set&lt;int&gt;&gt;</code>\u8fd9\u79cd\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u5c06\u4e00\u4e2a<code>string</code>\u5982\u4f5c\u8005\uff0c\u8ddf\u591a\u4e2a\u4e66\u7684<code>id</code>\u5bf9\u5e94\u3002</p> <p>\u8fd9\u91cc\u53c8\u5b66\u5230\u4e86\u901a\u8fc7<code>cout</code>\u63a7\u5236\u8f93\u51fa\u7684\u4f4d\u6570\uff1a</p> <pre><code>#include &lt;iomanip&gt;\ncout &lt;&lt; setw(n) &lt;&lt; setfill(c); // \u901a\u8fc7\u8bbe\u7f6en\u4e2a\u4f4d\uff0c\u4e0d\u8db3\u7684\u7528c\u586b\u5145\n</code></pre> <p>\u4ee5\u53ca<code>cin.peek()</code>\u5224\u65ad\u662f\u5426\u8bfb\u5230\u4e86\u884c\u672b\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u8f93\u51fa\u6d41\u4e2d\u6307\u9488\u6307\u5411\u7684\u5b57\u7b26\uff0c\u6307\u9488\u4e0d\u540e\u79fb\u52a8\uff0c\u800c<code>cin.get()</code>\u8bfb\u5165\u5f53\u524d\u7684\u5b57\u7b26\u5e76\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4e2a</p> <pre><code>if (cin.peek() == '\\n') { // \u5224\u65ad\u662f\u884c\u672b\n    cin.get(); // \u8bfb\u53d6\u51fa\u6362\u884c\u7b26\n    break; // \u8fdb\u4e00\u6b65\u64cd\u4f5c\uff0c\u6bd4\u5982\u9000\u51fa\u73b0\u5728\u7684\u5faa\u73af\uff08\u5982\u679c\u5728\u5faa\u73af\u5185\u7684\u8bdd\uff09\n}\n</code></pre>"},{"location":"solutions/pat/digital-library/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nvoid print(map&lt;string, set&lt;int&gt;&gt;&amp; mapSet, string&amp; query)\n{\n    if (mapSet.find(query) == mapSet.end())\n        cout &lt;&lt; \"Not Found\\n\";\n    else {\n        for (auto&amp; set : mapSet[query])\n            cout &lt;&lt; setw(7) &lt;&lt; setfill('0') &lt;&lt; set &lt;&lt; \"\\n\"; // \u63a7\u5236\u8f93\u51fa\u4f4d\u6570\uff0c\u4ee50\u586b\u5145\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    map&lt;string, set&lt;int&gt;&gt; mapTitle, mapAuthor, mapKey, mapPublisher, mapYear;\n    int                   n, m, id;\n    string                title, author, key, publisher, year;\n    cin &gt;&gt; n;\n    while (n--) {\n        cin &gt;&gt; id;\n        cin.get();\n        getline(cin, title);\n        mapTitle[title].insert(id);\n        getline(cin, author);\n        mapAuthor[author].insert(id);\n        while (cin &gt;&gt; key) {\n            mapKey[key].insert(id);\n            if (cin.peek() == '\\n') { // \u53c8\u5b66\u5230\u4e00\u62db\uff0ccin.peek()\u83b7\u53d6\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u68c0\u6d4b\u662f\u5426\u8bfb\u5230\u4e86\u884c\u672b\n                cin.get();\n                break;\n            }\n        }\n        getline(cin, publisher);\n        mapPublisher[publisher].insert(id);\n        getline(cin, year);\n        mapYear[year].insert(id);\n    }\n    cin &gt;&gt; m;\n    int    type;\n    string query;\n    while (m--) {\n        cin &gt;&gt; type;\n        cin.get();\n        cin.get();\n        getline(cin, query);\n        cout &lt;&lt; type &lt;&lt; \": \" &lt;&lt; query &lt;&lt; endl;\n        switch (type) {\n            case 1:\n                print(mapTitle, query);\n                break;\n            case 2:\n                print(mapAuthor, query);\n                break;\n            case 3:\n                print(mapKey, query);\n                break;\n            case 4:\n                print(mapPublisher, query);\n                break;\n            case 5:\n                print(mapYear, query);\n                break;\n            default:\n                break;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/general-palindromic-number/","title":"General Palindromic Number","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1019 General Palindromic Number (20 point(s))</p>"},{"location":"solutions/pat/general-palindromic-number/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>D\u8fdb\u5236\u95ee\u9898+\u5224\u65ad\u56de\u6587\u6570</p>"},{"location":"solutions/pat/general-palindromic-number/#_2","title":"\u601d\u8def","text":"<p>\u5f88\u5e38\u89c4\uff0c\u53ea\u662f\u4e24\u4e2a\u95ee\u9898\u7ed3\u5408\u5728\u4e00\u8d77\u800c\u5df2</p>"},{"location":"solutions/pat/general-palindromic-number/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    int n, b;\n    cin &gt;&gt; n &gt;&gt; b;\n    vector&lt;int&gt; ans;\n    do {\n        ans.push_back(n % b);\n        n /= b;\n    } while (n != 0);\n    bool flag = true;\n    for (auto i = 0; i != ans.size() / 2; ++i) {\n        if (ans[i] != ans[ans.size() - i - 1]) {\n            flag = false;\n            break;\n        }\n    }\n    flag ? (cout &lt;&lt; \"Yes\\n\") : (cout &lt;&lt; \"No\\n\");\n    for (auto i = ans.size() - 1; i != -1; --i) {\n        cout &lt;&lt; ans[i];\n        if (i)\n            cout &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/group-photo/","title":"Group Photo","text":"<p>\u9898\u76ee\u94fe\u63a51109 Group Photo (25 \u5206)</p>"},{"location":"solutions/pat/group-photo/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u4eba\u6570\uff0c\u6392\u6570\uff0c\u7ed9\u8fd9\u4e9b\u4eba\u6309\u8eab\u9ad8\u6392\u961f\uff0c\u540e\u4e00\u6392\u4eba\u8eab\u9ad8\u4e0d\u4f4e\u4e8e\u524d\u4e00\u6392\uff0c\u6bcf\u4e00\u6392\u8eab\u9ad8\uff0c\u8eab\u9ad8\u76f8\u540c\u5219\u6309\u540d\u5b57\u6392\u5e8f\u6309\u7167\u4e2d\u95f4\u6700\u9ad8\uff0c\u7136\u540e\u53f3\u8fb9\uff0c\u518d\u5de6\u8fb9\u8fd9\u6837\u5b50\uff0c\u770b\u82f1\u6587\u63cf\u8ff0\uff0c\u5f88\u5bb9\u6613\u61c2\u3002</p>"},{"location":"solutions/pat/group-photo/#_2","title":"\u601d\u8def","text":"<p>\u5148\u7ed9\u8fd9\u4e9b\u4eba\u6392\u5e8f\uff0c\u8eab\u9ad8\u4ece\u9ad8\u5230\u4f4e\uff0c\u540d\u5b57\u4ece\u5c0f\u5230\u5927\uff0c\u7136\u540e\u6309\u6bcf\u4e00\u6392\u5212\u5206\u7ec4\uff0c\u8fdb\u884c\u6392\u961f\u3002</p>"},{"location":"solutions/pat/group-photo/#_3","title":"\u95ee\u9898","text":"<p>\u6ce8\u610f\u6700\u540e\u4e00\u6392\u4eba\u6570\uff0c\u6309\u7167N - N / K * (N / K - 1)\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u5982\u215a\u4f1a\u5f53\u62100\uff0c\u6240\u4ee5\u8981\u7528\u6c42\u4f59\u8fd0\u7b97\u66f4\u4f73\u3002</p>"},{"location":"solutions/pat/group-photo/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;utility&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstruct Student {\n    int    height;\n    string name;\n};\nbool cmp(Student s1, Student s2)\n{\n    if (s1.height == s2.height)\n        return s1.name &lt; s2.name;\n    return s1.height &gt; s2.height;\n}\n\nint main()\n{\n    int K, N;\n    cin &gt;&gt; K &gt;&gt; N;\n    vector&lt;Student&gt; stu(K);\n    //    for (int i = 0; i &lt; K; ++i)\n    //    {\n    //        int height; string name;\n    //        cin &gt;&gt; name &gt;&gt; height;\n    //        stu.push_back(Student{height, name});\n    //    }\n    for (auto it = stu.begin(); it != stu.end(); ++it)\n        cin &gt;&gt; it-&gt;name &gt;&gt; it-&gt;height;\n    sort(stu.begin(), stu.end(), cmp);\n\n    vector&lt;vector&lt;string&gt;&gt; rows(N);\n    for (int i = 1; i &lt; N; ++i)\n        rows[i].resize(K / N);\n    rows[0].resize(K / N + K % N); // \u53d6\u4f59 note\uff01\uff01\uff01\n\n    int num = 0;\n    for (int i = 0; i &lt; rows.size(); ++i) {\n        int p = num, m = rows[i].size();\n        num += m;\n        int  start     = m / 2;\n        bool direction = true;\n        rows[i][start] = stu[p].name;\n        for (int j = 1; (p + j) &lt; num; ++j) {\n            if (direction) {\n                start -= j;\n                direction = false;\n            } else {\n                start += j;\n                direction = true;\n            }\n            rows[i][start] = stu[p + j].name;\n        }\n    }\n\n    for (int i = 0; i &lt; rows.size(); ++i) {\n        for (int j = 0; j &lt; rows[i].size(); ++j) {\n            cout &lt;&lt; rows[i][j];\n            if (j != rows[i].size() - 1)\n                cout &lt;&lt; \" \";\n        }\n        if (i != rows.size() - 1)\n            cout &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/hello-world-for-u/","title":"Hello World for U","text":"<p>\u9898\u76ee\u94fe\u63a51031 Hello World for U (20 \u5206)</p>"},{"location":"solutions/pat/hello-world-for-u/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5c06\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u6309\u7167U \u578b\u8f93\u51fa</p>"},{"location":"solutions/pat/hello-world-for-u/#_2","title":"\u601d\u8def","text":"<p>\u8ba1\u7b97\u51fa<code>n1</code>\u3001<code>n2</code>\u3001<code>n3</code>\uff0c\u7136\u540e\u6309\u884c\u8f93\u51fa\u5373\u53ef\u3002\u7531<code>n1 = n3</code>\u4e14\u4e0d\u5927\u4e8e<code>n2</code>\u5219\u6709<code>n1 = n3  = (n + 2) / 3</code>\u7684\u4e0b\u6574\u3002</p>"},{"location":"solutions/pat/hello-world-for-u/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    string str;\n    cin &gt;&gt; str;\n    int len = int(str.length());\n    int n1 = (len + 2) / 3, n3 = n1, n2 = len + 2 - n1 - n3;\n    for (int i = 0; i &lt; n1 - 1; ++i) { // n1 - 1 rows\n        cout &lt;&lt; str[i];\n        for (int j = 0; j &lt; n2 - 2; ++j)\n            cout &lt;&lt; \" \";\n        cout &lt;&lt; str[len - i - 1] &lt;&lt; endl;\n    }\n    for (int i = 0; i &lt; n2; ++i)\n        cout &lt;&lt; str[n1 + i - 1];\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/integer-factorization/","title":"Integer Factorization","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1103 Integer Factorization (30 point(s))</p>"},{"location":"solutions/pat/integer-factorization/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5c06\u7ed9\u5b9a\u7684\u6570\u62c6\u6210\uff0c\u6307\u5b9a\u4e2a\u6570\u7684P\u6b21\u65b9\u7684\u548c\uff0c\u8f93\u51fa\u8fd9\u4e9b\u6570\u4e2d\u603b\u548c\u6700\u5927\u7684\u90a3\u4e00\u7ec4</p>"},{"location":"solutions/pat/integer-factorization/#_2","title":"\u601d\u8def","text":"<p>\u5b66\u4e60\u4e86\u300a\u7b97\u6cd5\u7b14\u8bb0\u300b\uff0c\u63d0\u524d\u5c06\u7528\u5230\u7684\u8fd9\u5199\u6307\u5b9a\u7684\u6570\u521d\u59cb\u5316\uff0c\u540e\u9762\u76f4\u63a5\u5c31\u4e00\u4e2a\u4e00\u4e2a\u8bd5\u5c31\u597d\u4e86</p> <p>\u4e3b\u8981\u662f<code>DFS</code>\u7684\u95ee\u9898\uff0c\u501f\u52a9\u5168\u5c40\u53d8\u91cf\u4f1a\u5f88\u65b9\u4fbf</p>"},{"location":"solutions/pat/integer-factorization/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint         N, K, P, maxFacSum = -1; // \u6700\u5927\u5e95\u6570\u548c\nvector&lt;int&gt; fac, ans, temp;          // fac\u5b58\u653e\u4e0d\u5927\u4e8eN\u7684i^p\u7684\u6570, ans\u4e3a\u7ed3\u679c\uff0ctemp\u4e3a\u4e2d\u95f4\u91cf\n\nvoid init()\n{\n    int    t = 0;\n    double i = 0;\n    while (t &lt;= N) {\n        fac.emplace_back(t);\n        t = int(pow(++i, P));\n    }\n}\n/**\n * @param index \u5f53\u524d\u5c1d\u8bd5\u7684\u5143\u7d20\u4e0b\u6807\n * @param cur_k \u5f53\u524d\u9009\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\n * @param sum \u5f53\u524d\u9009\u4e2d\u7684\u6570\u7684\u548c\n * @param fac_sum \u5f53\u524d\u9009\u4e2d\u7684\u5e95\u6570\u548c\n */\nvoid DFS(int index, int cur_k, int sum, int fac_sum)\n{\n    if (sum == N &amp;&amp; cur_k == K) {  // \u627e\u5230\u91cf\u4e00\u4e2a\u7b26\u5408\u7684\u5e8f\u5217\n        if (fac_sum &gt; maxFacSum) { // \u9009\u62e9\u5e95\u6570\u548c\u66f4\u5927\u7684\n            ans       = temp;\n            maxFacSum = fac_sum;\n        }\n        return;\n    }\n    if (sum &gt; N || cur_k &gt; K)\n        return;\n    // \u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u524d\u63d0\uff1asum\u5f53\u524d\u548c\u672a\u8d85\u51faN\u4e14\u5f53\u524d\u9009\u62e9\u7684\u4e2a\u6570cur_k\u4e5f\u672a\u8d85\u51faK\n    if (index &gt;= 1) { // fac[0] = 0, \u4e0d\u5728\u9009\u62e9\u8303\u56f4\u5185\n        temp.emplace_back(index);\n        // \u9009\u62e9\u5f53\u524dindex\n        DFS(index, cur_k + 1, sum + fac[index], fac_sum + index);\n        temp.pop_back();\n        // \u4e0d\u9009\u5f53\u524dindex\n        DFS(index - 1, cur_k, sum, fac_sum);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; N &gt;&gt; K &gt;&gt; P;\n    init();\n    DFS(fac.size() - 1, 0, 0, 0);\n    if (maxFacSum == -1)\n        cout &lt;&lt; \"Impossible\\n\";\n    else {\n        cout &lt;&lt; N &lt;&lt; \" = \" &lt;&lt; ans[0] &lt;&lt; \"^\" &lt;&lt; P;\n        for (auto it = ans.begin() + 1; it != ans.end(); ++it)\n            cout &lt;&lt; \" + \" &lt;&lt; *it &lt;&lt; \"^\" &lt;&lt; P;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/invert-a-binary-tree/","title":"Invert a Binary Tree","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1102 Invert a Binary Tree (25 point(s))</p>"},{"location":"solutions/pat/invert-a-binary-tree/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u51fa\u4e8c\u53c9\u6811\u8282\u70b9\u4e2a\u6570\uff0c\u4ee5\u53ca\u5404\u4e2a\u8282\u70b9\u7684\u5b69\u5b50\u4fe1\u606f\uff0c\u8981\u6c42\u8f93\u51fa\u53cd\u8f6c\u540e\u7684\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c</p>"},{"location":"solutions/pat/invert-a-binary-tree/#_2","title":"\u601d\u8def","text":"<p>\u5173\u952e\u5728\u4e8e\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u6211\u8fd8\u662f\u4e60\u60ef\u4e8e\u7528\u52a8\u6001\u5f62\u5f0f\u7684\u6811\uff0c\u6240\u4ee5\u8be6\u7ec6\u770b\u4ee3\u7801\u5427\uff0c\u5f88\u5e38\u89c4</p>"},{"location":"solutions/pat/invert-a-binary-tree/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstruct node {\n    int          data{};\n    struct node* left{nullptr};\n    struct node* right{nullptr};\n    struct node* parent{nullptr}; // \u53d7\u9093\u516c\u7684\u6559\u8bf2\uff0c\u73b0\u5728\u6211\u662f\u771f\u611f\u89c9\u591a\u7528\u4e00\u4e2a\u7236\u8282\u70b9\u662f\u591a\u4e48\u7684\u660e\u4e86\n};\nint            n;\nvector&lt;int&gt;    in;    // NOLINT\nvector&lt;int&gt;    layer; // NOLINT\nvector&lt;string&gt; str;\n\nnode* construct()\n{\n    node** p = new node*[n];      // \u5b58\u50a8\u6240\u6709\u7684\u6307\u5411\u8282\u70b9\u7684\u6307\u9488\n    for (int i = 0; i &lt; n; ++i) { // \u6ce8\u610f\u4e8c\u7ef4\u6570\u7ec4\u5efa\u7acb\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u884c\u90fd\u8981\u5728\u7533\u8bf7\u4e00\u4e0b\u7a7a\u95f4\n        p[i]       = new node;    // \u7ed9\u6bcf\u4e00\u884c\u5f00\u8f9f\u4e00\u4e2a\u8282\u70b9\n        p[i]-&gt;data = i;\n    }\n    for (int i = 0; i &lt; n; ++i) {\n        if (str[i][0] != '-') { // \u7ed9\u51fa\u4e86\u5b69\u5b50\u4fe1\u606f\uff0c\u4e5f\u5c31\u7ed9\u51fa\u4e86\u7236\u4eb2\u4fe1\u606f\n            p[i]-&gt;left                 = p[str[i][0] - '0'];\n            p[str[i][0] - '0']-&gt;parent = p[i];\n        }\n        if (str[i][2] != '-') {\n            p[i]-&gt;right                = p[str[i][2] - '0'];\n            p[str[i][2] - '0']-&gt;parent = p[i];\n        }\n    }\n    node* root;\n    for (int i = 0; i &lt; n; ++i) { // \u627e\u51fa\u6839\u8282\u70b9\n        if (p[i]-&gt;parent == nullptr) {\n            root = p[i];\n            break;\n        }\n    }\n    queue&lt;node*&gt; q;\n    q.push(root);\n    while (!q.empty()) {\n        node* temp = q.front();\n        q.pop();\n        if (temp-&gt;left)\n            q.push(temp-&gt;left);\n        if (temp-&gt;right)\n            q.push(temp-&gt;right);\n        swap(temp-&gt;left, temp-&gt;right); // \u7ffb\u8f6c\u6811\uff0c\u5373\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\n    }\n    return root;\n}\n\nvoid in_traverse(node*&amp; tree)\n{ // \u5e38\u89c4\n    if (!tree)\n        return;\n    in_traverse(tree-&gt;left);\n    in.emplace_back(tree-&gt;data);\n    in_traverse(tree-&gt;right);\n}\n\nvoid layer_traverse(node*&amp; tree)\n{ // \u5e38\u89c4\n    queue&lt;node*&gt; q;\n    q.push(tree);\n    while (!q.empty()) {\n        node* temp = q.front();\n        q.pop();\n        if (temp-&gt;left)\n            q.push(temp-&gt;left);\n        if (temp-&gt;right)\n            q.push(temp-&gt;right);\n        layer.emplace_back(temp-&gt;data);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    cin.get();\n    str.resize(n);\n    for (int i = 0; i &lt; n; ++i)\n        getline(cin, str[i]);\n    node* tree = construct();\n    in_traverse(tree);\n    layer_traverse(tree);\n    for (auto&amp; it : layer) {\n        cout &lt;&lt; it;\n        if (&amp;it != &amp;layer.back())\n            cout &lt;&lt; \" \";\n        else\n            cout &lt;&lt; \"\\n\";\n    }\n    for (auto&amp; it : in) {\n        cout &lt;&lt; it;\n        if (&amp;it != &amp;in.back())\n            cout &lt;&lt; \" \";\n        else\n            cout &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/kuchiguse/","title":"Kuchiguse","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1077 Kuchiguse (20 point(s))</p>"},{"location":"solutions/pat/kuchiguse/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8f93\u51fa\u6700\u957f\u516c\u5171\u540e\u7f00</p>"},{"location":"solutions/pat/kuchiguse/#_2","title":"\u601d\u8def","text":"<p>\u5229\u7528<code>algorithm</code>\u4e2d\u7684<code>reverse</code>\u51fd\u6570\uff0c\u53d8\u4e3a\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u4e2d\u95f4\u5b66\u4e60\u4e86\u4e00\u4e0b<code>lambda</code>\u8868\u8fbe\u5f0f</p>"},{"location":"solutions/pat/kuchiguse/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nbool fit(vector&lt;string&gt; spoken, int k)\n{\n    bool flag = true;\n    for (auto it = spoken.begin(); it != spoken.end() - 1; ++it) {\n        string a = *it, b = *(it + 1);\n        if (a[k] != b[k]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    cin.get();\n    vector&lt;string&gt; spoken(n);\n    int            min = 257;\n    for (auto&amp; s : spoken) { // \u8bfb\u5165\u3001\u7ffb\u8f6c\u53d8\u4e3a\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u8ba1\u7b97\u6700\u77ed\u7684\u957f\u5ea6\n        getline(cin, s);\n        reverse(s.begin(), s.end());\n        if (min &lt; s.length())\n            min = s.length();\n    }\n    int k;\n    for (k = -1; k &lt; min;) {\n        if (fit(spoken, k + 1))\n            ++k;\n        else\n            break;\n    }\n    // \u5b66\u4e60\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\n    k &lt; 0 ? cout &lt;&lt; \"nai\" : cout &lt;&lt; [k](const string&amp; str) -&gt; string {\n        string ans = str.substr(0, k + 1);\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }(spoken[0]);\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/linked-list-sorting/","title":"Linked List Sorting","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1052 Linked List Sorting (25 point(s))</p>"},{"location":"solutions/pat/linked-list-sorting/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u7ed9\u5b9a\u94fe\u8868\u6392\u5e8f</p>"},{"location":"solutions/pat/linked-list-sorting/#_2","title":"\u601d\u8def","text":"<p>\u8c03\u7528<code>sort</code>\u51fd\u6570\uff0c\u6ce8\u610f\uff0c\u9898\u76ee\u4e2d\u7ed9\u7684\u8282\u70b9\u4e0d\u4e00\u5b9a\u90fd\u5728\u94fe\u8868\u4e0a\uff0c\u4e14\u4e0d\u4e00\u5b9a\u7ed9\u5b9a\u7684\u8282\u70b9\u4e00\u5b9a\u4f1a\u7ec4\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u9700\u8981\u7279\u6b8a\u5224\u65ad</p>"},{"location":"solutions/pat/linked-list-sorting/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst int MaxN = 1e6 + 10;\nstruct node {\n    int data{};\n    int next{};\n} l[MaxN];\n\nbool cmp(int a, int b)\n{\n    return l[a].data &lt; l[b].data;\n}\n\nint main()\n{\n    int         N, first;\n    vector&lt;int&gt; res;\n    cin &gt;&gt; N &gt;&gt; first;\n    int address;\n    for (int i = 0; i &lt; N; ++i) {\n        cin &gt;&gt; address &gt;&gt; l[address].data &gt;&gt; l[address].next;\n    }\n    while (first != -1) {\n        res.emplace_back(first);\n        first = l[first].next;\n    }\n    if (res.empty()) { // \u6709\u6548\u8282\u70b9\u4e3a0\n        cout &lt;&lt; 0 &lt;&lt; \" \" &lt;&lt; -1;\n        return 0;\n    }\n    sort(res.begin(), res.end(), cmp);\n    cout &lt;&lt; res.size() &lt;&lt; \" \" &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res[0] &lt;&lt; \"\\n\";\n    for (int i = 0; i &lt; res.size() - 1; ++i)\n        cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res[i] &lt;&lt; \" \" &lt;&lt; l[res[i]].data &lt;&lt; \" \" &lt;&lt; setw(5) &lt;&lt; setfill('0')\n             &lt;&lt; res[i + 1] &lt;&lt; \"\\n\";\n\n    cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res[res.size() - 1] &lt;&lt; \" \" &lt;&lt; l[res[res.size() - 1]].data &lt;&lt; \" \" &lt;&lt; -1;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/mars-numbers/","title":"Mars Numbers","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1100 Mars Numbers (20 point(s))</p>"},{"location":"solutions/pat/mars-numbers/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u89c4\u5219\u7684\u8fdb\u5236\u8f6c\u6362</p>"},{"location":"solutions/pat/mars-numbers/#_2","title":"\u601d\u8def","text":"<p>\u8d77\u521d\u6211\u662f\u6253\u7b97\u8f93\u5165\u4e00\u4e2a\u5904\u7406\u4e00\u4e2a\u7684\uff0c\u4f46\u4e0b\u624b\u4e4b\u524d\u770b\u5230\u4e86\u300a\u7b97\u6cd5\u7b14\u8bb0\u300b\u4e2d\u7684\u601d\u8def\uff0c\u76f4\u63a5\u7528<code>map</code>\u505a\uff08\u56e0\u4e3a\u6570\u636e\u91cf\u4e5f\u4e0d\u5927\uff09\u5b8c\u5168\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u7136\u540e\u540e\u9762\u76f4\u63a5\u67e5\u8be2</p>"},{"location":"solutions/pat/mars-numbers/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst vector&lt;string&gt; unit = {\"tret\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n                             \"jly\",  \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"}; // NOLINT\nconst vector&lt;string&gt; ten  = {\"tret\", \"tam\", \"hel\", \"maa\", \"huh\", \"tou\", \"kes\",\n                             \"hei\",  \"elo\", \"syy\", \"lok\", \"mer\", \"jou\"}; // NOLINT\n\nint main()\n{\n    map&lt;string, int&gt; str2num;\n    map&lt;int, string&gt; num2str;\n    for (int i = 0; i &lt; 13; ++i) {\n        num2str[i]       = unit[i]; // \u4e2a\u4f4d\u4e3a[0, 12]\uff0c\u5341\u4f4d\u4e3a0\n        str2num[unit[i]] = i;\n        num2str[i * 13]  = ten[i]; // \u5341\u4f4d\u4e3a[0, 12], \u4e2a\u4f4d\u4e3a9\n        str2num[ten[i]]  = i * 13;\n    }\n    for (int i = 1; i &lt; 13; ++i) {\n        for (int j = 1; j &lt; 13; ++j) {\n            string str          = ten[i] + \" \" + unit[j];\n            num2str[i * 13 + j] = str;\n            str2num[str]        = i * 13 + j;\n        }\n    }\n    int n;\n    cin &gt;&gt; n;\n    cin.get();\n    while (n--) {\n        string str;\n        getline(cin, str);\n        if (str[0] &gt;= '0' &amp;&amp; str[0] &lt;= '9') { // \u662f\u6570\u5b57\n            int num = stoi(str);\n            cout &lt;&lt; num2str[num] &lt;&lt; endl;\n        } else {\n            cout &lt;&lt; str2num[str] &lt;&lt; endl;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/mice-and-rice/","title":"Mice and Rice","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1056 Mice and Rice (25 point(s))</p>"},{"location":"solutions/pat/mice-and-rice/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u664b\u7ea7\u5f0f\u6bd4\u8d5b\uff0c\u7ed9\u51fa\u6bcf\u4e2a\u9009\u624b\uff08\u8001\u9f20\uff09\u6700\u7ec8\u7684\u6392\u540d\u3002</p>"},{"location":"solutions/pat/mice-and-rice/#_2","title":"\u601d\u8def","text":"<p>\u6ce8\u610f\u26a0\ufe0f\uff1a\u9898\u76ee\u4e2d\u7ed9\u7684\u987a\u5e8f\u662f\u53c2\u8d5b\u987a\u5e8f\u7684\u9009\u624b\u4e0b\u6807\uff0c\u800c\u4e0d\u662f\u9009\u624b\u7684\u53c2\u8d5b\u987a\u5e8f\uff0c\uff0c\uff0c</p> <p>\u53c2\u8003\u300a\u7b97\u6cd5\u7b14\u8bb0\u300b\u505a\u7684\u65f6\u5019\u8111\u5b50\u5f88\u6df7\u4e71\uff0c\u4e0d\u6e05\u6670</p> <p>\u5173\u952e\u5728\u4e8e\u627e\u5230\uff0c\u7ec4\u6570\u4e0e\u6700\u7ec8\u6392\u540d\u7684\u5173\u7cfb\uff0c\u5982\u9898\u76ee\u4e2d\u7ed9\u768411\u4e2a\u8001\u9f20\uff0c\u7b2c\u4e00\u8f6e\u67094\u7ec4\uff0c\u5219\u5728\u7b2c\u4e00\u8f6e\u4e2d\u6dd8\u6c70\u4e0b\u6765\u7684\u8001\u9f20\u7684\u6392\u540d\u5c31\u662f5\uff084+1\uff09\uff0c\u7b2c\u4e8c\u8f6e\u67094\u4e2a\u8001\u9f20\u53c2\u8d5b\uff0c\u7ec4\u6570\u662f2\uff0c\u5219\u6dd8\u6c70\u4e0b\u6765\u7684\u989d\u6392\u540d\u5c31\u662f3\uff082+1\uff09\uff0c\u7b2c\u4e09\u8f6e\u67092\u4e24\u4e2a\u8001\u9f20\u53c2\u8d5b\uff0c\u5219\u6dd8\u6c70\u4e0b\u6765\u7684\u5c31\u662f\u6392\u540d\u4e3a2\u3002</p>"},{"location":"solutions/pat/mice-and-rice/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;utility&gt;\nusing namespace std;\n\nint main()\n{\n    int p, g;\n    cin &gt;&gt; p &gt;&gt; g;\n    pair&lt;int, int&gt; mice[p];\n    for (int i = 0; i &lt; p; ++i)\n        cin &gt;&gt; mice[i].first;\n    queue&lt;int&gt; q;\n    for (int i = 0; i &lt; p; ++i) {\n        int x;\n        cin &gt;&gt; x;\n        q.push(x);\n    }\n    int temp = p, group; // \u5f53\u524d\u53c2\u52a0\u7684\u8001\u9f20\u6570\u548c\u7ec4\u6570\n    while (q.size() != 1) {\n        if (temp % g == 0)\n            group = temp / g;\n        else\n            group = temp / g + 1;\n        for (int i = 0; i &lt; group; ++i) {\n            int max = q.front();\n            for (int j = 0; j &lt; g; ++j) {\n                if (i * g + j &gt;= temp)\n                    break;\n                int front = q.front();\n                if (mice[front].first &gt; mice[max].first)\n                    max = front;\n                mice[front].second = group + 1;\n                q.pop();\n            }\n            q.push(max);\n        }\n        temp = group;\n    }\n    mice[q.front()].second = 1;\n    for (int i = 0; i &lt; p; ++i) {\n        cout &lt;&lt; mice[i].second;\n        if (i &lt; p - 1)\n            cout &lt;&lt; \" \";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/password/","title":"Password","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1035 Password (20 point(s))</p>"},{"location":"solutions/pat/password/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u6309\u7167\u89c4\u5219\uff1a<code>1-&gt;@, 0-&gt;%, l-&gt;L, O-&gt;o</code>\u4fee\u6539\u5bc6\u7801</p>"},{"location":"solutions/pat/password/#_2","title":"\u601d\u8def","text":"<p>\u8bbe\u7f6e\u6807\u5fd7\uff0c\u8868\u793a\u662f\u5426\u6709\u4fee\u6539\uff0c\u4fee\u6539\u540e\u7684\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a<code>vector</code>\u4e2d</p>"},{"location":"solutions/pat/password/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstruct User {\n    string name;\n    string passwd;\n    User(string s1, string s2) : name(s1), passwd(s2) {}\n};\n\nbool scan(User&amp; user)\n{\n    bool modified = false;\n    for (auto&amp; s : user.passwd) {\n        switch (s) {\n            case 'l':\n                s        = 'L';\n                modified = true;\n                break;\n            case '0':\n                s        = '%';\n                modified = true;\n                break;\n            case '1':\n                s        = '@';\n                modified = true;\n                break;\n            case 'O':\n                s        = 'o';\n                modified = true;\n                break;\n            default:\n                break;\n        }\n    }\n    return modified;\n}\n\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;User&gt; users;\n    while (n--) {\n        string t_name, t_passwd;\n        cin &gt;&gt; t_name &gt;&gt; t_passwd;\n        users.emplace_back(t_name, t_passwd);\n    }\n    vector&lt;User&gt; ans;\n    for (auto&amp; user : users) {\n        if (scan(user)) {\n            ans.emplace_back(user);\n        }\n    }\n    if (ans.size() == 0) {\n        cout &lt;&lt; \"There \" &lt;&lt; (users.size() &gt; 1 ? \"are \" : \"is \") &lt;&lt; users.size() &lt;&lt; \" account\"\n             &lt;&lt; (users.size() &gt; 1 ? \"s \" : \" \") &lt;&lt; \"and no account is modified\";\n    } else {\n        cout &lt;&lt; ans.size() &lt;&lt; endl;\n        for (auto&amp; u : ans) {\n            cout &lt;&lt; u.name &lt;&lt; \" \" &lt;&lt; u.passwd;\n            if (&amp;u != &amp;ans.back())\n                cout &lt;&lt; endl;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/pop-sequence/","title":"Pop Sequence","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1051 Pop Sequence (25 point(s))</p>"},{"location":"solutions/pat/pop-sequence/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u68c0\u6d4b\u7ed9\u5b9a\u7684\u6808\u8f93\u51fa\u5e8f\u5217\u662f\u5426\u662f\u6b63\u786e\u7684\u6808\u8f93\u51fa\u5e8f\u5217</p>"},{"location":"solutions/pat/pop-sequence/#_2","title":"\u601d\u8def","text":"<p>\u6839\u636e\u8f93\u5165\u5e8f\u5217\uff0c\u6a21\u62df\u6808\u6df7\u6d17\uff0c\u6700\u7ec8\u8f85\u52a9\u6808\u7a7a\u5219\u662f\u6b63\u786e\u7684</p>"},{"location":"solutions/pat/pop-sequence/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    int M, N, K;\n    cin &gt;&gt; M &gt;&gt; N &gt;&gt; K;\n    while (K--) {\n        vector&lt;int&gt; pop;\n        for (int i = 0; i &lt; N; ++i) {\n            int x;\n            cin &gt;&gt; x;\n            pop.emplace_back(x);\n        }\n        stack&lt;int&gt; s;\n        bool       status = true; // \u5224\u65ad\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u662f\u5426\u8f85\u52a9\u6808\u7684\u5927\u5c0f\u8d85\u8fc7\u4e86M\n        int        j      = 0;\n        for (int i = 0; i &lt; N;) {\n            if (s.empty()) { // \u6808\u7a7a\u65f6\uff0c\u76f4\u63a5\u5165\n                s.push(++i);\n                continue;\n            }\n            if (s.top() != pop[j]) { // \u5f53\u6b64\u65f6\u6808\u9876\u5143\u7d20\u4e0d\u7b49\u4e8e\u8981\u8f93\u51fa\u7684\u5143\u7d20\u65f6\uff0c\u5165\u6808\n                if (s.size() == M) { // \u5982\u679c\u8d85\u8fc7\u4e86\u8bbe\u5b9a\u5927\u5c0fM\uff0c\u76f4\u63a5\u9000\u51fa\uff0c\u8f93\u51faNO\n                    status = false;\n                    break;\n                }\n                s.push(++i);\n            } else { // \u6b64\u65f6\u76f8\u7b49\uff0c\u5faa\u73af\u51fa\u6808\uff08\u6ee1\u8db3\uff0c\u6808\u9876=pop[j]\n                while (!s.empty() &amp;&amp; s.top() == pop[j]) {\n                    s.pop();\n                    ++j;\n                }\n            }\n        }\n        while (!s.empty() &amp;&amp; s.top() == pop[j]) { // \u7531\u4e8e\u6700\u540e\u4e00\u4e2a\u503c\u4e3aN\u7684\u5143\u7d20\u5165\u6808\u540e\uff0c\u5728for\u5faa\u73af\u4e2d\u6ca1\u6709\u68c0\u67e5\uff0c\u6240\u4ee5\u5728\u6b64\u68c0\u67e5\n            s.pop();\n            ++j;\n        }\n        if (s.empty() &amp;&amp; status) // \u5982\u679c\u6ca1\u6709\u8d85\u8fc7M\u4e14\u6700\u7ec8\u6808\u7a7a\uff0c\u5219\u8f93\u51fayes\n            cout &lt;&lt; \"YES\";\n        else\n            cout &lt;&lt; \"NO\";\n        if (K)\n            cout &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/product-of-polynomials/","title":"Product of Polynomials","text":"<p>\u9898\u76ee\u94fe\u63a51009 Product of Polynomials (25 \u5206)</p>"},{"location":"solutions/pat/product-of-polynomials/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u591a\u9879\u5f0f\u4e58\u6cd5\u5b9e\u73b0\uff0c\u5e38\u89c4</p>"},{"location":"solutions/pat/product-of-polynomials/#_2","title":"\u601d\u8def","text":"<p>\u4e00\u4e2a\u5411\u91cf\u5b58\u7b2c\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u540e\u9762\u4e00\u4e2a\u591a\u9879\u5f0f\u8fb9\u8bfb\u8fb9\u8ba1\u7b97\u5373\u53ef</p>"},{"location":"solutions/pat/product-of-polynomials/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nvoid calc(vector&lt;double&gt;&amp; res, const vector&lt;int&gt;&amp; index, const vector&lt;double&gt;&amp; value, const int a, const double b)\n{\n    for (auto it = index.begin(); it != index.end(); ++it)\n        res[a + *it] += b * value[it - index.begin()];\n}\n\nint main()\n{\n    int    k, a;\n    double b;\n\n    vector&lt;int&gt;    index;\n    vector&lt;double&gt; value, res(2001);\n\n    cin &gt;&gt; k;\n    for (auto i = 0; i &lt; k; ++i) {\n        cin &gt;&gt; a &gt;&gt; b;\n        index.push_back(a);\n        value.push_back(b);\n    }\n\n    cin &gt;&gt; k;\n    for (auto i = 0; i &lt; k; ++i) {\n        cin &gt;&gt; a &gt;&gt; b;\n        calc(res, index, value, a, b);\n    }\n\n    int count = 0;\n    for (auto&amp; p : res)\n        if (p != 0.0)\n            ++count;\n    cout &lt;&lt; count;\n    for (auto it = res.end() - 1; it &gt;= res.begin(); --it)\n        if (*it != 0.0)\n            cout &lt;&lt; \" \" &lt;&lt; it - res.begin() &lt;&lt; \" \" &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1) &lt;&lt; *it;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/read-number-in-chinese/","title":"Read Number in Chinese","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1082 Read Number in Chinese (25 point(s))</p>"},{"location":"solutions/pat/read-number-in-chinese/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u4ee5\u4e2d\u6587\u7684\u4e60\u60ef\u8bfb\u51fa\u6570\u5b57\u3002</p>"},{"location":"solutions/pat/read-number-in-chinese/#_2","title":"\u601d\u8def","text":"<p>\u53c2\u8003\u4e86\u300a\u7b97\u6cd5\u7b14\u8bb0\u300b\u8fd9\u672c\u4e66\u3002</p> <p>\u7531\u4e8e\u4e2d\u6587\u4e2d\uff0c\u6709\u4ebf\u3001\u4e07\uff0c\u5728\u4e07\u4e2d\u53c8\u6709\u5343\u3001\u767e\u3001\u5341\uff0c\u6545\u6bcf\u56db\u4e2a\u4e00\u7ec4\u5904\u7406\u3002\u5176\u4e2d\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\u7a7a\u683c\u7684\u8f93\u51fa\uff0c\u5148\u8f93\u51fa\u7a7a\u683c\u5728\u8f93\u51fa\u5b57\u7b26\u4e32\u6bd4\u8f83\u597d\u3002</p>"},{"location":"solutions/pat/read-number-in-chinese/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst char nums[10][5] = {\"ling\", \"yi\", \"er\", \"san\", \"si\", \"wu\", \"liu\", \"qi\", \"ba\", \"jiu\"};\nconst char wei[5][5]   = {\"Shi\", \"Bai\", \"Qian\", \"Wan\", \"Yi\"};\nint        main()\n{\n    int n;\n    cin &gt;&gt; n;\n    string ans  = to_string(n);\n    int    left = 0, right = ans.length();\n    if (n &lt; 0) {\n        cout &lt;&lt; \"Fu\";\n        ++left;\n    }\n    // \u6211\u7684\u89c4\u8303\uff1a\u4e00\u7ec4\u7684\u4e0b\u6807\u8303\u56f4\u4e3a [left, right)\n    while (right - left &gt; 4)\n        right -= 4;\n    while (left &lt; ans.length()) {\n        bool flag  = false;    // \u8868\u793a\u4e00\u7ec4\u4e2d\u662f\u5426\u542b\u67090\n        bool group = false;    // \u8868\u793a\u8be5\u7ec4\u662f\u5426\u6709\u6570\n        while (left &lt; right) { // \u5904\u7406\u6bcf\u4e00\u7ec4\n            if (left &gt; 0 &amp;&amp; ans[left] == '0')\n                flag = true;\n            else {\n                if (flag) { // \u4e00\u7ec4\u4e2d\u5b58\u57280\uff0c \u8f93\u51fa0\u5373\u5904\u7406\u5b8c\u6bd5\n                    cout &lt;&lt; \" ling\";\n                    flag = false;\n                }\n                if (n &gt; 0 &amp;&amp; left != 0 '' n &lt; 0)\n                    cout &lt;&lt; \" \";\n                cout &lt;&lt; nums[ans[left] - '0'];\n                group = true; // \u8868\u793a\u8be5\u7ec4\u6709\u6570\n                if (left != right - 1) {\n                    cout &lt;&lt; \" \" &lt;&lt; wei[right - left - 2];\n                }\n            }\n            ++left;\n        }\n        if (group &amp;&amp; right != ans.length()) {\n            cout &lt;&lt; \" \" &lt;&lt; wei[(ans.length() - right) / 4 + 2];\n        }\n        right += 4;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/reversing-linked-list/","title":"Reversing Linked List","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1074 Reversing Linked List (25 point(s))</p>"},{"location":"solutions/pat/reversing-linked-list/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ffb\u8f6c\u94fe\u8868</p>"},{"location":"solutions/pat/reversing-linked-list/#_2","title":"\u601d\u8def","text":"<p>\u5229\u7528<code>reverse</code>\u51fd\u6570\u5373\u53ef\u3002\u6ce8\u610f\u559c\u6b22\u4f7f\u7528<code>cout</code>\u7684\uff0c\u5982\u4f55\u63a7\u5236\u8f93\u51fa\u683c\u5f0f\uff0c\u4ee5\u53ca\u7528<code>\"\\n\"</code>\u8f93\u51fa\u6362\u884c\u4f1a\u51cf\u5c11\u65f6\u95f4\u3002</p>"},{"location":"solutions/pat/reversing-linked-list/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst int MaxN = 1e6 + 10;\nstruct node {\n    int data{};\n    int next{};\n} l[MaxN];\n\nint main()\n{\n    int         first, N, K;\n    vector&lt;int&gt; res;\n    cin &gt;&gt; first &gt;&gt; N &gt;&gt; K;\n    int address;\n    for (int i = 0; i &lt; N; ++i) {\n        cin &gt;&gt; address &gt;&gt; l[address].data &gt;&gt; l[address].next;\n    }\n    while (first != -1) {\n        res.emplace_back(first);\n        first = l[first].next;\n    }\n    for (int i = 0; i + K &lt;= res.size(); i += K)\n        reverse(res.begin() + i, res.begin() + i + K);\n    for (int i = 0; i &lt; res.size() - 1; ++i)\n        cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res[i] &lt;&lt; \" \" &lt;&lt; l[res[i]].data &lt;&lt; \" \" &lt;&lt; setw(5) &lt;&lt; setfill('0')\n             &lt;&lt; res[i + 1] &lt;&lt; \"\\n\";\n\n    cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; res[res.size() - 1] &lt;&lt; \" \" &lt;&lt; l[res[res.size() - 1]].data &lt;&lt; \" \" &lt;&lt; -1;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/scientific-notation/","title":"Scientific Notation","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1073 Scientific Notation (20 point(s))</p>"},{"location":"solutions/pat/scientific-notation/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5c06\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u6570\u5b57\u8868\u793a\u6210\u6b63\u5e38\u7684\u5f62\u5f0f</p>"},{"location":"solutions/pat/scientific-notation/#_2","title":"\u601d\u8def","text":"<p>\u9650\u5b9a\u4e3a<code>E</code>\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6839\u636e\u6307\u6570\u6b63\u8d1f\u5206\u60c5\u51b5\uff0c\u603b\u7ed3\u89c4\u5f8b</p>"},{"location":"solutions/pat/scientific-notation/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    string str;\n    cin &gt;&gt; str;\n    if (str[0] == '-')\n        cout &lt;&lt; '-';\n    int pos = 0;\n    while (str[pos] != 'E')\n        ++pos;\n    int exp = 0; // \u8ba1\u7b97\u6307\u6570\n    for (int i = pos + 2; i &lt; str.length(); ++i) {\n        exp = exp * 10 + (str[i] - '0');\n    }\n    if (exp == 0) {\n        for (int i = 1; i &lt; pos; ++i)\n            cout &lt;&lt; str[i];\n    }\n    if (str[pos + 1] == '-') {\n        cout &lt;&lt; \"0.\";\n        for (int i = 0; i &lt; exp - 1; ++i)\n            cout &lt;&lt; 0;\n        cout &lt;&lt; str[1];\n        for (int i = 3; i &lt; pos; ++i)\n            cout &lt;&lt; str[i];\n    } else {\n        for (int i = 1; i &lt; pos; ++i) {\n            if (str[i] == '.')\n                continue;\n            cout &lt;&lt; str[i];\n            if (i == exp + 2 &amp;&amp; pos - 3 != exp) // 3\u4e3a\u539f\u5c0f\u6570\u70b9\u4f4d\u7f6e\n                cout &lt;&lt; \".\";\n        }\n        for (int i = 0; i &lt; exp - (pos - 3); ++i)\n            cout &lt;&lt; 0;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/set-similarity/","title":"Set Similarity","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1063 Set Similarity (25 point(s))</p>"},{"location":"solutions/pat/set-similarity/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8ba1\u7b97\u4e24\u4e2a\u96c6\u5408\u7684\u76f8\u4f3c\u5ea6\uff0c\u5373\u76f8\u540c\u6570\u5b57\u7684\u4e2a\u6570\u5360\u4e24\u4e2a\u96c6\u5408\u7684\u603b\u96c6\u5408\u7684\u6bd4\u4f8b</p>"},{"location":"solutions/pat/set-similarity/#_2","title":"\u601d\u8def","text":"<p>\u660e\u663e\u8981\u6c42\u53bb\u91cd\uff0c\u800c\u4e14\u540e\u9762\u8981\u8ba1\u7b97\u4e24\u4e2a\u96c6\u5408\u7684\u76f8\u540c\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u4e5f\u6697\u542b\u8981\u6392\u5e8f\uff08\u4e0d\u7136\u590d\u6742\u5ea6\u592a\u9ad8\uff09\uff0c\u6240\u4ee5\u9009\u7528<code>set</code>\u8fdb\u884c\u5b58\u50a8\uff0c\u5176\u4ed6\u5c31\u5f88\u5e38\u89c4\u3002</p> <p>\u518d\u6b21\u56de\u987e\u4e00\u4e0b\uff0c<code>cout</code>\u63a7\u5236\u8f93\u51fa\u7684\u683c\u5f0f\u8bed\u53e5</p> <pre><code>#include &lt;iomanip&gt; // \u5934\u6587\u4ef6\nusing namespace std;\n\ncout &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(n); // n\u4e3a\u8981\u6c42\u7684\u7cbe\u5ea6\n</code></pre>"},{"location":"solutions/pat/set-similarity/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;set&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint count(set&lt;int&gt; a, set&lt;int&gt; b)\n{\n    auto it1 = a.begin(), it2 = b.begin();\n    int  cnt = 0;\n    while (it1 != a.end() &amp;&amp; it2 != b.end()) {\n        if (*it1 == *it2) {\n            ++cnt;\n            ++it1;\n            ++it2;\n        } else if (*it1 &lt; *it2)\n            ++it1;\n        else\n            ++it2;\n    }\n    return cnt;\n}\n\nint main()\n{\n    int N;\n    cin &gt;&gt; N;\n    vector&lt;set&lt;int&gt;&gt; set(N + 1);\n    for (int i = 1; i &lt;= N; ++i) {\n        int M;\n        cin &gt;&gt; M;\n        while (M--) {\n            int num;\n            cin &gt;&gt; num;\n            set[i].insert(num);\n        }\n    }\n    int K;\n    cin &gt;&gt; K;\n    cout &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(1);\n    while (K--) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n        int cnt = count(set[a], set[b]);\n        cout &lt;&lt; cnt / double(set[a].size() + set[b].size() - cnt) * 100 &lt;&lt; \"%\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/sharing/","title":"Sharing","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1032 Sharing (25 point(s))</p>"},{"location":"solutions/pat/sharing/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\u7531\u94fe\u8868\u6307\u89c6\uff0c\u516c\u5171\u5b57\u6bcd\u516c\u7528\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u516c\u5171\u5b57\u6bcd\u7684\u5730\u5740</p>"},{"location":"solutions/pat/sharing/#_2","title":"\u601d\u8def","text":"<p>\u5148\u904d\u5386\u4e00\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u8bbe\u4e3a\u5df2\u88ab\u8bbf\u95ee\u7684\u72b6\u6001\uff0c\u7136\u540e\u904d\u5386\u53e6\u4e00\u4e2a\u5355\u8bcd\uff0c\u5f53\u78b0\u5230\u5df2\u88ab\u8bbf\u95ee\u7684\u5b57\u6bcd\u65f6\u8868\u660e\uff0c\u5f53\u524d\u7684\u5b57\u6bcd\u5373\u4e3a\u6240\u6c42\u5b57\u6bcd</p>"},{"location":"solutions/pat/sharing/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nstruct node {\n    int  next{};\n    bool status = false;\n} l[100010];\n\nint main()\n{\n    int s1, s2, n;\n    cin &gt;&gt; s1 &gt;&gt; s2 &gt;&gt; n;\n    int  address, next;\n    char c;\n    for (int i = 0; i &lt; n; ++i) {\n        cin &gt;&gt; address &gt;&gt; c &gt;&gt; next;\n        l[address].next = next;\n    }\n    int p;\n    for (p = s1; p != -1; p = l[p].next)\n        l[p].status = true;\n    for (p = s2; p != -1; p = l[p].next)\n        if (l[p].status)\n            break;\n    if (p == -1)\n        cout &lt;&lt; -1;\n    else\n        cout &lt;&lt; setw(5) &lt;&lt; setfill('0') &lt;&lt; p;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/shortest-distance/","title":"Shortest Distance","text":""},{"location":"solutions/pat/shortest-distance/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5728\u4e00\u4e2aloop\u4e2d\uff0c\u627e\u4e24\u70b9\u7684\u6700\u77ed\u8ddd\u79bb</p>"},{"location":"solutions/pat/shortest-distance/#_2","title":"\u601d\u8def","text":"<p>\u5728\u8f93\u5165\u65f6\uff0c\u5c31\u8ba1\u7b97\u51fa\u6240\u6709\u8ddd\u79bb\u7684\u548c<code>sum</code>\uff0c\u7531\u4e8e\u672c\u9898\u76ee\u70b9\u4e2a\u6570\u6700\u5927\u4e3a\\(10^5\\)\uff0c\u67e5\u8be2\u7684\u7ec4\u6570\u6700\u5927\u4e3a\\(10^4\\)\u91cf\u7ea7\uff0c\u6240\u4ee5\u6309\u7167\u6765\u4e00\u7ec4\u67e5\u4e00\u6b21\u7684\u65b9\u5f0f\u5f88\u5bb9\u6613\u8d85\u65f6\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u65f6\u5c31**\u6309\u987a\u65f6\u9488\u65b9\u5411\u7684\u9488\u5bf9\u4e00\u4e2a\u57fa\u70b9\u7684\u8ddd\u79bb<code>distance</code>**\uff0c\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u5c31\u5f88nice</p>"},{"location":"solutions/pat/shortest-distance/#_3","title":"\u95ee\u9898","text":"<p>\u592a\u4e45\u6ca1\u7528c\u4e86\uff0c\u4e00\u53ea\u7528c++\uff0c\u90fd\u5fd8\u8bb0<code>scanf</code>\u4e2d\u662f\u8981\u5199\u53d8\u91cf\u5730\u5740\u7684\ud83d\ude05\uff0c\u771f\u5c34\u5c2c\uff0c\u66f4\u65b0\u7528c++\u5199</p>"},{"location":"solutions/pat/shortest-distance/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main()\n{\n    int N;\n    cin &gt;&gt; N;\n    vector&lt;int&gt; D(N), distance;\n    // distance[i]\u8868\u793a\u4ece\u4e0b\u6807\u4e3a0\u5230\u4e0b\u6807\u4e3ai\u7684\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    distance.push_back(0);\n    int sum = 0;\n    for (auto i = 0; i != N; ++i) {\n        cin &gt;&gt; D[i];\n        if (i)\n            distance.push_back(sum);\n        sum += D[i];\n    }\n    int M, a, b;\n    cin &gt;&gt; M;\n    while (M--) {\n        cin &gt;&gt; a &gt;&gt; b;\n        if (a &gt; b)\n            swap(a, b);\n        // \u5e8f\u53f7\u53d8\u4e3a\u4e0b\u6807\n        auto temp = distance[b - 1] - distance[a - 1];\n        cout &lt;&lt; min(temp, sum - temp) &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/shuffling-machine/","title":"Shuffling Machine","text":""},{"location":"solutions/pat/shuffling-machine/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5bf954\u5f20\u724c\u8fdb\u884c\u7ed9\u5b9a\u6b21\u6570\u4e14\u7ed9\u5b9a\u5e8f\u5217\u7684\u6d17\u724c\u6a21\u62df\u3002</p>"},{"location":"solutions/pat/shuffling-machine/#_2","title":"\u601d\u8def","text":"<p>\u8bbe\u4e00\u4e2a<code>res</code>\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u6700\u7ec8\u7b2ci\u5f20\u724c\u5728\u521d\u59cb\u5e8f\u5217(S1~S13,...,D13,J1,J2)\u4e2d\u7684\u5e8f\u53f7\u3002\u5bf9\u6bcf\u4e2a\u724c\u6839\u636e\u7ed9\u5b9a\u7684<code>shuffleseq</code>\u8fdb\u884c\u7ed9\u5b9a<code>cnt</code>\u6b21\u5957\u5a03\u67e5\u627e\u3002\u6700\u7ec8\u7ed3\u679c\u6839\u636e\u521d\u59cb\u5e8f\u5217\u7684\u5e8f\u53f7\u8fdb\u884c\u6620\u5c04\uff0c\u4e0d\u9ebb\u70e6.</p>"},{"location":"solutions/pat/shuffling-machine/#_3","title":"\u95ee\u9898","text":"<p>\u4e0d\u5ba1\u9898... <code>no extra space at the end of the line</code>\u8fd9\u51e0\u884c\u5b57\u88ab\u6211\u5403\u4e86\uff0c\u592a\u4e45\u6ca1\u505a\u9898\u4e86\u3002</p>"},{"location":"solutions/pat/shuffling-machine/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    int cnt; // \u5faa\u73af\u6b21\u6570\n    // \u6d17\u724c\u5e8f\u5217\u3001\u6700\u7ec8\u7ed3\u679cres--res[i]\u4e2d\u8bb0\u5f55\u7684\u662f\u7b2ci\u4e2a\u724c\u5728\u521d\u59cb\u5e8f\u5217\u7684\u987a\u5e8f\n    vector&lt;int&gt; shuffleSeq, res(55);\n    shuffleSeq.push_back(-1);\n    const char card[5] = {'S', 'H', 'C', 'D', 'J'};\n    if (cin &gt;&gt; cnt, cnt) {\n        for (int n; cin &gt;&gt; n; shuffleSeq.push_back(n))\n            ;\n        int curP, truP = 1;\n        for (int i = 1; i != 55; ++i) {\n            curP = i;\n            // \u5faa\u73afcnt\u6b21\n            for (int j = 0; j != cnt; ++j) {\n                truP = shuffleSeq[curP];\n                curP = truP;\n            }\n            // \u7b2ci\u4e2a\u724c\u6700\u7ec8\u4f4d\u7f6e\u4e3atruP\n            res[truP] = i;\n        }\n    }\n    // \u5faa\u73af\u6b21\u6570\u4e3a0\n    else\n        for (auto it = res.begin() + 1; it != res.end(); ++it)\n            *it = it - res.begin();\n    for (auto it = res.begin() + 1; it != res.end(); ++it) {\n        // \u683c\u5f0f\u4fee\u6b63\uff0c\u5982\u521d\u59cb\u4e3a\u7b2c25\u4e2a\u724c\u662f(25-1)/13 = 1,H\u7ec4\u7684\u7b2c(25-1)%13+1 = 12\u4e2a\uff0c\u5373H12\n        cout &lt;&lt; card[(*it - 1) / 13] &lt;&lt; ((*it - 1) % 13 + 1);\n        // \u6700\u540e\u672b\u5c3e\u4e0d\u8f93\u51fa\u7a7a\u683c\n        if (it - res.begin() != 54)\n            cout &lt;&lt; ' ';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/sign-in-and-sign-out/","title":"Sign in and Sign out","text":"<p>\u9898\u76ee\u94fe\u63a51006 Sign In and Sign Out (25 \u5206)</p>"},{"location":"solutions/pat/sign-in-and-sign-out/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u6839\u636e\u65f6\u95f4\uff0c\u8f93\u51fa\u6700\u65e9\u6765\u548c\u6700\u665a\u8d70\u7684\u4eba\u7684<code>id</code></p>"},{"location":"solutions/pat/sign-in-and-sign-out/#_2","title":"\u601d\u8def","text":"<p>\u8f93\u5165\u65f6\u5373\u7528<code>earliest</code>\u548c<code>latest</code>\u5904\u7406\u4fdd\u5b58\u5f53\u524d\u5df2\u7ecf\u8f93\u5165\u7684\u4eba\u4e2d\u7684\u6700\u65e9\u548c\u6700\u665a</p>"},{"location":"solutions/pat/sign-in-and-sign-out/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct employee {\n    string id;\n    int    hour{}, minute{}, second{};\n\n} temp, earliest, latest;\n\nbool great(employee&amp; a, employee&amp; b)\n{\n    if (a.hour != b.hour)\n        return a.hour &gt; b.hour;\n    else if (a.minute != b.minute)\n        return a.minute &gt; b.minute;\n    else\n        return a.second &gt; b.second;\n}\n\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    earliest.hour = 24, earliest.minute = 60, earliest.second = 60;\n    latest.hour = latest.minute = latest.second = 0;\n    while (n--) {\n        char c;\n        cin &gt;&gt; temp.id &gt;&gt; temp.hour &gt;&gt; c &gt;&gt; temp.minute &gt;&gt; c &gt;&gt; temp.second;\n        if (!great(temp, earliest))\n            earliest = temp;\n        cin &gt;&gt; temp.hour &gt;&gt; c &gt;&gt; temp.minute &gt;&gt; c &gt;&gt; temp.second;\n        if (great(temp, latest))\n            swap(temp, latest); // \u6ce8\u610f\u7528swap\u7684\u8bdd\uff0c\u53ea\u80fd\u4ea4\u6362\u4e00\u6b21\uff0c\u56e0\u4e3a\u6709\u4e24\u4e2a\u503c\u9700\u8981\u66f4\u65b0\n    }\n    cout &lt;&lt; earliest.id &lt;&lt; \" \" &lt;&lt; latest.id;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/speech-patterns/","title":"Speech Patterns","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1071 Speech Patterns (25 point(s))</p>"},{"location":"solutions/pat/speech-patterns/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5355\u8bcd</p>"},{"location":"solutions/pat/speech-patterns/#_2","title":"\u601d\u8def","text":"<p>\u7edf\u8ba1\u5355\u8bcd\u6570\uff0c\u4e5f\u5c31\u662f\u8981\u5206\u5272\u5355\u8bcd\uff0c\u8fd9\u91cc\u6ce8\u610f\u5355\u8bcd\u6709\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\uff0c\u4ee5\u53ca\u5bf9\u975e\u6709\u6548\u5b57\u7b26\u7684\u5224\u65ad</p>"},{"location":"solutions/pat/speech-patterns/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nint main()\n{\n    map&lt;string, int&gt; count;\n    string           str;\n    getline(cin, str);\n    int i = 0;\n    while (i &lt; str.length()) {\n        string word;\n        while (i &lt; str.length() &amp;&amp; isalnum(str[i])) {\n            if (str[i] &gt;= 'A' &amp;&amp; str[i] &lt;= 'Z') // \u6539\u4e3a\u5c0f\u5199\n                str[i] += 32;\n            word += str[i++];\n        }\n        if (!word.empty()) { // \u7edf\u8ba1\u51fa\u662f\u4e2a\u5355\u8bcd\n            if (count.find(word) == count.end())\n                count[word] = 1;\n            else\n                ++count[word];\n        }\n        while (i &lt; str.length() &amp;&amp; !isalnum(str[i]))\n            ++i; // \u8df3\u8fc7\u975e\u5355\u8bcd\u5b57\u7b26\n    }\n    string ans;\n    int    max = 0;\n    for (auto&amp; it : count) {\n        if (it.second &gt; max) {\n            max = it.second;\n            ans = it.first;\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; \" \" &lt;&lt; max;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/spell-it-right/","title":"Spell it Right","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1005 Spell It Right (20 point(s))</p>"},{"location":"solutions/pat/spell-it-right/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u5c06\u7ed9\u5b9a\u7684\u6570\u6bcf\u4e00\u4f4d\u52a0\u8d77\u6765\uff0c\u8f93\u51fa\u548c\u7684\u6bcf\u4e00\u4f4d\u7684\u82f1\u6587</p>"},{"location":"solutions/pat/spell-it-right/#_2","title":"\u601d\u8def","text":"<p>\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u7528\u597d<code>to_string</code>\u3002\u53e6\u5916\uff0c\u5b66\u4e60\u4e86\u5982\u4f55\u5728<code>auto</code>\u904d\u5386\u4e2d\u5224\u65ad\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20</p>"},{"location":"solutions/pat/spell-it-right/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nchar number[11][6] = {\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\"};\nint  main()\n{\n    string str;\n    cin &gt;&gt; str;\n    int sum = 0;\n    for (auto&amp; s : str) {\n        sum += s - '0';\n    }\n    string ans = to_string(sum);\n    for (auto&amp; s : ans) {\n        cout &lt;&lt; number[s - '0'];\n        if (&amp;s != &amp;ans.back()) // \u5224\u65ad\u662f\u5426\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6bd4\u8f83\u5730\u5740\n            cout &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/student-list-for-course/","title":"Student List for Course","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1047 Student List for Course (25 point(s))</p>"},{"location":"solutions/pat/student-list-for-course/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8ddf<code>A1039</code>\u53cd\u8fc7\u6765\u4e86\uff0c\u7ed9\u4f60\u5b66\u751f\u4fe1\u606f\uff0c\u8f93\u51fa\u6bcf\u4e2a\u8bfe\u7a0b\u9009\u7684\u5b66\u751f\u4fe1\u606f\u3002</p>"},{"location":"solutions/pat/student-list-for-course/#_2","title":"\u601d\u8def","text":"<p>\u521a\u5f00\u59cb\uff0c\u76f4\u63a5\u5c06\u5b66\u751f\u540d\u5b57\u5b58\u5165<code>course</code>\u5411\u91cf\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u603b\u8d85\u65f6\uff0c\u540e\u6765\u662f\u7528<code>unordered_map</code>\u5b58\u50a8\u5b66\u751f\u4e0b\u6807\u4e0e\u540d\u5b57\u7684\u6620\u5c04\uff0c\u4ee5\u4e3a\u662f<code>emplace_back</code> <code>string</code>\u7684\u65f6\u5019\u8017\u65f6\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u8fd8\u662f\u8d85\u65f6\uff0c\u6700\u540e\u7ecf\u8fc7\u641c\u5bfb\uff0c\u624d\u77e5\u9053\u662f<code>cout</code>\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u7528\u4e0d\u7740<code>unordered_map</code>\u3002</p> <p>\u53e6\u5916\u4e0d\u5f97\u4e0d\u5410\u69fd\u4e00\u4e0b\uff0c\u9898\u76ee\u4e2d\u672c\u6765\u5c31\u8bf4\u672b\u5c3e\u6ca1\u6709\u989d\u5916\u7684\u7a7a\u884c\uff0c\u4e0b\u9762\u4ee3\u7801\u4e5f\u6ca1\u6709\u5bf9\u6700\u540e\u4e00\u884c\u8f93\u51fa\u6709\u5224\u65ad\u5c31\u80fd<code>AC</code>\uff0c\u5c31\u5f88\u65e0\u8bed\uff0c\uff0c\uff0c</p>"},{"location":"solutions/pat/student-list-for-course/#cout","title":"<code>cout</code>\u8d85\u65f6\u95ee\u9898\u5206\u6790","text":"<p>\u4e0a\u8ff0\u601d\u8def\u4e2d\uff0c\u5df2\u7ecf\u8868\u8ff0\uff0c\u521d\u6b65\u5199\u7684\u4ee3\u7801\u4e2d\uff0c\u8fc7\u4e0d\u4e86\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u4e00\u76f4\u8d85\u65f6\uff0c\u4e0b\u9762\u662f\u6211\u7684\u5904\u7406\u5206\u6790\u8fc7\u7a0b\uff1a</p> <p>\u7ecf\u8fc7\u641c\u5bfb\u8d44\u6599\uff0c\u5f97\u77e5\uff1a<code>cout</code>\u6bd4<code>printf</code>\u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u53ea\u6709\u5f53\u7f13\u51b2\u533a\u5199\u6ee1\u7684\u65f6\u5019\u624d\u4f1a\u771f\u6b63\u8f93\u51fa\uff0c\u800c\u5f53\u4f7f\u7528<code>std::endl</code>\u8f93\u51fa\u6362\u884c\u65f6\uff0c\u672b\u5c3e\u4f1a\u518d\u8fd0\u884c\u4e00\u4e2a<code>flush</code>\u5f3a\u884c\u6e05\u9664\u7f13\u51b2\u533a\uff0c\u8fd9\u6837\u5c31\u6ca1\u80fd\u53d1\u6325<code>cout</code>\u4e2d\u7f13\u51b2\u533a\u7684\u4f18\u5316\uff0c\u6240\u4ee5\u663e\u5f97\u8fd0\u884c\u65f6\u95f4\u8981\u957f\u3002\u4f46\u5f53\u4f7f\u7528<code>\"\\n\"</code>\u8f93\u51fa\u6362\u884c\u65f6\uff0c\u5c31\u8ddf<code>printf</code>\u5dee\u4e0d\u591a\u4e86\uff08\u5c31\u672c\u9898\u800c\u8a00\uff09\u3002</p> <p>\u53e6\u5916\uff0c<code>printf</code>\u4e0e<code>cout</code>\u4e0d\u8981\u6df7\u7528\uff0c\u56e0\u4e3a\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u4ed6\u4eec\u7684\u6267\u884c\u987a\u5e8f\u4e0d\u4e00\u5b9a\u4f1a\u662f\u6267\u884c\u5b8c\u4e00\u4e2a\u518d\u6267\u884c\u53e6\u4e00\u4e2a\uff0c\u800c\u4e00\u4e2a\u4e0d\u4f7f\u7528\u7f13\u51b2\u533a\u7684\u7a81\u7136\u8df3\u5230\u4f7f\u7528\u7f13\u51b2\u533a\u7684\u8f93\u51fa\u65b9\u5f0f\uff0c\u6216\u8005\u53cd\u8fc7\u6765\uff0c\u4f1a\u9020\u6210\u975e\u671f\u671b\u7684\u7ed3\u679c\u3002</p> <p>\u6240\u4ee5\uff0c\u6700\u7ec8\u7ed3\u8bba\u662f\uff0c\u8fd9\u9053\u9898\uff0c<code>cout</code>\u4f7f\u7528<code>\\n</code>\u8f93\u51fa\u6362\u884c\u4e00\u6837\u4e5f\u80fd\u8fc7\uff01\uff01\uff01</p>"},{"location":"solutions/pat/student-list-for-course/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n// #include &lt;cstdio&gt;\nusing namespace std;\n\nint main()\n{\n    int N, K;\n    istream::sync_with_stdio(false); // \u5173\u95ed\u540c\u6b65\uff0c\u65f6\u95f4\u4e0a\u4f1a\u5feb\u4e2a\u7ea6200\u591ams\n    cin &gt;&gt; N &gt;&gt; K;\n    vector&lt;vector&lt;string&gt;&gt; course(K + 1);\n    for (int i = 0; i &lt; N; ++i) {\n        string name;\n        int    num, id;\n        cin &gt;&gt; name &gt;&gt; num;\n        for (int j = 0; j &lt; num; ++j) {\n            cin &gt;&gt; id;\n            course[id].emplace_back(name);\n        }\n    }\n    for (int i = 1; i &lt;= K; ++i) {\n        // printf(\"%d %d\\n\", i, course[i].size());\n        cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; course[i].size() &lt;&lt; \"\\n\";\n        // \u540c\u6837\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\uff0c\u771f\u7684\u5f88\u7b80\u6d01\n        sort(course[i].begin(), course[i].end(), [](string a, string b) { return a &lt; b; });\n        for (auto&amp; it : course[i]) {\n            // printf(\"%s\\n\", it.c_str()); // c_str() \u8f6c\u6362\u6210c\u8bed\u8a00\u98ce\u683c\u65f6\u5b57\u7b26\u4e32\n            cout &lt;&lt; it &lt;&lt; \"\\n\";\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/summary/","title":"Summary","text":""},{"location":"solutions/pat/summary/#advanced","title":"Advanced","text":"Number Link A1001 A+B Format A1002 A+B for Polynomials A1004 Counting Leaves A1005 Spell it Right A1006 Sign In and Sign Out A1009 Product of Polynomials A1011 World Cup Betting A1014 Waiting In Line A1019 General Palindromic Number A1020 Tree Traversals A1022 Digital Library A1031 Hello World for U A1032 Sharing A1035 Password A1036 Boys vs Girls A1039 Course List for Student A1042 Shuffling Machine A1046 Shortest Distance A1047 Student List for Course A1051 Pop Sequence A1052 Linked List Sorting A1054 The Dominant Color A1056 Mice And Rice A1060 Are They Equal A1061 Dating A1063 Set Similarity A1065 A+B and C (64bit) A1071 Speech Patterns A1073 Scientific Notation A1074 Reversing Linked List A1077 Kuchiguse A1082 Read Number In Chinese A1086 Tree Traversals Again A1091 Acute Stroke A1097 Deduplication On A Linked List A1100 Mars Numbers A1102 Invert A Binary Tree A1103 Integer Factorization A1109 Group Photo"},{"location":"solutions/pat/summary/#basic","title":"Basic","text":""},{"location":"solutions/pat/the-dominant-color/","title":"The Dominant Color","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1054 The Dominant Color (20 point(s))</p>"},{"location":"solutions/pat/the-dominant-color/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7edf\u8ba1\u4e00\u4e2a\u77e9\u9635\u4e2d\u8d85\u8fc7\u534a\u6570\uff08\u672c\u9898\u4fdd\u8bc1\u4e86\uff09\uff0c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c</p>"},{"location":"solutions/pat/the-dominant-color/#_2","title":"\u601d\u8def","text":"<p>\u672c\u6765\u53ef\u4ee5\u5f00\u8f9f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u7ec4\uff0cm * n\u6765\u4fdd\u5b58\u6bcf\u4e2a\u53ef\u80fd\u7684\u503c\uff0c\u4f46\u662f\u9898\u76ee\u4e2d\u7684\u503c\u8303\u56f4\u4e3a[0, 2^24]\uff0c\u8fc7\u4e8e\u5927\u4e86\uff0c\u6240\u4ee5\u91c7\u7528<code>map</code>\u6620\u5c04\u7684\u529e\u6cd5\u3002</p>"},{"location":"solutions/pat/the-dominant-color/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nint main()\n{\n    int m, n;\n    ios::sync_with_stdio(false);\n    cin &gt;&gt; m &gt;&gt; n;\n    int           color;\n    map&lt;int, int&gt; count; // color\u4e0ecount\u6b21\u6570\u7684\u6620\u5c04\n    for (int i = 0; i &lt; n; ++i) {\n        for (int j = 0; j &lt; m; ++j) {\n            cin &gt;&gt; color;\n            if (count.find(color) == count.end()) // \u8fd8\u672a\u88ab\u7edf\u8ba1\n                count[color] = 1;                 // \u8ba1\u6570\u4e3a1\n            else\n                ++count[color];\n        }\n    }\n    // \u904d\u5386map\uff0c\u6c42\u51fa\u6700\u5927\u7684\u90a3\u4e2acolor\n    int maxColor = 0, maxCount = 0;\n    for (auto it = count.begin(); it != count.end(); ++it) {\n        if (it-&gt;second &gt; maxCount) {\n            maxCount = it-&gt;second;\n            maxColor = it-&gt;first;\n        }\n    }\n    cout &lt;&lt; maxColor &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/tree-traversals-again/","title":"Tree Traversals Again","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1086 Tree Traversals Again (25 point(s))</p>"},{"location":"solutions/pat/tree-traversals-again/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\uff0c\u4ee5\u53ca\u7528\u6808\u5b9e\u73b0\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u8981\u6c42\u7ed9\u51fa\u540e\u5e8f\u904d\u5386\u5e8f\u5217</p>"},{"location":"solutions/pat/tree-traversals-again/#_2","title":"\u601d\u8def","text":"<p>\u6839\u636e\u6808\u7684\u64cd\u4f5c\u5e8f\u5217\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u51fa\u8fd9\u68f5\u6811\u7684\u524d\u5e8f\u904d\u5386\u5e8f\u5217\uff08\u5373\uff0c<code>push</code>\u7684\u987a\u5e8f\uff09\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\uff08\u5373\uff0c<code>pop</code>\u7684\u987a\u5e8f\uff09\uff0c\u7136\u540e\u6839\u636e\u524d\u5e8f\u548c\u4e2d\u5e8f\u5f97\u51fa\u4e8c\u53c9\u6811\u7136\u540e\u518d\u540e\u5e8f\u904d\u5386\u5373\u53ef\u3002</p> <p>\u4f46\uff0c\u6211\u7b2c\u4e00\u53cd\u5e94\u6ca1\u6709\u60f3\u7740\u8fd9\u6837\u5b50\u5f04\uff0c\u53ef\u80fd\u662f\u9093\u516c\u7684\u6570\u636e\u7ed3\u6784\u8ba9\u6211\u5bf9\u4e2d\u5e8f\u904d\u5386\u7684\u8fed\u4ee3\u5b9e\u73b0\u7684\u5f62\u5f0f\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u6211\u7b2c\u4e00\u53cd\u5e94\u662f\u76f4\u63a5\u6839\u636e\u6808\u7684\u64cd\u4f5c\u5e8f\u5217\u6784\u9020\u4e00\u68f5\u6811\uff0c\u5373\u7b2c\u4e00\u4e2a\u4e00\u5b9a\u662f<code>push</code>\u7136\u540e\u8fd9\u4e2a<code>push</code>\u7684\u4e00\u5b9a\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u7b2c\u4e00\u4e2a<code>push</code>\u540e\u7d27\u8ddf\u7684<code>push</code>\u4e00\u5b9a\u90fd\u662f\u4e00\u4e2a\u5de6\u4fa7\u94fe\uff0c\u5373\u5747\u662f\u4e0a\u4e00\u4e2a\u7684\u5de6\u5b69\u5b50\uff1b\u5f53\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u662f<code>push</code>\u800c\u5f53\u524d\u64cd\u4f5c\u662f<code>pop</code>\u65f6\uff0c\u8868\u660e\uff0c\u6b64\u65f6\u5df2\u8fbe\u5f53\u524d\u5de6\u4fa7\u94fe\u7684\u6700\u5e95\u7aef\uff0c\u5f53\u524d\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u4e3a\u7a7a\uff0c\u4e14\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u88ab<code>pop</code>\uff0c\u6b64\u65f6\u5e94\u5f53\u8f6c\u5411\u5176\u53f3\u5b69\u5b50\u8fdb\u884c\u8003\u5bdf\uff0c\u5f53\u53f3\u5b69\u5b50\u8003\u5bdf\u5b8c\u6bd5\u540e\u5e94\u8be5\u987a\u7740\u7236\u8282\u70b9\uff0c\u4e00\u76f4\u627e\u5230\u672a\u88ab<code>pop</code>\u7684\u7236\u8282\u70b9\uff0c<code>pop</code>\u5b83\u7136\u540e\u8f6c\u5411\u5b83\u7684\u53f3\u5b69\u5b50\u3002</p> <p>\u8be6\u89c1\u4ee3\u7801</p>"},{"location":"solutions/pat/tree-traversals-again/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstruct node {\n    int          data;\n    struct node* left;\n    struct node* right;\n    struct node* parent; // \u65b9\u4fbf\u56de\u6eaf\n    bool status{false}; // \u4e3atrue\u65f6\u8868\u793a\u5f53\u524d\u8282\u70b9\u5df2\u88ab\u6808\u64cd\u4f5cpop\u6389\uff0c\u5373\u5e94\u5f53\u8003\u5bdf\u5176\u53f3\u5b69\u5b50\uff08\u5982\u679c\u5b58\u5728\uff09\n};\nint         n;\nvector&lt;int&gt; post; // NOLINT\n\nvector&lt;string&gt; op;\nnode*          construct()\n{\n    node* root = new node;\n    root-&gt;data = op[0][5] - '0';\n    if (op[0].size() == 7) // \u4e00\u4e2a\u5751\uff0cn\u53d6\u503c\u53ef\u4ee5\u662f\u4e24\u4f4d\u6570\uff0c\u6211\u91c7\u7528\u7684\u662f\u5b57\u7b26\u4e32\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u6240\u4ee5\u8981\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\n        root-&gt;data = root-&gt;data * 10 + op[0][6] - '0';\n    node* temp = root;\n    bool  flag = true;\n    for (auto it = op.begin() + 1; it != op.end(); ++it) {\n        if (flag &amp;&amp; (*it)[1] == 'u') { // \u6b64\u65f6\u8868\u793atemp\u8981\u63a5\u5165\u5de6\u5b69\u5b50\n            node* left = new node;\n            int   num  = (*it)[5] - '0';\n            if (it-&gt;size() == 7)\n                num = num * 10 + (*it)[6] - '0';\n            left-&gt;data   = num;\n            temp-&gt;left   = left;\n            left-&gt;parent = temp;\n            temp         = temp-&gt;left;\n        } else if (flag &amp;&amp; (*it)[1] == 'o') { // \u8868\u793atemp\u5de6\u5b69\u5b50\u4e3a\u7a7a\uff0c\u4e14temp\u88abpop\u6389\u4e86\n            flag         = !flag;\n            temp-&gt;status = true;\n            temp-&gt;left   = nullptr;\n        } else if (!flag &amp;&amp; (*it)[1] == 'o') { // \u8868\u793atemp\u53f3\u5b69\u5b50\u4e3a\u7a7a\uff0c\u4e14temp\u7684\u6700\u8fd1\u4e00\u4e2a\u672a\u88abpop\u7684\u7956\u7236\u8be5\u88abpop\n            temp-&gt;right = nullptr;\n            temp        = temp-&gt;parent;\n            while (temp-&gt;status) // \u627e\u5230\u8fd8\u672a\u88abpop\u7684\u7956\u7236\n                temp = temp-&gt;parent;\n            temp-&gt;status = true;               // \u5c06\u5176pop\n        } else if (!flag &amp;&amp; (*it)[1] == 'u') { // \u8868\u793atemp\u5b58\u5728\u53f3\u5b50\u6811\uff0c\u63a5\u5165\n            flag        = !flag;\n            node* right = new node;\n            int   num   = (*it)[5] - '0';\n            if (it-&gt;size() == 7)\n                num = num * 10 + (*it)[6] - '0';\n            right-&gt;data   = num;\n            temp-&gt;right   = right;\n            right-&gt;parent = temp;\n            temp          = temp-&gt;right;\n        }\n    }\n    return root;\n}\n\nvoid traverse(node*&amp; tree)\n{\n    if (!tree)\n        return;\n    traverse(tree-&gt;left);\n    traverse(tree-&gt;right);\n    post.emplace_back(tree-&gt;data);\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    cin.get();\n    op.resize(2 * n);\n    for (int i = 0; i &lt; 2 * n; ++i)\n        getline(cin, op[i]);\n    node* tree = construct();\n    traverse(tree);\n    for (auto&amp; it : post) {\n        cout &lt;&lt; it;\n        if (&amp;it != &amp;post.back())\n            cout &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/tree-traversals/","title":"Tree Traversals","text":"<p>\u9898\u76ee\u94fe\u63a5\uff1a1020 Tree Traversals (25 point(s))</p>"},{"location":"solutions/pat/tree-traversals/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3001\u540e\u7eed\u904d\u5386\u5e8f\u5217\u3001\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\uff0c\u8981\u6c42\u8f93\u51fa\u5176\u5c42\u5e8f\u904d\u5386\u5e8f\u5217</p>"},{"location":"solutions/pat/tree-traversals/#_2","title":"\u601d\u8def","text":"<p>\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\uff0c\u540e\u7eed\u904d\u5386\u53ef\u4ee5\u786e\u5b9a\u5b50\u6811\u7684\u6839\uff0c\u5148\u6784\u9020\u51fa\u4e8c\u53c9\u6811\uff0c\u7136\u540e\u505a\u5c42\u5e8f\u904d\u5386\u5373\u53ef</p>"},{"location":"solutions/pat/tree-traversals/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstruct node {\n    int          data;\n    struct node* left;\n    struct node* right;\n};\nint         n;\nvector&lt;int&gt; post; // NOLINT\nvector&lt;int&gt; in;   // NOLINT\nvector&lt;int&gt; layer;\n\nnode* construct(int in_l, int in_r, int post_l, int post_r)\n{\n    if (in_r - in_l &lt; 1) {\n        return nullptr;\n    }\n    int   key  = post_r - 1;\n    node* root = new node;\n    root-&gt;data = post[key];\n    int i      = in_l;\n    for (; i != in_r; ++i) {\n        if (in[i] == post[key])\n            break;\n    }\n    root-&gt;left  = construct(in_l, i, post_l, post_r - in_r + i);\n    root-&gt;right = construct(i + 1, in_r, post_r - in_r + i, post_r - 1);\n    return root;\n}\n\nvoid traverse(node*&amp; tree)\n{\n    if (!tree)\n        return;\n    queue&lt;node*&gt; q;\n    q.push(tree);\n    while (!q.empty()) {\n        node* front = q.front();\n        q.pop();\n        layer.emplace_back(front-&gt;data);\n        if (front-&gt;left)\n            q.push(front-&gt;left);\n        if (front-&gt;right)\n            q.push(front-&gt;right);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    post.resize(n);\n    in.resize(n);\n    for (auto&amp; it : post)\n        cin &gt;&gt; it;\n    for (auto&amp; it : in)\n        cin &gt;&gt; it;\n    node* tree = construct(0, n, 0, n);\n    traverse(tree);\n    for (auto&amp; it : layer) {\n        cout &lt;&lt; it;\n        if (&amp;it != &amp;layer.back()) {\n            cout &lt;&lt; \" \";\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/waiting-in-line/","title":"Waiting in Line","text":"<p>\u9898\u76ee\u94fe\u63a51014 Waiting in Line (30 \u5206)</p>"},{"location":"solutions/pat/waiting-in-line/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u6392\u5e8f\u8c03\u5ea6</p>"},{"location":"solutions/pat/waiting-in-line/#_2","title":"\u601d\u8def","text":"<p>\u6309\u65f6\u95f4\u4e00\u6b65\u6b65\u6a21\u62df\u987e\u5ba2\u88ab\u670d\u52a1\u7684\u8fc7\u7a0b</p>"},{"location":"solutions/pat/waiting-in-line/#_3","title":"\u95ee\u9898","text":"<p>\u53ea\u4f7f\u7528<code>vector</code>\u8fc7\u4e86\u6d4b\u8bd5\u70b94\u30015\u6ca1\u8fc7\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u89e3\u51b3\uff0c\u540e\u7eed\u5c1d\u8bd5\u4f7f\u7528<code>queue</code>\u89e3\u51b3\u3002</p>"},{"location":"solutions/pat/waiting-in-line/#vector","title":"<code>vector</code>\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nclass customer {\npublic:\n    int time;  // \u9700\u8981\u670d\u52a1\u7684\u65f6\u95f4\n    int done;  // \u670d\u52a1\u7ed3\u675f\u65f6\u95f4\n    int serve; // \u670d\u52a1\u5f00\u59cb\u65f6\u95f4\n};\n\nbool empty(vector&lt;vector&lt;int&gt;&gt;&amp; windows)\n{\n    bool flag = true;\n    for (auto&amp; window : windows) {\n        if (!window.empty()) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nbool quick(vector&lt;vector&lt;int&gt;&gt;&amp; windows, vector&lt;customer&gt;&amp; customers)\n{\n    bool flag = true;\n    for (auto&amp; window : windows) {\n        if (window.empty())\n            continue;\n        auto ip = window.begin();\n        if (customers[*ip].done == 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nint find_min(vector&lt;vector&lt;int&gt;&gt;&amp; windows, vector&lt;customer&gt;&amp; customers)\n{\n    int min = 99999; // \u521d\u503c\u95ee\u9898\n    for (auto&amp; window : windows) {\n        if (!window.empty() &amp;&amp; min &gt; customers[*window.begin()].time)\n            min = customers[*window.begin()].time;\n    }\n    return min;\n}\n\nvoid serve(vector&lt;vector&lt;int&gt;&gt;&amp; windows, vector&lt;customer&gt;&amp; customers, int M)\n{\n    int now = 0;\n    int id  = 0;\n    for (int i = 0; i &lt; M; ++i) {\n        for (auto it = windows.begin(); it != windows.end() &amp;&amp; id &lt; customers.size(); ++it) {\n            if (i == 0)\n                customers[id].serve = 0;\n            it-&gt;push_back(id++);\n        }\n    }\n    while (now &lt;= 540 &amp;&amp; !empty(windows)) {\n        int min = find_min(windows, customers);\n        now += min;\n        for (auto&amp; window : windows) {\n            if (!window.empty()) {\n                auto ip = window.begin();\n                if (customers[*ip].done == 0)\n                    customers[*ip].time -= min;\n                if (customers[*ip].time == 0) {\n                    if (customers[*ip].done == 0)\n                        customers[*ip].done = now;\n                    window.erase(ip);\n                    if (!window.empty()) // \u82e5\u4e0d\u7a7a\uff0c\u5219\u4e0b\u4e00\u4e2a\u5c31\u662f\u670d\u52a1\u5bf9\u8c61\n                        customers[*window.begin()].serve = now;\n                }\n            }\n        }\n        // \u5982\u679c\u8fd8\u6709\u987e\u5ba2\u7b49\u5f85\u5219\u68c0\u67e5\u7a7a\u4f59\u5730\u65b9\u63d2\u5165\u987e\u5ba2\n        if (id &lt; customers.size()) {\n            for (int i = 1; i &lt;= M; ++i) {\n                for (auto&amp; window : windows) {\n                    while (window.size() &lt; i &amp;&amp; id &lt; customers.size()) { // \u961f\u5217\u662f\u5426\u6709\u4f4d\u7f6e\n                        if (window.empty()) {                            // \u961f\u5217\u4e3a\u7a7a, \u5219\u80af\u5b9a\u4f1a\u88ab\u670d\u52a1\n                            if (customers[id].time + now &gt;= 540) {\n                                customers[id].done = customers[id].time + now;\n                            }\n                            customers[*window.begin()].serve = now;\n                        } else {\n                            if (customers[id].time + now + customers[window.front()].time &gt;= 540) {\n                                customers[id].done = customers[id].time + now + customers[window.front()].time;\n                            }\n                        }\n                        window.push_back(id++);\n                    }\n                }\n            }\n        }\n        if (quick(windows, customers))\n            break;\n    }\n}\n\nint main()\n{\n    int N, M, K, Q;\n    cin &gt;&gt; N &gt;&gt; M &gt;&gt; K &gt;&gt; Q;\n    vector&lt;vector&lt;int&gt;&gt; windows(N);\n    vector&lt;customer&gt;    customers(K);\n    for (auto&amp; customer : customers) {\n        cin &gt;&gt; customer.time;\n        customer.done  = 0;\n        customer.serve = 541;\n    }\n    vector&lt;int&gt; queries(Q);\n    for (int&amp; query : queries) {\n        cin &gt;&gt; query;\n    }\n    serve(windows, customers, M);\n    auto it = customers.begin();\n    for (auto i = 0; i &lt; Q; ++i) {\n        if ((it + queries[i] - 1)-&gt;done &gt; 540) {\n            if ((it + queries[i] - 1)-&gt;serve &lt; 540) {\n                int hour   = (it + queries[i] - 1)-&gt;done / 60 + 8;\n                int minute = (it + queries[i] - 1)-&gt;done % 60;\n                if (hour &gt; 17) {\n                    cout &lt;&lt; \"Sorry\" &lt;&lt; endl;\n                    continue;\n                }\n                hour &gt;= 10 ? (cout &lt;&lt; hour &lt;&lt; \":\") : (cout &lt;&lt; 0 &lt;&lt; hour &lt;&lt; \":\");\n                minute &gt;= 10 ? (cout &lt;&lt; minute &lt;&lt; endl) : (cout &lt;&lt; 0 &lt;&lt; minute &lt;&lt; endl);\n            } else\n                cout &lt;&lt; \"Sorry\" &lt;&lt; endl;\n        } else {\n            int hour   = (it + queries[i] - 1)-&gt;done / 60 + 8;\n            int minute = (it + queries[i] - 1)-&gt;done % 60;\n            hour &gt;= 10 ? (cout &lt;&lt; hour &lt;&lt; \":\") : (cout &lt;&lt; 0 &lt;&lt; hour &lt;&lt; \":\");\n            minute &gt;= 10 ? (cout &lt;&lt; minute &lt;&lt; endl) : (cout &lt;&lt; 0 &lt;&lt; minute &lt;&lt; endl);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"solutions/pat/world-cup-betting/","title":"World Cup Betting","text":"<p>\u9898\u76ee\u94fe\u63a51011 World Cup Betting (20 \u5206)</p>"},{"location":"solutions/pat/world-cup-betting/#_1","title":"\u9898\u5e72\u5927\u610f","text":"<p>\u8fd9\u4e2a\u9898\uff0c\u9898\u76ee\u5199\u7684\u4e0d\u660e\u4e0d\u767d\uff0c\u6211\u6ca1\u592a\u8bfb\u61c2\uff0c\u770b\u4e86\u7b97\u6cd5\u7b14\u8bb0\uff0c\u624d\u77e5\u9053\uff0c\uff0c\uff0c\u53cd\u6b63\u5c31\u662f\uff0c\u9009\u51fa\u6bcf\u884c\u6700\u5927\u7684\uff0c\u6309\u7167\u516c\u5f0f\u8f93\u51fa\u5c31\u597d\u3002\u3002\u3002</p>"},{"location":"solutions/pat/world-cup-betting/#_2","title":"\u601d\u8def","text":"<p>\u7528\u4e00\u4e2a<code>char</code>\u5b58\u653e\u7ed3\u679c\u7684\u5b57\u7b26\uff0c\u91cd\u65b0\u56de\u987e\u4e00\u4e0b<code>cout</code>\u7684\u7cbe\u5ea6\u63a7\u5236</p>"},{"location":"solutions/pat/world-cup-betting/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>#include &lt;iomanip&gt; // \u7cbe\u5ea6\u63a7\u5236\u5934\u6587\u4ef6\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nchar S[3] = {'W', 'T', 'L'};\nint  main()\n{\n    double ans = 1.0, max;\n    int    index;\n    for (int i = 0; i &lt; 3; ++i) {\n        max = 0.0;\n        for (int j = 0; j &lt; 3; ++j) { // \u6bcf\u884c\u5206\u522b\u5904\u7406\n            double temp;\n            cin &gt;&gt; temp;\n            if (temp &gt; max) {\n                max   = temp;\n                index = j;\n            }\n        }\n        ans *= max;\n        cout &lt;&lt; S[index] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(2) &lt;&lt; (ans * 0.65 - 1) * 2; // \u7cbe\u5ea6\u5904\u7406\u683c\u5f0f\n    return 0;\n}\n</code></pre>"},{"location":"solutions/thu/light-house/","title":"LightHouse","text":""},{"location":"solutions/thu/light-house/#_1","title":"\u9898\u76ee\u5927\u610f","text":"<p>\u6bcf\u4e2a\u706f\u5854\u53ef\u4ee5\u7167\u4eae\u4f4d\u4e8e\u5176\u5de6\u4e0b\u548c\u53f3\u4e0a\u7684\u706f\u5854\uff0c\u7ed9\u5b9a\u5750\u6807\uff0c\u627e\u51fa\u80fd\u4e92\u76f8\u7167\u4eae\u7684\u706f\u5854\u7684\u5bf9\u6570\uff0c\u53d8\u76f8\u7684\u9006\u5e8f\u5bf9\u3002</p>"},{"location":"solutions/thu/light-house/#_2","title":"\u601d\u8def","text":"<p>\u5148\u6839\u636e\u5176\u4e2d\u4e00\u4e2a\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u6839\u636e\u53e6\u4e00\u4e2a\u5750\u6807\u627e\u987a\u5e8f\u5bf9</p>"},{"location":"solutions/thu/light-house/#_3","title":"\u95ee\u9898","text":"<p>\u6211\u662f\u8ddf\u7740\u9093\u8001\u5e08\u7684\u6570\u636e\u7ed3\u6784\u8bfe\u7a0b\u8fdb\u5ea6\u505a\u7684\u9898\uff0c\u672c\u60f3\u7740\u7528\u4e24\u6b21\u5f52\u5e76\u6392\u5e8f\uff08\u56e0\u4e3a\u5feb\u6392\u8fd8\u6ca1\u5b66\u5230\uff09\uff0c\u53ef\u5206\u6570\u4e00\u76f4\u5361\u572815\u5206--\uff08RunTime Error-signal 11-SIGSEGV\uff09\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4fe1\u53f7\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u7531\u4e8e\u6307\u9488\u8d8a\u754c\u7684\u95ee\u9898\uff0c\u8ba9\u6211\u4e00\u5ea6\u4ee5\u4e3a\u662f\u6211\u5f52\u5e76\u6392\u5e8f\u5199\u9519\u4e86\u3002 \u7ecf\u8fc7\u51e0\u4e2a\u5c0f\u65f6\u7684\u65e0\u80fd\u6323\u624e\uff0c\u7a81\u7136\u8bd5\u4e86\u4e0b\u7f51\u4e0a\u5927\u90e8\u5206\u4eba\u5957\u7528\u7684\u5feb\u6392\u51fd\u6570\uff0c\u4e00\u4e0b\u5c31AC\u4e86\ud83d\ude33 \u7136\u540e\u6211\u518d\u6b21\u9605\u8bfbSIGSEGV\u4fe1\u53f7\u7684\u5e38\u89c1\u7c7b\u578b\uff0c\u53d1\u73b0\u4e86\u7b2c4\u6761\u548c\u7b2c5\u6761\u3002\u3002\u3002</p> <p></p> <ul> <li>\u6211\u81ea\u5df1\u7684\u778e\u731c\u60f3\uff08\u6709\u5f85\u8fdb\u4e00\u6b65\u5b66\u4e60\u7136\u540e\u8003\u8bc1\uff09 \u82e5\u901a\u8fc7\u5f52\u5e76\u6392\u5e8f\u4ee5x\u5750\u6807\u4e3a\u57fa\u51c6\u8fdb\u884c\u6392\u5e8f\u65f6\uff0c\u6700\u5927\u9700\u8981\u5f00\u8f9f\u4e00\u4e2a\u5355\u5143\u4e2a\u6570\u4e3an\uff0c\u5355\u5143\u5927\u5c0f\u4e3a8B\uff08\u4e24\u4e2aint\uff09\u7684\u6570\u7ec4\uff0c\u7531\u9898\u5bf990%\u7684\u6d4b\u8bd5\u6837\u4f8b\uff0cn\u6700\u5927\u53d63*10^5\uff0c\u8fd9\u4e48\u7b97\u4e0b\u6765\u6700\u5c0f\u60c5\u51b5\u7684\u8fd9\u4e2a\u6700\u5927\u7684\u6570\u7ec4\u8981\u5360\u75282MB\u4ee5\u4e0a\uff0c\u518d\u52a0\u4e0a\u5f52\u5e76\u6392\u5e8f\u7684\u9012\u5f52\u6df1\u5ea6\u76f8\u5bf9\u4e8e\u5feb\u901f\u6392\u5e8f\u4e5f\u4e0d\u5c0f\uff0c\u6240\u4ee5\u53ef\u80fd\u5c31\u8d85\u51fa\u4e86\u51fd\u6570\u5185\u6808\u5185\u5b588MB\u7684\u9650\u5236hhh \u800c\u5feb\u901f\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662fO(logn)\uff0c\u6bd4\u5f52\u5e76\u6392\u5e8f\u7684O(n)\u5c0f\u4e0d\u5c11 \u6216\u8bb8\u5c31\u662f\u8fd9\u4e2a\u539f\u56e0\u5427\uff0c\u6211\u76ee\u524d\u7684\u77e5\u8bc6\u50a8\u91cf\u4e5f\u5c31\u8fd9\u4e86\ud83d\ude43</li> </ul>"},{"location":"solutions/thu/light-house/#ac","title":"AC\u4ee3\u7801","text":"<p>\u5148\u9644\u4e0aAC\u622a\u5c4f\uff0c\u827e\u739b\uff0c\u592a\u4e0d\u5bb9\u6613\u4e86\uff0c\u4e3b\u8981\u662f\u4e0d\u7ed9\u6d4b\u8bd5\u6570\u636e\uff0c\u5c31\u8ddf\u65e0\u5934\u82cd\u8747\u4e71\u649e\u4e00\u6837\uff0c\u7eaa\u5ff5\u4e00\u4e0b</p> <p></p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nstruct LightHouse {\n    int x, y;\n}* lhs;\n\nvoid invBetween(int* y, int l, int mid, int r, long long&amp; cnt)\n{\n    int  la = mid - l;\n    int  lb = r - mid;\n    int* A  = new int[la];\n    for (int i = 0, j = l; i &lt; la; A[i++] = y[j++])\n        ;\n    int* B = y + mid;\n    for (int i = 0, j = 0, k = l; i &lt; la;) {\n        if (j &gt;= lb '' A[i] &lt; B[j]) {\n            y[k++] = A[i++];\n            // \u987a\u5e8f\u5bf9\n            if (j &lt; lb)\n                cnt += (long long)(lb - j);\n        }\n        if (j &lt; lb &amp;&amp; A[i] &gt; B[j])\n            y[k++] = B[j++];\n    }\n    // \u5f52\u5e76\u6392\u5e8f\u6838\u5fc3\u90e8\u5206\u7684\u53e6\u79cd\u5199\u6cd5\uff0c\u6211\u8fd8\u6000\u7591\u8fc7\u5199\u6cd5\u7684\u95ee\u9898\ud83e\udd23\n    //  int i = 0, j = 0, k = l;\n    //  while(i &lt; la)\n    //  {\n    //      if(j &lt; lb &amp;&amp; B[j] &lt; A[i])\n    //      {\n    //          y[k++] = B[j++];\n    //            // \u9006\u5e8f\u5bf9\n    //          cnt += (long long)(la - i);\n    //      }\n    //      else\n    //          y[k++] = A[i++];\n    //  }\n\n    delete[] A;\n}\n\nvoid invInside(int* y, int l, int r, long long&amp; cnt)\n{\n    if (r - l &lt; 2)\n        return;\n    int mid = (l + r) / 2;\n    invInside(y, l, mid, cnt);\n    invInside(y, mid, r, cnt);\n    invBetween(y, l, mid, r, cnt);\n}\n\n// \u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\u7528\u4e86qsort()\u540e\u5c31\u6ca1\u7528\u4e86\nvoid merge(int l, int mid, int r)\n{\n    int         la = mid - l;\n    int         lb = r - mid;\n    LightHouse* A  = new LightHouse[la];\n    for (int i = 0, j = l; i &lt; lb; A[i++] = lhs[j++])\n        ;\n    LightHouse* B = lhs + mid;\n    int         i = 0, j = 0, k = l;\n    while (i &lt; la) {\n        if (j &lt; lb &amp;&amp; B[j].x &lt; A[i].x)\n            lhs[k++] = B[j++];\n        else\n            lhs[k++] = A[i++];\n    }\n    delete[] A;\n}\nvoid mergeSort(int l, int r)\n{\n    if (r - l &lt; 2)\n        return;\n    int mid = (1 + r) / 2;\n    mergeSort(l, mid);\n    mergeSort(mid, r);\n    merge(l, mid, r);\n}\n\n// void*\u578b\u6307\u9488\u7684\u4e00\u79cd\u7528\u6cd5\nint cmp(const void* v1, const void* v2)\n{\n    return ((LightHouse*)v1)-&gt;x - ((LightHouse*)v2)-&gt;x;\n}\nint main()\n{\n    int n; // the number of lighthouse\n    scanf(\"%d\", &amp;n);\n    lhs = new LightHouse[n];\n    for (int i = 0; i &lt; n; ++i)\n        scanf(\"%d %d\", &amp;lhs[i].x, &amp;lhs[i].y);\n    // \u9898\u76ee\u63d0\u793a\u53ef\u80fd\u8d85\u51faint\u8868\u793a\u8303\u56f4\uff0c\u6240\u4ee5\u7528long long\n    long long cnt = 0; // the number of sequence\n\n    qsort(lhs, n, sizeof(LightHouse), cmp);\n    // mergeSort(0, n); // sort based on x\n    int* y = new int[n];\n    for (int i = 0; i &lt; n; ++i)\n        y[i] = lhs[i].y;\n    invInside(y, 0, n, cnt); // compute cnt based on y\n\n    // \u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\uff0c\u7b2c\u4e00\u4e2a\u662f\u7b97\u51fa\u9006\u5e8f\u5bf9\u7136\u540eC(n,2)\u51cf\u4e00\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u76f4\u63a5\u7b97\u51fa\u987a\u5e8f\u5bf9\n    // printf(\"%lld\", (long long)(n)*(long long)(n-1)/(long long)(2) - cnt);\n    printf(\"%lld\", cnt);\n    delete[] lhs;\n    delete[] y;\n    return 0;\n}\n</code></pre>"},{"location":"solutions/thu/proper-rebuild/","title":"Proper Rebuild","text":""},{"location":"solutions/thu/proper-rebuild/#_1","title":"\u9898\u76ee\u5927\u610f","text":"<p>\u7531\u7ed9\u5b9a\u7684\u5148\u5e8f\u904d\u5386\u3001\u540e\u5e8f\u904d\u5386\u5e8f\u5217\uff0c\u786e\u5b9a\u552f\u4e00\u7684\u771f\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217</p>"},{"location":"solutions/thu/proper-rebuild/#_2","title":"\u601d\u8def","text":"<p>\u771f\u4e8c\u53c9\u6811\u5373\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u4e8c\u53c9\u6811\u3002\u5229\u7528\u9012\u5f52\u7684\u601d\u8def\u521b\u5efa\u6811\uff0c\u7136\u540e\u4e2d\u5e8f\u904d\u5386\u4e00\u4e0b\u3002 \u5148\u5e8f\u904d\u5386\u7684\u5934\u4e00\u4e2a\u8282\u70b9\u4e00\u5b9a\u662f\u6839\u7ed3\u70b9\uff0c\u4e0b\u4e00\u4e2a\u4e00\u5b9a\u662f\u5de6\u5b69\u5b50</p>"},{"location":"solutions/thu/proper-rebuild/#_3","title":"\u95ee\u9898","text":"<p>\u6211\u8fc7\u4e8e\u60f3\u7528c++\u5199\u4e86\uff0c\u4f46\u662f\u5bf9c++\u53c8\u4ec5\u4ec5\u662f\u5165\u95e8\u9636\u6bb5\uff0c\u4ee5\u4e3a<code>struct</code>\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728\u4e00\u4e2a\u6210\u719f\u7684c++\u4ee3\u7801\u4e2d\uff0c\u540e\u6765\u624d\u53d1\u73b0\u6211\u9519\u4e86\uff0c\uff0c</p>"},{"location":"solutions/thu/proper-rebuild/#ac","title":"AC\u4ee3\u7801","text":"<pre><code>//  main.cpp\n//  ProperRebuild\n//\n//  Created by lip0041 on 2021/1/21.\n//\n\n#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\nusing namespace std;\n\nconst int MAX = 4e6 + 10;\nint pre[MAX];\nint post[MAX];\n\nstruct Node\n{\n    int data;\n    struct Node *left;\n    struct Node *right;\n};\n\n// \u521b\u5efa\u6811\nstruct Node *buildtree(int l1, int r1, int l2, int r2)\n{\n    // \u5f53\u524d\u6839\u7ed3\u70b9\n    struct Node *root = new struct Node;\n    root-&gt;data = pre[l1];\n    root-&gt;left = root-&gt;right = nullptr;\n    // p\u4e3a\u5f53\u524d\u6839\u7684\u5de6\u5b69\u5b50\u5728\u540e\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e\n    int p = 0;\n    if (r2 == l2)\n        return root;\n    // \u627e\u4e0b\u4e00\u4e2a\u5de6\u6839\u5728post\u4e2d\u7684\u4f4d\u7f6e\n    for (int i = l2; i &lt;= r2; ++i)\n        if (post[i] == pre[l1 + 1])\n        {\n            p = i;\n            break;\n        }\n    // \u7531p\u5c06post\u5e8f\u5217\u5206\u5f00\uff0ct\u4e3a\u5de6\u8fb9\u5b50\u6811\u7684\u4e2a\u6570\n    int t = p - l2 + 1;\n    root-&gt;left = buildtree(l1 + 1, l1 + t, l2, p);\n    root-&gt;right = buildtree(l1 + t + 1, r1, p + 1, r2 - 1);\n    return root;\n}\n\n// \u4e2d\u5e8f\u904d\u5386\nvoid traversal(struct Node *root)\n{\n    if (root == nullptr)\n        return;\n    traversal(root-&gt;left);\n    cout &lt;&lt; root-&gt;data &lt;&lt; \" \";\n    traversal(root-&gt;right);\n}\n\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i)\n        cin &gt;&gt; pre[i];\n    for (int i = 0; i &lt; n; ++i)\n        cin &gt;&gt; post[i];\n    struct Node *root = buildtree(0, n - 1, 0, n - 1);\n    traversal(root);\n    return 0;\n}\n</code></pre>"}]}